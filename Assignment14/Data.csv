,SRC,TRG
0,write a python program to add two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 + num2
print(f'Sum: {sum}')"
1,write a python function to add two user provided numbers and return the sum,"def add_two_numbers(num1, num2):
    sum = num1 + num2
    return sum"
2,write a program to find and print the largest among three numbers,"num1 = 10
num2 = 12
num3 = 14
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(f'largest:{largest}')"
3,write a program to find and print the smallest among three numbers,"num1 = 10
num2 = 12
num3 = 14
if (num1 <= num2) and (num1 <= num3):
   smallest = num1
elif (num2 <= num1) and (num2 <= num3):
   smallest = num2
else:
   smallest = num3
print(f'smallest:{smallest}')"
4,Write a python function to merge two given lists into one,"def merge_lists(l1, l2):
    return l1 + l2"
5,Write a program to check whether a number is prime or not,"num = 337
if num > 1:
   for i in range(2, num//2 + 1):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(f""{i} times {num//i} is {num}"")
           break
   else:
       print(f""{num} is a prime number"")
else:
   print(f""{num} is not a prime number"")"
6,Write a python function that prints the factors of a given number,"def print_factors(x):
   print(f""The factors of {x} are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
7,Write a program to find the factorial of a number,"num = 13
factorial = 1
if num < 0:
   print(""No factorials for negative numbers!"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(f""The factorial of {num} is {factorial}"")"
8,"Write a python function to print whether a number is negative, positive or zero","def check_pnz(num):
    if num > 0:
       print(""Positive number"")
    elif num == 0:
       print(""Zero"")
    else:
       print(""Negative number"")"
9,Write a program to print the multiplication table of a given number,"num = 9
for i in range(1, 11):
   print(f""{num} x {i} = {num*i}"")"
10,"Write a python function to print powers of 2, for given number of terms","def two_power(terms):
    result = list(map(lambda x: 2 ** x, range(terms)))
    print(f""The total terms are: {terms}"")
    for i in range(terms):
       print(f""2^{i} = {result[i]}"")"
11,Write a program to filter the numbers in a list which are divisible by a given number,"my_list = [11, 45, 74, 89, 132, 239, 721, 21]
num = 3
result = list(filter(lambda x: (x % num == 0), my_list))
print(f""Numbers divisible by {num} are {result}"")"
12,Write a python function that returns the sum of n natural numbers,"def sum_natural(num):
    if num < 0:
       print(""Please enter a positive number!"")
    else:
       sum = 0
       while(num > 0):
           sum += num
           num -= 1
       return num"
13,Write a program to swap first and last elements in a list,"my_list = [1, 2, 3, 4, 5, 6]
my_list[0], my_list[-1] = my_list[-1], my_list[0]"
14,"Write a python function to find the area of a circle, whose radius is given","def findArea(r): 
    PI = 3.142
    return PI * (r*r)"
15,Write a program to print the sum of squares of first n natural numbers,"n = 21
sum_n = 0
for i in range(1, n+1):
    sum_n += i**2
print(sum_n)"
16,Write a program to print the length of a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9]
print(len(my_list))"
17,Write a pythno function to print the length of a given tuple,"my_tuple = (1, 2, 3, 4, 5, 6, 7, 8)
print(len(my_tuple))"
18,"Write a python function to print the elements of a given list, one element in a line","def custom_print(l):
    for _ in l:
        print(_)"
19,Write a python function to remove all the odd numbers from a list and return the remaining list,"def remove_odd(my_list):
    result = list(filter(lambda x: (x % 2 == 0), my_list))
    return result"
20,Write a python function to remove all the even numbers from a list and return the remaining list,"def remove_even(my_list):
    result = list(filter(lambda x: (x % 2 != 0), my_list))
    return result"
21,Write a function that takes two lists as input and returns a zipped list of corresponding elements,"def zip_list(list1, list2):
    return list(zip(list1, list2))"
22,Write a program to to print the contents of a given file,"file_name = 'temp.txt'
with open(file_name, 'r') as f:
    print(f.read())"
23,Write a functin that returns the LCM of two input numbers,"def lcm(a, b):
    if a>b:
        min_ = a
    else:
        min_ = b
    while True:
        if min_%a==0 and min_%b==0:
            break
        min_+=1
    return min_"
24,Write a program to print the unique elements in a list,"my_list = [1, 2, 4, 5, 2, 3, 1, 5, 4, 7, 8, 2, 4, 5, 2, 7, 3]
print(set(my_list))"
25,Write a function that returns the sum of digits of a given number,"def digisum(num):
    sum_=0
    while num > 0:
        dig = num % 10
        sum_+=dig
        num//=10
    return sum_"
26,Write a program to check and print whether a number is palindrome or not,"num = 12321
temp = num
rev = 0
while num > 0:
    dig = num % 10
    rev = rev*10 + dig
    num//=10
if temp==rev :
    print(""The number is a palindrome!"")
else:
    print(""The number isn't a palindrome!"")"
27,"Write a function that prints a given value, n number of times","def print_n(val, n):
    for _ in range(n):
        print(val)"
28,Write a function to find the area of sqaure,"def square_area(a):
    return a*a"
29,Write a function to find the perimeter of a square,"def square_perimeter(a):
    return 4*a"
30,Write a function to find the area of rectangle,"def rectangle_area(l, b):
    return l*b"
31,Write a function to find the permieter of a rectangle,"def rectangle_perimeter(l, b):
    return 2*(l+b)"
32,"Write a python function to find the area of a circle, whose radius is given","def findArea(r): 
    PI = 3.142
    return PI * (r*r)"
33,Write a function to calculate and return electricity bill. Units used are given. Price per unit is fixed and is increased after 750 units.,"def calc_elect_bill(units):
    if units > 0:
        if units <= 750:
            return 5*units
        else:
            return 5*(750) + 7*(units-750)
    else:
        return -1"
34,"Write a function to return day of a week, given the number","def give_day(n):
    day_dict = {1: 'Sunday', 2: 'Monday', 3: 'Tuesday', 4: 'Wednesday', 5: 'Thursday', 6: 'Friday', 7: 'Saturday'}
    return day_dict[n]"
35,Write a program to calculate and print the volume of a cylender,"r = 3
h = 5
pi = 3.14
volume = pi*(r**2)*h
print(volume)"
36,Write a function to calculate and return the average of input numbers,"def calc_avg(*args):
    if len(args) > 0:
        return sum(args)/len(args)
    return None"
37,"Write a function to calculate compound interest, given p, r, t","def comp_int(p, r, t):
    amount = p * (1 + (r/100))**t
    interest = amount - p
    return interest"
38,"Write a function to calculate simple interest, given p, r, t","def simp_int(p, r, t):
    interest = (p*r*t)/100
    return interest"
39,"Write a program to print a given string, replacing all the vowels with '_'","st = ""Where is this going? Could you please help me understand!""
vowels = ""AEIOUaeiou""
for v in vowels:
    st = st.replace(v, '_')
print(st)"
40,Write a functio to check whether a number if perfect or not,"def is_perfect(n):
    sum_ = 0
    for i in range(1, n//2 + 1):
        if n%i == 0:
            sum_+=i
    if sum_ == n:
        return True
    return False"
41,Write a function that returns seperate lists of positive and negative numbers from an input list,"def seperate_pn(l):
    pos_list = []
    neg_list = []
    for _ in l:
        if _<0:
            neg_list.append(_)
        else:
            pos_list.append(_)
    return pos_list, neg_list"
42,"Write a program to find and print the area of a triangle, whose hight and width are given.","h = 12
w = 11
area = 0.5*h*w
print(area)"
43,"Write a function to find acceleration, given u, v and t","def acc(u, v, t):
    return (v-u)/t"
44,Write a lambda function to multiply two numbers,"multiply = lambda a, b: a*b"
45,Write a lambda function to add two numbers,"add = lambda a, b: a+b"
46,Write a lambda function that gives True if the input number is even otherwise False,even = lambda a: True if a%2 == 0 else False
47,Write a lambda function to to give character grom it's ascii value,ascii = lambda a: chr(a)
48,Write a lambda function to that gives the number of digits in a number,dig_cnt = lambda a: len(str(a))
49,"Write a program to to check if a triangle is valid or not, given it's all three angles","def is_valid_triangle_angle(a, b c):
    if a+b+c == 180:
        return True
    return False"
50,"Write a program to to check if a triangle is valid or not, given it's all three sides' length","def is_valid_triangle_length(a, b c):
    if a>0 and b>0 and c>0:
        if a+b > c and a+c > b and b+c > a:
            return True
    return False"
51,Write a lambda functio that gives the word count in a statement.,count_word = lambda s: len(s.split(' '))
52,Write a program to extract and print digits of a number in reverse order. The number is input from user.,"num = int(input(""Enter a number with multiple digit: ""))
n=0
while num>0:
    a = num%10
    num = num - a
    num = num/10
    print(int(a),end="""")
    n = n + 1"
53,"Write a function that takes in height(m) and weight(kg), calculates BMI and prints the comments","def bmi(height: ""Meters"", weight: ""Kgs""):
    bmi = weight/(height**2) 
    print(""Your BMI is: {0} and you are "".format(bmi), end='')
    if ( bmi < 16):
       print(""severely underweight."")
    elif ( bmi >= 16 and bmi < 18.5):
       print(""underweight."")
    elif ( bmi >= 18.5 and bmi < 25):
       print(""healthy."")
    elif ( bmi >= 25 and bmi < 30):
       print(""overweight."")
    elif ( bmi >=30):
       print(""severely overweight."")"
54,Write a program that prints all the alphabets in a string and skips all other characters,"string = ""$john.snow#@Got.bad_ending/com""
for ch in string:
    if (ch>='A' and ch<='Z') or (ch>='a' and ch<='z'):
        print(ch, end='')
    else:
        pass"
55,Write a function that takes number of disks in tower of hanaoi problem and returns the minimum number of steps required,"def hanoi(x):
    if x == 1:
        return 1
    else:
        return 2*hanoi(x-1) + 1"
56,Write a lambda function to convert centimeters to inches,cm_to_inch = lambda x: x/2.54
57,Write a lambda function to find the union of two lists,"union = lambda a, b: list(set(a)|set(b))"
58,Write a lambda function to find the intersection of two lists,"intersection = lambda a, b: list(set(a)&set(b))"
59,Write a program that adds the square of two numbers and prints it,"a = 32
b = 21
result = a**2 + b**2
print(result)"
60,Write a python function to concat the input strings and there's also a choice for seperator,"def con_str(*args, sep = ' '):
  return sep.join(args)"
61,Write a program to print all the even numbers in a range,"r1, r2 = 1, 28
for _ in range(r1, r2+1):
  if _%2 == 0:
    print(_)"
62,write a python program to sort dictionary items,"dict1 = {'car': [7, 6, 3],  
             'bike': [2, 10, 3],  
             'truck': [19, 4]}
print(f""The original dictionary is : {str(dict1)}"") 
res = dict() 
for key in sorted(dict1): 
    res[key] = sorted(dict1[key])
print(f""The sorted dictionary : {str(res)}"")"
63,write a program to display date and time,"import datetime
now = datetime.datetime.now()
time= now.strftime(""%Y-%m-%d %H:%M:%S"")
print(f""Current date and time : {time}"")"
64,write a program to return the absolute value,"num = -10
print(f'Absolute of {num} is {abs(num)}')"
65,write a python program to check the length of list,"sample_list = ['a','b','c']
print(f'length of sample_list is {len(sample_list)}')"
66,write a Python program to calculate number of days between two dates.,"from datetime import date
f_date = date(2019, 4, 15) # YYYY/MM/DD
l_date = date(2020, 4, 15) # YYYY/MM/DD
delta = l_date - f_date
print(f'No of days between {f_date} and {l_date} is:{delta.days}')"
67,write a Python program to convert Python objects into JSON strings.,"import json
python_dict =  {""name"": ""David"", ""age"": 6, ""class"":""I""}
json_dict = json.dumps(python_dict, sort_keys=True, indent=4)
print(f""json dict : {json_dict}"")"
68,write a Python program to get the largest number from a list,"def max_num_in_list(list):
    max = list[0]
    for a in list:
        max = a if a > max else max
    return max
print(f'max_num_in_list [1, 10, -8, 0], Ans:{max_num_in_list([1, 10, -8, 0])}')"
69,write a Python program to remove duplicates from a list,"a = [10,20,30,20,10,50,60,40,80,50,40]
dup_items = set()
uniq_items = []
for x in a:
    if x not in dup_items:
        uniq_items.append(x)
        dup_items.add(x)
print(f'dup_items:{dup_items}')"
70,write a Python program to flatten a shallow list,"import itertools
original_list = [[2,4,3],[1,5,6], [9], [7,9,0], [1,2,3,4]]
new_merged_list = list(itertools.chain(*original_list))
print(f'merged list/flatten:{new_merged_list}')"
71,write a Python program to create multiple list,"obj = {}
for i in range(1, 11):
    obj[str(i)] = []
print(f'create multiple list:{obj}')"
72,write a Python program to merge two dictionaries,"d1 = {'a': 100, 'b': 200}
d2 = {'x': 300, 'y': 200}
d = d1.copy()
d.update(d2)
print(f'merge two dictionaries:{d}')"
73,write a Python program to Sum all the items in a dictionary,"my_dict = {'data1':100,'data2':-54,'data3':247}
print(f'Sum all the items in a dictionary:{sum(my_dict.values())}')"
74,write a python program to Get the maximum and minimum value in a dictionary,"my_dict = {'x':500, 'y':5874, 'z': 560}
key_max = max(my_dict.keys(), key=(lambda k: my_dict[k]))
key_min = min(my_dict.keys(), key=(lambda k: my_dict[k]))
print('Maximum Value in a dictionary: ',my_dict[key_max])
print('Minimum Value in a dictionary: ',my_dict[key_min])"
75,write a python program to do nothing for a condition,"if 1 + 1 == 2:
    pass # Nothing"
76,write a python program to make use of enumerate method,"for count, value in enumerate(obj):
    print(count, value)"
77,write a python program to make use of setdefault for missing dictionary keys,"a_dict = {'a':1}
a_dict.setdefault('b',2)
print(f'After appending with new value:{a_dict}')"
78,write a python program to make use of maps,"def square(number):
    return number ** 2
numbers = [1, 2, 3, 4, 5]
squared = map(square, numbers)
print(f'mapped numbers:{list(squared)}')"
79,write a python program to make use of modulo operator,print(f'modulo 15 % 4: Sol->{15 % 4}')
80,write a python program to explain enclosing and global scope,"x = 'global'
def f():
    x = 'enclosing'
    def g():
        print(x)
    g()
    return x
obj1 = f()
print('explain global scope:',obj1)"
81,write a python program to expain local and global scope,"def f1():
    x = 'enclosing'
    def g():
        x = 'local'
        return x
    x=g()
    return x
obj2 = f1()
print('explain local scope:',obj2)"
82,write a python program to make use of regular expression for matching,"import re
print('Find the characters in the given string:',re.findall(r'[a-z]+', '123FOO456', flags=re.IGNORECASE))"
83,write a python program to make use of regular expression for matching,"s = 'foo123bar'
m = re.findall('123', s)
print('find the number position:',m)"
84,write a python program to convert lower string to UPPERCASE,"a = 'string'
print(f'convert lowercase to uppercase:{a.upper()}')"
85,write a python program to convert uppercase string to lower,"a = 'STRING'
print(f'convert lowercase to uppercase:{a.lower()}')"
86,write a Python Program to Find the Square Root,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
87,write a Python Program to Convert Kilometers to Miles,"kilometers = 10.0
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
88,write a Python Program to Convert Celsius To Fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
89,"write a Python Program to Check if a Number is Positive, Negative or 0","num = 10
if num > 0:
   print(""Positive number"")
elif num == 0:
   print(""Zero"")
else:
   print(""Negative number"")"
90,Python Program to Check if a Number is Odd or Even,"num = 100
if (num % 2) == 0:
   print(""{0} is Even"".format(num))
else:
   print(""{0} is Odd"".format(num))"
91,Python Program to Display the multiplication Table,"num = 12
for i in range(1, 11):
   print(num, 'x', i, '=', num*i)"
92,write a program for Rolling the dices,"import random
min = 1
max = 6
print(""Rolling the dices...and the values are"",random.randint(min, max))
print(""Rolling the dices...and the values are"",random.randint(min, max))"
93,write a python program to calculate the average,"list1 = [1,3,4,5]
average = (sum(list1)) / len(list1)
print(f""the average score is:  {average} "")"
94,write a python program to print reverse list,print(f'reverese the given list elements:{list1[::-1]}')
95,write a python program for creating the thread,"import threading
from threading import Thread
import time
def print_time( threadName, delay):
    count = 0
    while count < 5:
        time.sleep(delay)
        count += 1
        print(""%s: %s"" % ( threadName, time.ctime(time.time()) ))"
96,write a python program to check a num is less than 1000,"def near_thousand(n):
      return ((abs(1000 - n) <= 100) or (abs(2000 - n) <= 100))
print('near to 1000',near_thousand(1000))
print('near to 1300',near_thousand(1300))"
97,write a python program to convert lower case to upper for list of elements,"x = ['ab', 'cd']
for i in x:
    print(i.upper())"
98,write a python program to break when the num is perfectly divisible,"i = 1
while True:
    if i%3 == 0:
        break
    print(i)
    i+= 1"
99,write a python program to check name exists in given list,"names1 = ['Amir', 'Bala', 'Chales']
for n in names1:
    name = n.lower()
    if 'amir' == name:
        print('Yes name exists:',name)
    else:
        print('No')"
100,write a python program to print a matrix as output,"matrix = [[1, 2, 3, 4],
       [4, 5, 6, 7],
       [8, 9, 10, 11],
       [12, 13, 14, 15]]
for i in range(0, 4):
    print(matrix[i][1], end = "" "")"
101,write a python program to calculate the time taken,"from time import localtime
activities = {8: 'Sleeping',
              9: 'Commuting',
              17: 'Working',
              18: 'Commuting',
              20: 'Eating',
              22: 'Resting' }
time_now = localtime()
hour = time_now.tm_hour
for activity_time in sorted(activities.keys()):
    if hour < activity_time:
        print (activities[activity_time])
        break
else:
    print ('Unknown, AFK or sleeping!')"
102,write a python program to search a key in the text file,"fname = 'sample.txt'
l='keyword' # Enter letter to be searched
k = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        for i in words:
            if(i==l):
                k=k+1
print(""Occurrences of the letter:"",k)"
103,write a python program to expalin list comprehension and print alternative values,"t = (1, 2, 4, 3, 8, 9)
print([t[i] for i in range(0, len(t), 2)])"
104,write a python program to sort tuple values,"a=(2,3,1,5)
tuple_sorted = sorted(a)
print(tuple(tuple_sorted))"
105,write a python program to multiple two list values,"l1=[1,2,3]
l2=[4,5,6]
print('multiply two list values:',[x*y for x in l1 for y in l2])"
106,write the list comprehension to pick out only negative integers from a given list ‘l’.,"l1=[1,2,3,-4,-8]
print('negative integers:', [x for x in l1 if x<0])"
107,write a python program to convert all list elements to upper case,"s=[""pune"", ""mumbai"", ""delhi""]
print([(w.upper(), len(w)) for w in s])"
108,write a python program to expalin python zip method,"l1=[2,4,6]
l2=[-2,-4,-6]
for i in zip(l1, l2):
	print(i)"
109,write a python program to add two list using python zip method,"l1=[10, 20, 30]
l2=[-10, -20, -30]
l3=[x+y for x, y in zip(l1, l2)]
print('added two list:',l3)"
110,write a list comprehension for number and its cube,"l=[1, 2, 3, 4, 5, 6, 7, 8, 9]
print([x**3 for x in l])"
111,write a list comprehension for printing rows into columns and vv,"l=[[1 ,2, 3], [4, 5, 6], [7, 8, 9]]
print([[row[i] for row in l] for i in range(3)])"
112,write a list comprehension for printing rows into columns and vv,"def unpack(a,b,c,d):
    print(a+d)
x = [1,2,3,4]
unpack(*x)"
113,write a python program to use python lambda function,"lamb = lambda x: x ** 3
print(lamb(5))"
114,write a python program to multiply a string n times,"a = 'python'
print(a*5)"
115,write a python to check two numbers are greater than or equal or less than,"def maximum(x, y):
    if x > y:
        return x
    elif x == y:
        return 'The numbers are equal'
    else:
        return y
print(maximum(2, 3))"
116,write a python to dict to zip and print as dictionary elements in original form,"a={""a"":1,""b"":2,""c"":3}
b=dict(zip(a.values(),a.keys()))
print(b)"
117,write a python program to delete an dictionary element,"a={1:5,2:3,3:4}
a.pop(3)
print(a)"
118,write a python program to check two dictionary are equal or not,"d1 = {""john"":40, ""peter"":45}
d2 = {""john"":466, ""peter"":45}
d1 == d2"
119,write a python program to print only dictionary keys as list,"d = {""john"":40, ""peter"":45}
print(list(d.keys()))"
120,write a python program to check two lists are equal or not,"a=[1, 4, 3, 5, 2]
b=[3, 1, 5, 2, 4]
print(a==b)"
121,write a python program to check two lists are equal or not,"a=frozenset(set([5,6,7]))
print(a)"
122,write a python program to sum the set of unqiue elements,"a={5,6,7}
print(sum(a,5))"
123,write a python program to implement try catch code,"try:
    s={5,6}
    s*3
except Exception as e:
    print(e)"
124,write a python program to count the len of unique elements,"nums = set([1,1,2,3,3,3,4,4])
print(len(nums))"
125,write a python program to split in python,"print('abcdefcdghcd'.split('cd', 2))"
126,write a python program to add title to string,print('ab cd-ef'.title())
127,write a python program to print equal lenght of string,print('ab'.zfill(5))
128,write a python program to use string replace,"print('abcdef12'.replace('cd', '12'))"
129,write a python program to check string istitle,"str1 = 'Hello!2@#World'
if str1.istitle():
    print('Yes string is title')"
130,write a python program to do lstrip on string,print('xyyzxxyxyy'.lstrip('xyy'))
131,write a python program to check identifier/keyword,print('for'.isidentifier())
132,write a python program to check is an num/int,print('11'.isnumeric())
133,write a python program to check is an variable is printable,print('1@ a'.isprintable())
134,write a python program to check it contains any space,print(''''''.isspace())
135,write a python program to check is an title,print('HelloWorld'.istitle())
136,write a python program to check is all are num/int,"print('ab,12'.isalnum())"
137,write a python program to check is all are alphanumeric,print('ab'.isalpha())
138,write a python program to check is all are digit,print('0xa'.isdigit())
139,write a python program to use f string,"var1 = 'python language'
print(f'f-string is an good feature in {var1}')"
140,write a python program to iterate an dict and concatenate,"D=dict(p='san', q='foundry')
print('{p}{q}'.format(**D))"
141,write a python program to replace blank space to 1,"a='1 0 0 1'
print(a.replace(' ', '1'))"
142,write a python program to explain the generator,"def f11(x):
    yield x+1
g=f11(8)
print(next(g))"
143,write a python program to replace blank space to 1,"def f12(x):
    yield x+1
    print(""test"")
    yield x+2
g=f12(9)
print(next(g))"
144,write a python program to replace blank space to 1,"a = re.compile('[0-9]')
z= a.findall('3 trees')
print(z)"
145,write a python program to print current working directory,"import os
print(os.getcwd())"
146,write a python program to print the ascii value of a string,print([ord(ch) for ch in 'abc'])
147,write a python program to use extend in list/ append to a list,"a=[13,56,17]
a.append([87])
a.extend([45,67])
print(a)"
148,write a python program to replace blank space to 1,"my_string = 'balaji'
k = [print(i) for i in my_string if i not in ""aeiou""]
print('Not a vowel',k)"
149,write a python program to add and square a range of number,x = [i**+1 for i in range(3)]; print(x)
150,write a python program to replace blank space to 1,"print([i+j for i in ""abc"" for j in ""def""])"
151,write a python program to multiply two list with list comprehensive,"l1=[1,2,3]
l2=[4,5,6]
print([x*y for x in l1 for y in l2])"
152,write a python program to print only digit or only apha charac in a given list,"l=[""good"", ""oh!"", ""excellent!"", ""#450""]
print([n for n in l if n.isalpha() or n.isdigit()])"
153,write a python program to print todays date,"tday=datetime.date.today()
print(tday)"
154,write a python program to check tuple are immutable,"a=(1,2,3)
try:
    a = a+1
except Exception as e:
    print(e)"
155,write a python program to calculate factorial sum using list comprehensive,"import functools 
n =5
print(functools.reduce(lambda x, y: x * y, range(1, n+1)))"
156,write a python program to print len of each characters,"words = ['cat', 'window', 'defenestrate']
for w in words:
    print(w, len(w))"
157,write a python program to make increment on each call of method using lambda function,"def make_incrementor(n):
    return lambda x: x + n
f = make_incrementor(42)
f(0)
print(f(1))"
158,write a python program to sort using list comprehensive,"pairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four')]
pairs.sort(key=lambda pair: pair[1])
print(pairs)"
159,"write a python program to del the first element of the array/list
 write a python program to replace the first character of a given word
 write a python program to find a string in a given phrase
 write a python program to expalin the use of f-string","a = [-1, 1, 66.25, 333, 333, 1234.5]
del a[0]
print(a)
word = ""goal""
word = ""f"" + word[1:]
print(word)
phrase = ""the surprise is in here somewhere""
print(phrase.find(""surprise""))
n = 3
m = 4
print(f""{n} times {m} is {n*m}"")"
160,write a python program to multiply three numbers,"num1 = 1.5
num2 = 6.3
num3 = -2.3
product = num1 * num2 * num3
print(f'Product: {product}')"
161,"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide_first_number_by_second(num1, num2):
    return (num1 // num2), (num1 % num2)"
162,write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest_and_smallest(list_of_nums):
    if list_of_nums:
        return max(list_of_nums), min(list_of_nums)
    else:
        return"
163,"write a recursive python function to print the nth fibonacci number, where n is provided as the argument","def fibonacci_recursive(n):
   if n <= 1:
       return n
   else:
       return (recur_fibo(n-1) + recur_fibo(n-2))"
164,write a python function that would read the given input file path and print its contents,"def read_and_print_file(filepath):
    with open(filepath, ""r"") as infile:
        print( infile.read() )"
165,write a python program that would print the first n positive integers using a for loop,"n = 62
for num in range(n):
    print(num)"
166,write a python function that returns the input list sorted in ascending order,"def sort_ascending(list_to_be_sorted):
    return sorted(list_to_be_sorted)"
167,write a python function that returns the input list sorted in descending order,"def sort_descending(list_to_be_sorted):
    return sorted(list_to_be_sorted, reverse=True)"
168,"write a python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n(n):
    return ( n * (n+1) ) // 2"
169,"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n_recursive(n):
    if n == 0:
        return 0
    return sum_first_n_recursive(n-1) + n"
170,"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter_with_key_value(list_of_dicts, key, value):
    return list( filter( lambda x: x.get(key) == value, list_of_dicts ) )"
171,write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,"def reverse(seq):
    SeqType = type(seq)
    emptySeq = SeqType()
    if seq == emptySeq:
        return emptySeq
    restrev = reverse(seq[1:])
    first = seq[0:1]
    result = restrev + first
    return result"
172,write a python function that returns the square of a given input number,"def square(x):
    return x**2"
173,write a python program that asks for user input and prints the given input,"a = input(""User Input"")
print(a)"
174,write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift_and_scale(list_of_nums, mean, std):
    return [ (x-mean) / std for x in list_of_nums ]"
175,write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip_(list_of_seq):
    return list(zip(*list_of_seq))"
176,write python program that would merge two dictionaries by adding the second one into the first,"a = {""a"": 1, ""b"": 3}
b = {""c"": 1, ""d"": 3}
a.update(b)"
177,write a python function that would reverse the given string,"def reverse_string(str_to_be_reversed):
    return str_to_be_reversed[::-1]"
178,"write a python program that would print ""Hello World""","print(""Hello World"")"
179,write a python program that would swap variable values,"a = 10
b = 15
a, b = b, a"
180,write a python program that iterates over a dictionary and prints its keys and values,"a = {""a"":1, ""b"":2, ""c"":3, ""d"":4}
for k, v in a.items():
    print(k, v)"
181,write a python function that would print the ASCII value of a given character,"def print_ascii(char):
    print(ord(char))"
182,write a python function that takes in two numbers and returns their HCF,"def hcf(num1, num2):
    smaller = num1 if num1 < num2 else num2
    for i in range(1, smaller+1):
        if (num1 % i == 0) and (num2 % i == 0):
            hcf = i
    return hcf"
183,write a python function that takes in two numbers and returns their LCM,"def lcm(num1, num2):
    bigger = num1 if num1 > num2 else num2
    while True:
        if (bigger % num1 == 0) and (bigger % num2 == 0):
            break
        bigger += 1
    return bigger"
184,"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive_sum(n):
    if n <= 1:
        return n
    else:
        return n + recursive_sum(n-1)"
185,write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete_last_element(list_to_be_processed):
    deleted_element = list_to_be_processed.pop()
    return list_to_be_processed, deleted_element"
186,write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square_list_elements(list_to_be_squared):
    return list( map(lambda x: x**2, list_to_be_squared) )"
187,"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","def find_integer_square_roots(num):
    found = False
    for k in range(1, (num//2)+1):
        if ((k**2)==num):
            found = True
            break
    if not found:
        return ""Error - the square root is not an integer""
    return -k, k"
188,write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input_num = 27
while input_num:
    print(input_num)
    input_num -= 1"
189,"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
190,write a python program uses else with for loop,"seq = ""abcde""
for k in seq:
    if k == ""f"":
        break
else:
    print(""f Not Found!"")"
191,Write a function to return the mean of numbers in a list,"def cal_mean(num_list:list)->float:
    if num_list:
        return sum(num_list)/len(num_list)
    else:
        return None"
192,Write a function to return the median of numbers in a list,"def cal_median(num_list:list)->float:
    if num_list:
        if len(num_list)%2 != 0:
            return sorted(num_list)[int(len(num_list)/2) - 1]
        else:
            return (sorted(num_list)[int(len(num_list)/2) - 1] + sorted(num_list)[int(len(num_list)/2)])/2
    else:
        return None"
193,Write a function to return the area of triangle by heros formula,"def cal_triangle_area(a:float,b:float,c:float)->float:
    if a or b or c:
        s = (a+b+c)/2
        if s>a and s>b and s>c:
            area = (s*(s-a)*(s-b)*(s-c))**(1/2)
            return round(area,2)
        else:
            return None
    return None"
194,Write a function to return the area of a equilateral triangle,"def cal_eq_triangle_area(a:float)->float:
    if a:
        return (3**(1/2))*(a**2)/4
    else:
        return None"
195,Write a function to return the area of a right angle triangle,"def cal_rt_triangle_area(base:float,height:float)->float:
    if base and height:
        return (base*height)/2
    else:
        return None"
196,Write a function to return the cartisian distance of a point from origin,"def cal_dist_from_orign(x:float,y:float)->float:
    return (x**2+y**2)**(1/2)"
197,Write a function to return the cartisian distance between two points,"def cal_cart_distance(x1:float,y1:float,x2:float,y2:float)->float:
    return ((x1-x2)**2+(y1-y2)**2)**(1/2)"
198,Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root_type(a:float,b:float,c:float):
    if b**2-4*a*c >= 0:
        return 'real'
    else:
        return 'imaginary'"
199,Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum_of_roots(a:float,c:float):
    if a:
        return c/a
    else:
        return None"
200,Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod_of_roots(a:float,b:float):
    if a:
        return -b/a
    else:
        return None"
201,Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"def roots_of_qad_eq(a:float,b:float,c:float):
    d = b**2-4*a*c
    if d >= 0:
        return (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a
    else:
        return None"
202,Write a function to return the profit or loss based on cost price and selling price,"def find_profit_or_loss(cp,sp):
    if cp > sp:
        return 'loss', cp-sp
    elif cp < sp:
        return 'profit', sp-cp
    else:
        return 'no profit or loss', 0"
203,Write a function to return the area of a rectangle,"def cal_area_rect(length, breadth):
    return length*breadth"
204,Write a function to return the area of a square,"def cal_area_square(side):
    return side**2"
205,Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal_area_rhombus(q1,q2):
    return (q1*q2)/2"
206,Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal_area_trapezium(a,b,h):
    return h*(a+b)/2"
207,Write a function to return the area of a circle of raidus r,"def cal_area_circle(r):
    pi = 3.14
    return pi*r**2"
208,Write a function to return the circumference of a circle,"def cal_circumference(r):
    pi = 3.14
    return 2*pi*r"
209,Write a function to return the perimeter of a rectangle,"def cal_perimeter_rect(length, bredth):
    return 2*(length+bredth)"
210,Write a function to return the perimeter of a triangle,"def cal_perimeter_triangle(s1,s2,s3):
    return s1+s2+s3"
211,Write a function to return the perimeter of a square,"def cal_perimeter_square(side):
    return 4*side"
212,Write a function to return the perimeter of an equilateral triangle,"def cal_perimeter_eq_triangle(a):
    return 3*a"
213,Write a function to return the perimeter of a isoscales triangle,"def cal_perimeter_iso_triangle(s1,s2):
    return 2*s1+s2"
214,Write a function to return the area of an ellipse,"def cal_area_ellipse(minor, major):
    pi = 3.14
    return pi*(minor*major)"
215,Write a function to return the lateral surface area of a cylinder,"def cal_cylinder_lat_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius*height"
216,Write a function to return the curved surface area of a cone,"def cal_cone_curved_surf_area(slant_height,radius):
    pi=3.14
    return pi*radius*slant_height"
217,Write a function to return the total surface area of a cube of side a,"def cal_surface_area_cube(a):
    return 6*(a**2)"
218,"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal_surface_area_cuboid(l,b,h):
    return 2*(l*b+b*h+h*l)"
219,Write a function to return the surface area of a sphere,"def cal_area_sphere(radius):
    pi = 3.14
    return 4*pi*(radius**2)"
220,Write a function to return the surface area of a hemi-sphere,"def cal_area_hemisphere(radius):
    pi = 3.14
    return 2*pi*(radius**2)"
221,Write a function to return the total surface area of a cylinder,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
222,Write a function to return the lateral surface area of a cone,"def cal_cone_lateral_surf_area(height,radius):
    pi=3.14
    return pi*radius*(((height**2)+(radius**2))**(1/2))"
223,Write a function to return the volume of a cylinder,"def cal_cylinder_volume(height, radius):
    pi=3.14
    return pi*(radius**2)*height"
224,Write a function to return the volume of a cone,"def cal_cone_volume(height,radius):
    pi=3.14
    return pi*(radius**2)*height/3"
225,Write a function to return the volume of a hemi sphere,"def cal_hemisphere_volume(radius:float)->float:
    pi=3.14
    return (2/3)*pi*(radius**3)"
226,Write a function to return the volume of a sphere,"def cal_sphere_volume(radius:float)->float:
    pi=3.14
    return (4/3)*pi*(radius**3)"
227,Write a function to return the volume of a cuboid,"def cal_cuboid_volume(length:float, breadth:float, height:float)->float:
    return length*breadth*height"
228,Write a function to return the volume of a cube,"def cal_cube_volume(side:float)->float:
    return side**3"
229,Write a function to return the speed of moving object based of distance travelled in given time,"def cal_speed(distance:float,time:float)->float:
    return distance/time"
230,Write a function to return the distance covered by a moving object based on speend and given time,"def cal_distance(time:float,speed:float)->float:
    return time*speed"
231,Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal_time(distance:float,speed:float)->float:
    return distance/speed"
232,Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal_torque(force:float,theta:float,r:float)->float:
    import math
    return force*r*math.sin(theta)"
233,Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal_angular_velocity(angular_dist:float,time:float)->float:
    return angular_dist/time"
234,Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal_focal_length_of_lense(u:float,v:float)->float:
    return (u*v)/(u+v)"
235,Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal_gforce(mass1:float,mass2:float, distance:float)->float:
    g = 6.674*(10)**(-11)
    return (g*mass1*mass2)/(distance**2)"
236,Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal_current(resistance:float, voltage:float)->float:
    return voltage/resistance"
237,Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal_total_cap_in_parallel(cap_list:list)->float:
    return sum(cap_list)"
238,Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal_total_res_in_parallel(res_list:list)->float:
    return sum([1/r for r in res_list])"
239,Write a function to calculate the total resistance of resistances in series in a given list,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
240,Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal_mi_ring(mass:float,radius:float)->float:
    return mass*(radius**2)"
241,Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
242,"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find_pressure_of_ideal_gas(volume:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/volume"
243,Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/pressure"
244,Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find_temp_of_ideal_gas(pressure:float, volume:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (pressure*volume)/n*r"
245,"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal_final_velocity(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity + accelration*time"
246,"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
247,Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal_half_life(initail_quatity:float, time_elapsed:float, half_life:float)->float:
    return initail_quatity*((1/2)**(time_elapsed/half_life))"
248,Write a function to calculate the new selling price based on discount percentage,"def cal_sp_after_discount(sp:float,discount:float)->float:
    return sp*(1 - discount/100)"
249,"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get_si(p:float, r:float, t:float)->float:
    return (p*r*t)/100"
250,"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get_ci(p:float, r:float, t:float, n:float)->float:
    return round(p*((1+(r/(n*100)))**(n*t)) - p,2)"
251,Write a function to calculate the energy released by converting mass m in kg to energy,"def cal_energy_by_mass(mass:float)->float:
    c = 300000
    return mass * (c**2)"
252,Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal_ke(mass:float,velocity:float)->float:
    return (mass*(velocity)**2)/2"
253,Write a function to calculate the potential energy of an object of mass m at height h,"def cal_pe(mass:float,height:float)->float:
    g = 9.8
    return (mass*g*height)"
254,Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal_electrostatic_force(q1,q2,d):
    k = 9*(10**9)
    return (k*q1*q2)/(d**2)"
255,Write a function to calculate the density given mass and volume,"def cal_density(mass,volume):
    return (mass/volume)"
256,"Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius
     Return the converted temprature","def temp_converter(temp,temp_given_in = 'f'):
    if temp_given_in.lower() == 'f': # Convert to C
        return (temp - 32) * (5/9)
    else: # Convert to F
        return (temp * 9/5) + 32"
257,Python code to Get Kth Column of Matrix,"def kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2):
    print(""The original list is : "" + str(test_list))
    K =k
    res = list(zip(*test_list)[K])
    print(""The Kth column of matrix is : "" + str(res))"
258,python code to print all possible subarrays using recursion,"def printSubArrays(arr, start, end):
    if end == len(arr):
        return
    elif start > end:
        return printSubArrays(arr, 0, end + 1)
    else:
        print(arr[start:end + 1])
        return printSubArrays(arr, start + 1, end)
arr = [1, 2, 3]
printSubArrays(arr, 0, 0)"
259,Python Program to find sum of nested list using Recursion,"total = 0
def sum_nestedlist(l):
    global total
    for j in range(len(l)):
        if type(l[j]) == list:
            sum_nestedlist(l[j])
        else:
            total += l[j]
sum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])
print(total)"
260,python program to find power of number using recursion,"def power(N, P):
    if (P == 0 or P == 1):
        return N
    else:
        return (N * power(N, P - 1))
print(power(5, 2))"
261,python program to Filter String with substring at specific position,"def f_substring():
    test_list = ['program ', 'to', 'filter', 'for', 'substring']
    print(""The original list is : "" + str(test_list))
    sub_str = 'geeks'
    i, j = 0, 5
    res = list(filter(lambda ele: ele[i: j] == sub_str, test_list))
    print(""Filtered list : "" + str(res))"
262,python code to remove punctuation from the string,"def r_punc():
    test_str = ""end, is best : for ! Nlp ;""
    print(""The original string is : "" + test_str)
    punc = '''!()-[]{};:'""\, <>./?@#$%^&*_~'''
    for ele in test_str:
        if ele in punc:
            test_str = test_str.replace(ele, """")
    print(""The string after punctuation filter : "" + test_str)"
263,Python program to implement Gnome Sort,"def gnomeSort(arr, n):
    index = 0
    while index < n:
        if index == 0:
            index = index + 1
        if arr[index] >= arr[index - 1]:
            index = index + 1
        else:
            arr[index], arr[index - 1] = arr[index - 1], arr[index]
            index = index - 1
    return arr
arr = [34, 2, 10, -9]
n = len(arr)
arr = gnomeSort(arr, n)
print(""Sorted seqquence after applying Gnome Sort :"")
for i in arr:
    print(i)"
264,python program to implement stooge sort,"def stoogesort(arr, l, h):
    if l >= h:
        return
    if arr[l] > arr[h]:
        t = arr[l]
        arr[l] = arr[h]
        arr[h] = t
    if h - l + 1 > 2:
        t = (int)((h - l + 1) / 3)
        stoogesort(arr, l, (h - t))
        stoogesort(arr, l + t, (h))
        stoogesort(arr, l, (h - t))
arr = [2, 4, 5, 3, 1]
n = len(arr)
stoogesort(arr, 0, n - 1)
for i in range(0, n):
    print(arr[i], end= \' \')"
265,Python program to find the  difference between two times,"def difference(h1, m1, h2, m2):
    t1 = h1 * 60 + m1
    t2 = h2 * 60 + m2
    if (t1 == t2):
        print(""Both are same times"")
        return
    else:
        diff = t2 - t1
    h = (int(diff / 60)) % 24
    m = diff % 60
    print(h, "":"", m)
difference(7, 20, 9, 45)
difference(15, 23, 18, 54)
difference(16, 20, 16, 20)"
266,Python program to convert time from 12 hour to 24 hour format,"def convert24(str1):
    if str1[-2:] == ""AM"" and str1[:2] == ""12"":
        return ""00"" + str1[2:-2]
    elif str1[-2:] == ""AM"":
        return str1[:-2]
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"":
        return str1[:-2]
    else:
        return str(int(str1[:2]) + 12) + str1[2:8]
print(convert24(""08:05:45 PM""))"
267,Python 3 program to find time for a given angle.,"def calcAngle(hh, mm):
    hour_angle = 0.5 * (hh * 60 + mm)
    minute_angle = 6 * mm
    angle = abs(hour_angle - minute_angle)
    angle = min(360 - angle, angle)
    return angle"
268,python function to print all time when angle between hour hand and minute,"def printTime(theta):
    for hh in range(0, 12):
        for mm in range(0, 60):
            if (calcAngle(hh, mm) == theta):
                print(hh, "":"", mm, sep="""")
                return
    print(""Input angle not valid."")
    return
theta = 90.0
printTime(theta)"
269,write a python function to count number of times a function is called,"def counter(fn):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count += 1
        print(f'Function {fn.__name__} was called {count} times.')
        return fn(*""args, **kwargs)    
    return inner"
270,write a python function to remove duplicate items from the list,"def remove_duplicatesinlist(lst):
    return len(lst) == len(set(lst))"
271,write a python program to add and print two user defined list using map,"input_string = input(""Enter a list element separated by space "")
list1  = input_string.split()
input_string = input(""Enter a list element separated by space "")
list2  = input_string.split()
list1 = [int(i) for i in list1] 
list2 = [int(i) for i in list2] 
result = map(lambda x, y: x + y, list1, list2) 
print(list(result))"
272,write a python function to convert list of strings to list of integers,"def stringlist_to_intlist(sList): 
  return(list(map(int, sList)))"
273,write a python function to map multiple lists using zip,"def map_values(*args):
  return set(zip(*args))"
274,"write a generator function in python to generate infinite square of numbers using yield
     An Infinite loop to generate squares","def nextSquare(): 
    i = 1;  
    while True: 
        yield i*i                 
        i += 1"
275,"write a python generator function for generating Fibonacci Numbers 
     Initialize first two Fibonacci Numbers  
     One by one yield next Fibonacci Number","def fib(limit): 
    a, b = 0, 1  
    while a < limit: 
        yield a 
        a, b = b, a + b"
276,write a python program which takes user input tuple and prints length of each tuple element,"userInput = input(""Enter a tuple:"")
x = map(lambda x:len(x), tuple(x.strip() for x in userInput.split(',')))
print(list(x))"
277,write a python function using list comprehension to find even numbers in a list,"def find_evennumbers(input_list):
  list_using_comp = [var for var in input_list if var % 2 == 0] 
  return list_using_comp"
278,write a python function to return dictionary of two lists using zip,"def dict_using_comp(list1, list2):
  dict_using_comp = {key:value for (key, value) in zip(list1, list2)} 
  return dict_using_comp"
279,Write a function to get list of profanity words from Google profanity URL,"def profanitytextfile():
    url = ""https://github.com/RobertJGabriel/Google-profanity-words/blob/master/list.txt""
    html = urlopen(url).read()
    soup = BeautifulSoup(html, features=""html.parser"")
    textlist = []
    table = soup.find('table')
    trs = table.find_all('tr')
    for tr in trs:
        tds = tr.find_all('td')
        for td in tds:
            textlist.append(td.text)
    return textlist"
280,write a python program to find the biggest character in a string,"bigChar = lambda word: reduce(lambda x,y: x if ord(x) > ord(y) else y, word)"
281,write a python function to sort list using heapq,"def heapsort(iterable):
    from heapq import heappush, heappop
    h = []
    for value in iterable:
        heappush(h, value)
    return [heappop(h) for i in range(len(h))]"
282,write a python function to return first n items of the iterable as a list,"def take(n, iterable):    
    import itertools
    return list(itertools.islice(iterable, n))"
283,write a python function to prepend a single value in front of an iterator,"def prepend(value, iterator):    
    import itertools
    return itertools.chain([value], iterator)"
284,write a python function to return an iterator over the last n items,"def tail(n, iterable):    
    from collections import deque
    return iter(deque(iterable, maxlen=n))"
285,"write a python function to advance the iterator n-steps ahead
     Use functions that consume iterators at C speed.
         feed the entire iterator into a zero-length deque
         advance to the empty slice starting at position n","def consume(iterator, n=None):
    import itertools
    from collections import deque
    ""Advance the iterator n-steps ahead. If n is None, consume entirely.""
    if n is None:
        deque(iterator, maxlen=0)
    else:
        next(itertools.islice(iterator, n, n), None)"
286,write a python function to return nth item or a default value,"def nth(iterable, n, default=None):
    from itertools import islice
    return next(islice(iterable, n, None), default)"
287,write a python function to check whether all elements are equal to each other,"def all_equal(iterable):
    from itertools import groupby
    g = groupby(iterable)
    return next(g, True) and not next(g, False)"
288,write a python function to count how many times the predicate is true,"def quantify(iterable, pred=bool):
    return sum(map(pred, iterable))"
289,write a python function to emulate the behavior of built-in map() function,"def pad_none(iterable):
    """"""Returns the sequence elements and then returns None indefinitely.
    Useful for emulating the behavior of the built-in map() function.
    """"""
    from itertools import chain, repeat
    return chain(iterable, repeat(None))"
290,write a python function to return the sequence elements n times,"def ncycles(iterable, n):
    from itertools import chain, repeat
    return chain.from_iterable(repeat(tuple(iterable), n))"
291,write a python function to return the dot product of two vectors,"def dotproduct(vec1, vec2):
    return sum(map(operator.mul, vec1, vec2))"
292,write a python function to flatten one level of nesting,"def flatten(list_of_lists):
    from itertools import chain
    return chain.from_iterable(list_of_lists)"
293,write a python function to repeat calls to function with specified arguments,"def repeatfunc(func, times=None, *args):
    from itertools import starmap, repeat
    if times is None:
        return starmap(func, repeat(args))
    return starmap(func, repeat(args, times))"
294,write a python function to convert iterable to pairwise iterable,"def pairwise(iterable):
    from itertools import tee
    a, b = tee(iterable)
    next(b, None)
    return zip(a, b)"
295,"write a python function to collect data into fixed-length chunks or blocks
     grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx""","def grouper(iterable, n, fillvalue=None):
    from itertools import zip_longest
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)"
296,"write a python program to create round robin algorithm: ""roundrobin('ABC', 'D', 'EF') --> A D E B F C""
     Recipe credited to George Sakkis
             Remove the iterator we just exhausted from the cycle.","def roundrobin(*iterables):    
    from itertools import islice, cycle
    num_active = len(iterables)
    nexts = cycle(iter(it).__next__ for it in iterables)
    while num_active:
        try:
            for next in nexts:
                yield next()
        except StopIteration:
            num_active -= 1
            nexts = cycle(islice(nexts, num_active))"
297,"write a python function to use a predicate and return entries particition into false entries and true entries
     partition(is_odd, range(10)) --> 0 2 4 6 8   and  1 3 5 7 9","def partition(pred, iterable):
    from itertools import filterfalse, tee
    t1, t2 = tee(iterable)
    return filterfalse(pred, t1), filter(pred, t2)"
298,write a python function to return powerset of iterable,"def powerset(iterable):
    ""powerset([1,2,3]) --> () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)""
    from itertools import chain, combinations
    s = list(iterable)
    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1))
list(powerset([1,2,3]))"
299,"write a python function to list all unique elements, preserving order
     unique_everseen('AAAABBBCCDAABBB') --> A B C D
     unique_everseen('ABBCcAD', str.lower) --> A B C D","def unique_everseen(iterable, key=None):
    from itertools import filterfalse
    seen = set()
    seen_add = seen.add
    if key is None:
        for element in filterfalse(seen.__contains__, iterable):
            seen_add(element)
            yield element
    else:
        for element in iterable:
            k = key(element)
            if k not in seen:
                seen_add(k)
                yield element"
300,"write a python function to list unique elements, preserving order remembering only the element just seen.""
     unique_justseen('AAAABBBCCDAABBB') --> A B C D A B
     unique_justseen('ABBCcAD', str.lower) --> A B C A D","def unique_justseen(iterable, key=None):
    import operator
    from itertools import groupby    
    return map(next, map(operator.itemgetter(1), groupby(iterable, key)))"
301,"write a python function to return random selection from itertools.product(*args, **kwds)","def random_product(*args, repeat=1):
    import random
    pools = [tuple(pool) for pool in args] * repeat
    return tuple(map(random.choice, pools))"
302,"write a python function to return random selection from itertools.permutations(iterable, r)","def random_permutation(iterable, r=None):
    import random
    pool = tuple(iterable)
    r = len(pool) if r is None else r
    return tuple(random.sample(pool, r))"
303,"write a python function to random select from itertools.combinations(iterable, r)","def random_combination(iterable, r):
    import random
    pool = tuple(iterable)
    n = len(pool)
    indices = sorted(random.sample(range(n), r))
    return tuple(pool[i] for i in indices)"
304,"write a python function to perform random selection from itertools.combinations_with_replacement(iterable, r)","def random_combination_with_replacement(iterable, r):
    import random
    pool = tuple(iterable)
    n = len(pool)
    indices = sorted(random.choices(range(n), k=r))
    return tuple(pool[i] for i in indices)"
305,write a python function to locate the leftmost value exactly equal to x,"def index(a, x):
    from bisect import bisect_left    
    i = bisect_left(a, x)
    if i != len(a) and a[i] == x:
        return i
    raise ValueError"
306,write a python function to locate the rightmost value less than x,"def find_lt(a, x):
    from bisect import bisect_left  
    i = bisect_left(a, x)
    if i:
        return a[i-1]
    raise ValueError"
307,write a python function to find rightmost value less than or equal to x,"def find_le(a, x):
    from bisect import bisect_right  
    i = bisect_right(a, x)
    if i:
        return a[i-1]
    raise ValueError"
308,write a python function to find leftmost value greater than x,"def find_gt(a, x):
    from bisect import bisect_right 
    i = bisect_right(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
309,write a python function to find leftmost item greater than or equal to x,"def find_ge(a, x):
    from bisect import bisect_left 
    i = bisect_left(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
310,write a python function to map a numeric lookup using bisect,"def grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA'):
    from bisect import bisect
    i = bisect(breakpoints, score)
    return grades[i]"
311,write a regex pattern in python to print all adverbs and their positions in user input text,"import re
text = input(""Enter a string: "")
for m in re.finditer(r""\w+ly"", text):
    print('%02d-%02d: %s' % (m.start(), m.end(), m.group(0)))"
312,write a python function to read a CSV file and print its content,"def read_csv(filename):
    import csv
    with open(filename, newline='') as f:
        reader = csv.reader(f)
        for row in reader:
            print(row)"
313,write a python snippet to convert list into indexed tuple,"test_list = [4, 5, 8, 9, 10] 
list(zip(range(len(test_list)), test_list))"
314,write a python function to split word into chars,"def split(word): 
    return [char for char in word]"
315,write a python function to pickle data to a file,"def pickle_data(data, pickle_file):
  import pickle
  with open(pickle_file, 'wb') as f:
      pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)
  return None"
316,write a python function to load pickle data from a file,"def load_pickle_data(pickle_file):
  import pickle
  with open(pickle_file, 'rb') as f:
      data = pickle.load(f)
  return data"
317,Write a function that adds 2 iterables a and b such that a is even and b is odd,"def add_even_odd_list(l1:list,l2:list)-> list:
    return [a+b for a,b in zip(l1,l2) if a%2==0 and b%2!=0]"
318,Write a function that strips every vowel from a string provided,"def strip_vowels(input_str:str)->str:
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ]
    return ''.join(list(filter(lambda x: x not in vowels, input_str)))"
319,write a function that acts like a ReLU function for a 1D array,"def relu_list(input_list:list)->list:
    return [(lambda x: x if x >= 0 else 0)(x) for x in input_list]"
320,Write a function that generates Factorial of number,"def factorial(n):
    if n == 0 or n ==1:
        return 1
    else:
        return n*factorial(n-1)"
321,Write a function that returns length of the list,"def list_length(l):
    return len(l)"
322,Write a function that sorts list of numbers and returns top element,"def biggest_no(l:list)->int:
    sorted(l)"
323,Write a function to print a string by repeating it n times,"def print_repeatnstring(text:str, n:int)-> str:
    return text*n"
324,Write a function to merge two lists element wise,"def merge_lists(l1:list, l2:list):
    return list(zip(l1,l2))"
325,Write a function to merge two lists element wise,"def merge_lists(l1:list, l2:list):
    return list(zip(l1,l2))"
326,Write a function to append two lists,"def append_lists(l1:list, l2:list)->list:
    return l1.extend(l2)"
327,Write a function to return reverse of a list,"def reverse_list(l1:list)->list:
    return l1[::-1]"
328,Write a function to adds two lists element wise,"def adds_listelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2)]"
329,Write a function to Subtracts two lists element wise,"def sub_listelements(l1:list, l2:list):
    return [i-j for i, j in zip(l1,l2)]"
330,Write a function to adds two lists element wise only if numbers are even,"def adds_listevenelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2) if i*j%2 == 0]"
331,Write a function to multiplies two lists element wise only if numbers are odd,"def adds_listoddelements(l1:list, l2:list):
    return [i*j for i, j in zip(l1,l2) if i*j%2 == 1]"
332,Write a function that returns list of elements with n power to elements of list,"def n_power(l1:list, power:int)->list:
    return [i**power for i in l1]"
333,Write a function that generates fibbonacci series,"def Fibonacci(n:int)-> int:
    if n==1:
        fibonacci = 0
    elif n==2:
        fibonacci = 1
    else:
        fibonacci = Fibonacci(n-1) + Fibonacci(n-2)
    return fibonacci"
334,Write a function that returns sine value of the input,"def sin(x:float) -> float:
    import math
    return math.sin(x)"
335,Write a function that returns derivative of sine value of the input,"def derivative_sin(x:float)-> float:
    import math
    return math.cos(x)"
336,Write a function that returns tan value of the input,"def tan(x:float) -> float:
    import math
    return math.tan(x)"
337,Write a function that returns derivative of tan value of the input,"def derivative_tan(x:float)-> float:
    import math
    return (1/math.cos(x))**2"
338,Write a function that returns cosine value of the input,"def cos(x:float) -> float:
    import math
    return math.cos(x)"
339,Write a function that returns cosine value of the input,"def derivative_cos(x:float)-> float:
    import math
    return -(math.sin(x))"
340,Write a function that returns the exponential value of the input,"def exp(x) -> float:
    import math
    return math.exp(x)"
341,Write a function that returns Gets the derivative of exponential of x,"def derivative_exp(x:float) -> float:
    import math
    return math.exp(x)"
342,Write a function that returns log of a function,"def log(x:float)->float:
    import math
    return math.log(x)"
343,Write a function that returns derivative of log of a function,"def derivative_log(x:float)->float:
    return (1/x)"
344,Write a function that returns relu value of the input,"def relu(x:float) -> float:
    x = 0 if x < 0 else x
    return x"
345,Write a function that returns derivative derivative relu value of the input,"def derivative_relu(x:float) -> float:
    x = 1 if x > 0 else 0
    return x"
346,Write a function that returns runs a garbage collector,"def clear_memory():
    import gc
    gc.collect()"
347,Write a function that calculates the average time taken to perform any transaction by  Function fn averaging the total time taken for transaction over Repetations,"def time_it(fn, *args, repetitons= 1, **kwargs):
    import time
    total_time = []
    for _ in range(repetitons):
        start_time = time.perf_counter()
        fn(*args,**kwargs)
        end_time = time.perf_counter()
        ins_time = end_time - start_time
        total_time.append(ins_time)
    return sum(total_time)/len(total_time)"
348,Write a function to identify if value is present inside a dictionary or not,"def check_value(d:dict, value)->bool:
    return any(v == value for v in dict.values())"
349,Write a function to identify to count no of instances of a value  inside a dictionary,"def count_value(d:dict, value)->bool:
    return list(v == value for v in dict.values()).count(True)"
350,Write a function to identify if value is present inside a list or not,"def check_listvalue(l:list, value)->bool:
    return value in l"
351,Write a function to identify if value is present inside a tuple or not,"def check_tuplevalue(l:tuple, value)->bool:
    return value in l"
352,Write a function that returns lowercase string,"def str_lowercase(s:str):
    return s.lower()"
353,Write a function that returns uppercase string,"def str_uppercase(s:str):
    return s.upper()"
354,Write a function that removes all special characters,"def clean_str(s):
    import re
    return re.sub('[^A-Za-z0-9]+', '', s)"
355,Write a function that returns a list sorted ascending,"def ascending_sort(l:list):
    sorted(l, reverse=False)"
356,Write a function that returns a list sorted descending,"def descending_sort(l:list):
    sorted(l, reverse=True)"
357,Write a function that returns a dictionary sorted descending by its values,"def descending_dict_valuesort(d:dict):
    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[1])}"
358,Write a function that returns a dictionary sorted ascending by its values,"def ascending_dict_valuesort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[1])}"
359,Write a function that returns a dictionary sorted descending by its keys,"def descending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[0])}"
360,Write a function that returns a dictionary sorted ascending by its keys,"def ascending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[0])}"
361,Write a function that returns a replace values in string with values provided,"def replace_values(s:str, old, new)->str:
    s.replace(old, new)"
362,Write a function that joins elements of list,"def join_elements(l:list)-> str:
    return (''.join(str(l)))"
363,Write a function that splits the elements of string,"def split_elements(s:str, seperator)-> list:
    return s.split(seperator)"
364,Write a function that returns sum of all elements in the list,"def sum_elements(l:list):
    return sum(l)"
365,Write a function that returns sum of all odd elements in the list,"def sum_even_elements(l:list):
    return sum([i for i in l if i%2==0])"
366,Write a function that returns sum of all odd elements in the list,"def sum_odd_elements(l:list):
    return sum([i for i in l if i%2==1])"
367,1 write a program to reverse a list,"lst = [11, 5, 17, 18, 23]
def reverse(lst): 
    new_lst = lst[::-1] 
    return new_lst"
368,2 write a program to find sum of elements in list,"list1 = [11, 5, 17, 18, 23]
total = sum(list1)
print(""Sum of all elements in given list: "", total)"
369,3 write a program to find the largest number in a list,"list1 = [10, 20, 4, 45, 99] 
list1.sort() 
print(""Largest element is:"", list1[-1])"
370,4 write a program to print Even Numbers in a List,"list1 = [10, 21, 4, 45, 66, 93] 
for num in list1: 
    if num % 2 == 0: 
       print(num, end = "" "")"
371,5 write a program to print negative Numbers in given range,"start, end = -4, 19
for num in range(start, end + 1): 
    if num < 0: 
        print(num, end = "" "")"
372,6 write a program to remove empty List from List using list comprehension,"test_list = [5, 6, [], 3, [], [], 9] 
print(""The original list is : "" + str(test_list)) 
res = [ele for ele in test_list if ele != []] 
print (""List after empty list removal : "" + str(res))"
373,7 write a  program to remove empty tuples from a list of tuples,"def Remove(tuples): 
    tuples = filter(None, tuples) 
    return tuples"
374,Driver Code,"tuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  
          ('krishna', 'akbar', '45'), ('',''),()] 
print Remove(tuples)"
375,8 write a program to break a list into chunks of size N,"l = [1, 2, 3, 4, 5, 6, 7, 8, 9]  
n = 4 
x = [l[i:i + n] for i in range(0, len(l), n)]  
print(x)"
376,9 write a program to find the frequency of words present in a string,"test_str = 'times of india times new india express'
print(""The original string is : "" + str(test_str)) 
res = {key: test_str.count(key) for key in test_str.split()} 
print(""The words frequency : "" + str(res))"
377,10 write a program to accept a string if it contains all vowels,"def check(string): 
  if len(set(string).intersection(""AEIOUaeiou""))>=5: 
    return ('accepted') 
  else: 
    return (""not accepted"") 
if __name__==""__main__"": 
  string=""helloworld""
  print(check(string))"
378,11 write a program to rotate string left and right by d length,"def rotate(input,d):  
    Lfirst = input[0 : d]  
    Lsecond = input[d :]  
    Rfirst = input[0 : len(input)-d]  
    Rsecond = input[len(input)-d : ]  
    print (""Left Rotation : "", (Lsecond + Lfirst) ) 
    print (""Right Rotation : "", (Rsecond + Rfirst))  
if __name__ == ""__main__"":  
    input = 'helloworld'
    d=2
    rotate(input,d)"
379,12 write a program to convert key-values list to flat dictionary,"from itertools import product 
test_dict = {'month' : [1, 2, 3], 
             'name' : ['Jan', 'Feb', 'March']} 
print(""The original dictionary is : "" + str(test_dict)) 
res = dict(zip(test_dict['month'], test_dict['name'])) 
print(""Flattened dictionary : "" + str(res))"
380,write a program to remove the duplicate words,"s = ""Hello world Hello""
l = s.split() 
k = [] 
for i in l: 
    if (s.count(i)>1 and (i not in k)or s.count(i)==1): 
        k.append(i) 
print(' '.join(k))"
381,13 write a program to convert into dictionary,"def Convert(tup, di): 
    for a, b in tup: 
        di.setdefault(a, []).append(b) 
    return di 
tups = [(""A"", 10), (""B"", 20), (""C"", 30),  
     (""D"", 40), (""E"", 50), (""F"", 60)] 
dictionary = {} 
print (Convert(tups, dictionary))"
382,14 write program to extract digits from Tuple list,"from itertools import chain 
test_list = [(15, 3), (3, 9), (1, 10), (99, 2)] 
print(""The original list is : "" + str(test_list)) 
temp = map(lambda ele: str(ele), chain.from_iterable(test_list)) 
res = set() 
for sub in temp: 
    for ele in sub: 
        res.add(ele) 
print(""The extrated digits : "" + str(res))"
383,15 write a program to Remove Tuples of Length K Using list comprehension,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
print(""The original list : "" + str(test_list)) 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
384,16 write a program to find Maximum and Minimum K elements in Tuple,"test_tup = (5, 20, 3, 7, 6, 8) 
print(""The original tuple is : "" + str(test_tup)) 
K = 2
test_tup = list(test_tup) 
temp = sorted(test_tup) 
res = tuple(temp[:K] + temp[-K:]) 
print(""The extracted values : "" + str(res))"
385,17 write a program to get current date and time,"import datetime  
current_time = datetime.datetime.now()  
print (""Time now at greenwich meridian is : "" , end = """")  
print (current_time)"
386,"18 write a program to convert time from 12 hour to 24 hour format 
     Checking if last two elements of time 
     is AM and first two elements are 12 
     remove the AM     
     Checking if last two elements of time 
     is PM and first two elements are 12    
         add 12 to hours and remove PM","def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
387,Driver Code,"print(convert24(""08:05:45 PM""))"
388,"19 write a program to find the difference between two times 
 function to obtain the time in minutes form 
     convert h1 : m1 into minutes 
     convert h2 : m2 into minutes  
         calculating the difference 
     calculating hours from difference 
     calculating minutes from difference","def difference(h1, m1, h2, m2): 
    t1 = h1 * 60 + m1 
    t2 = h2 * 60 + m2 
    if (t1 == t2):  
        print(""Both are same times"") 
        return 
    else: 
        diff = t2-t1 
    h = (int(diff / 60)) % 24
    m = diff % 60
    print(h, "":"", m)"
389,Driver's code,"if __name__ == ""__main__"": 
    difference(7, 20, 9, 45) 
    difference(15, 23, 18, 54) 
    difference(16, 20, 16, 20)"
390,"20 write program to find yesterday, today and tomorrow 
 Import datetime and timedelta 
 class from datetime module","from datetime import datetime, timedelta"
391,Get today's date,presentday = datetime.now() # or presentday = datetime.today()
392,Get Yesterday,yesterday = presentday - timedelta(1)
393,Get Tomorrow,tomorrow = presentday + timedelta(1)
394,"strftime() is to format date according to 
 the need by converting them to string","print(""Yesterday = "", yesterday.strftime('%d-%m-%Y')) 
print(""Today = "", presentday.strftime('%d-%m-%Y')) 
print(""Tomorrow = "", tomorrow.strftime('%d-%m-%Y'))"
395,21 write a program to remove all the characters except numbers and alphabets,import re
396,initialising string,"ini_string = ""123abcjw:, .@! eiw"""
397,printing initial string,"print (""initial string : "", ini_string) 
result = re.sub('[\W_]+', '', ini_string)"
398,printing final string,"print (""final string"", result)"
399,22 write a program to merge dict using update() method,"def Merge(dict1, dict2):
    return(dict2.update(dict1))"
400,Driver code,"dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
print(Merge(dict1, dict2))
print(dict2)"
401,"23 write a program to print even length words in a string  
 Driver Code","def printWords(s): 
    s = s.split(' ')  
    for word in s:  
        if len(word)%2==0: 
            print(word)  
s = ""hello world"" 
printWords(s)"
402,24 write a program to delete all duplicate letters in a string,"def removeDuplicate(str): 
    s=set(str) 
    s="""".join(s) 
    print(""Without Order:"",s) 
    t="""" 
    for i in str: 
        if(i in t): 
            pass
        else: 
            t=t+i 
        print(""With Order:"",t) 
str=""helloworld""
removeDuplicate(str)"
403,"25 write a program to print Maximum frequency character in String 
 initializing string","test_str = ""Helloworld""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)  
print (""The maximum of all characters in Helloworld is : "" + str(res))"
404,"26 write a program to check if a string contains any special character 
     Enter the string 
     calling run function","import re 
def run(string): 
    regex = re.compile('[@_!#$%^&*()<>?/\|}{~:]') 
    if(regex.search(string) == None): 
        print(""String is accepted"") 
    else: 
        print(""String is not accepted."") 
if __name__ == '__main__' : 
    string = ""Hello@World""
    run(string)"
405,27 write a program to check if a string is binary or not,"def check(string) : 
    p = set(string) 
    s = {'0', '1'} 
    if s == p or p == {'0'} or p == {'1'}: 
        print(""Yes"") 
    else : 
        print(""No"")"
406,driver code,"if __name__ == ""__main__"" : 
    string = ""101010000111""
    check(string)"
407,28 write a program to check whether a given string is Heterogram or not,"def heterogram(input): 
     alphabets = [ ch for ch in input if ( ord(ch) >= ord('a') and ord(ch) <= ord('z') )] 
     if len(set(alphabets))==len(alphabets): 
         print ('Yes') 
     else: 
         print ('No')"
408,Driver program,"if __name__ == ""__main__"": 
    input = 'Hello World'
    heterogram(input)"
409,29 write a program to check whether a given key already exists in a dictionary.,"def checkKey(dict, key): 
    if key in dict.keys(): 
        print(""Present, "", end ="" "") 
        print(""value ="", dict[key]) 
    else: 
        print(""Not present"")"
410,Driver Code,"dict = {'a': 100, 'b':200, 'c':300} 
key = 'b'
checkKey(dict, key) 
key = 'w'
checkKey(dict, key)"
411,30 write a program to check whether the string is a palindrome or not,"def isPalindrome(s):
    return s == s[::-1]
s = ""malayalam""
ans = isPalindrome(s)
if ans:
    print(""Yes"")
else:
    print(""No"")"
412,"31 write a program that extract words starting with Vowel From A list
 initializing list","test_list = [""have"", ""a"", ""good"", ""one""]"
413,"printing original list 
     checking for begin char","print(""The original list is : "" + str(test_list)) 
res = [] 
vow = ""aeiou""
for sub in test_list: 
    flag = False
    for ele in vow: 
        if sub.startswith(ele): 
            flag = True 
            break
    if flag: 
        res.append(sub)"
414,printing result,"print(""The extracted words : "" + str(res))"
415,32 write a program to replace vowels by next vowel using list comprehension + zip(),"test_str = 'helloworld'
print(""The original string is : "" + str(test_str)) 
vow = 'a e i o u'.split() 
temp = dict(zip(vow, vow[1:] + [vow[0]])) 
res = """".join([temp.get(ele, ele) for ele in test_str]) 
print(""The replaced string : "" + str(res))"
416,33 write a program to reverse words of string,"def rev_sentence(sentence):  
    words = sentence.split(' ')  
    reverse_sentence = ' '.join(reversed(words))  
    return reverse_sentence  
if __name__ == ""__main__"":  
    input = 'have a good day'
    print (rev_sentence(input))"
417,34 write a program to find the least Frequent Character in String,"test_str = ""helloworld""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get)  
print (""The minimum of all characters in the given word is : "" + str(res))"
418,35 write a program to find the most frequent element in a list,"def most_frequent(List): 
    counter = 0
    num = List[0] 
    for i in List: 
        curr_frequency = List.count(i) 
        if(curr_frequency> counter): 
            counter = curr_frequency 
            num = i 
    return num 
List = [2, 1, 2, 2, 1, 3] 
print(most_frequent(List))"
419,"36 write a program insert character after every character pair 
 initializing string","test_str = ""HellowWorld""
print(""The original string is : "" + test_str) 
res = ', '.join(test_str[i:i + 2] for i in range(0, len(test_str), 2)) 
print(""The string after inserting comma after every character pair : "" + res)"
420,37 write a program to remove i-th indexed character from a string,"def remove(string, i):  
    a = string[ : i]  
    b = string[i + 1: ] 
    return a + b"
421,"Driver Code 
     Remove nth index element 
     Print the new string","if __name__ == '__main__': 
    string = ""HellowWorld""
    i = 5
    print(remove(string, i))"
422,"38 write a program to check if a string has at least one letter and one number
         if string has letter 
         if string has number","def checkString(str): 
    flag_l = False
    flag_n = False
    for i in str: 
        if i.isalpha(): 
            flag_l = True
        if i.isdigit(): 
            flag_n = True
    return flag_l and flag_n"
423,driver code,"print(checkString('helloworld')) 
print(checkString('helloworld2020'))"
424,39 write a program extract least frequency element,"from collections import defaultdict 
test_list = [1, 3, 4, 5, 1, 3, 5]"
425,printing original list,"print(""The original list : "" + str(test_list))"
426,Extract least frequency element,"res = defaultdict(int) 
for ele in test_list: 
   res[ele] += 1 
min_occ = 9999
for ele in res: 
    if min_occ > res[ele]: 
        min_occ = res[ele] 
        tar_ele = ele"
427,printing result,"print(""The minimum occurring element is : "" + str(tar_ele))"
428,"40 write a program to check 2 lists and find if any element is common
         traverse in the 2nd list 
             if one common","def common_data(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result"
429,driver code,"a = [1, 2, 3, 4, 5] 
b = [5, 6, 7, 8, 9] 
print(common_data(a, b)) 
a = [1, 2, 3, 4, 5] 
b = [6, 7, 8, 9] 
print(common_data(a, b))"
430,41 write a program to find area of a triangle,"a = float(input('Enter first side: '))  
b = float(input('Enter second side: '))  
c = float(input('Enter third side: '))  
s = (a + b + c) / 2  
area = (s*(s-a)*(s-b)*(s-c)) ** 0.5  
print('The area of the triangle is %0.2f' %area)"
431,42 write a program to swap two variables,"x = input('Enter value of x: ')  
y = input('Enter value of y: ')  
temp = x  
x = y  
y = temp  
print('The value of x after swapping: {}'.format(x))  
print('The value of y after swapping: {}'.format(y))"
432,43 write a program to convert kilometers to miles,"kilometers = float(input('How many kilometers?: '))  
conv_fac = 0.621371  
miles = kilometers * conv_fac  
print('%0.3f kilometers is equal to %0.3f miles' %(kilometers,miles))"
433,44 write a program to convert Celsius to Fahrenheit,"celsius = float(input('Enter temperature in Celsius: '))  
fahrenheit = (celsius * 1.8) + 32  
print('%0.1f  Celsius is equal to %0.1f degree Fahrenheit'%(celsius,fahrenheit))"
434,45 write a program to display the calender,"import calendar  
yy = int(input(""Enter year: ""))  
mm = int(input(""Enter month: ""))  
print(calendar.month(yy,mm))"
435,46 write a program to check if the year is a leap year,"year = int(input(""Enter a year: ""))  
if (year % 4) == 0:  
   if (year % 100) == 0:  
       if (year % 400) == 0:  
           print(""{0} is a leap year"".format(year))  
       else:  
           print(""{0} is not a leap year"".format(year))  
   else:  
       print(""{0} is a leap year"".format(year))  
else:  
   print(""{0} is not a leap year"".format(year))"
436,47 write a program to check if the number is a prime numnber,"num = int(input(""Enter a number: ""))  
if num > 1:  
   for i in range(2,num):  
       if (num % i) == 0:  
           print(num,""is not a prime number"")  
           print(i,""times"",num//i,""is"",num)  
           break  
   else:  
       print(num,""is a prime number"")  
else:  
   print(num,""is not a prime number"")"
437,48 write a program to print all prime numbers between an interval,"lower = int(input(""Enter lower range: ""))  
upper = int(input(""Enter upper range: ""))  
for num in range(lower,upper + 1):  
   if num > 1:  
       for i in range(2,num):  
           if (num % i) == 0:  
               break  
       else:  
           print(num)"
438,49 write a program to find the factorial of a number,"num = int(input(""Enter a number: ""))  
factorial = 1  
if num < 0:  
   print(""Sorry, factorial does not exist for negative numbers"")  
elif num == 0:  
   print(""The factorial of 0 is 1"")  
else:  
   for i in range(1,num + 1):  
       factorial = factorial*i  
   print(""The factorial of"",num,""is"",factorial)"
439,"50 write a program to display the multiplication table of a number
 using for loop to iterate multiplication 10 times","num = int(input(""Show the multiplication table of? ""))  
for i in range(1,11):  
   print(num,'x',i,'=',num*i)"
440,"51 write a program to print Fibonacci sequence
 first two terms  
 check if the number of terms is valid  
        update values","nterms = int(input(""How many terms you want? ""))  
n1 = 0  
n2 = 1  
count = 2  
if nterms <= 0:  
   print(""Plese enter a positive integer"")  
elif nterms == 1:  
   print(""Fibonacci sequence:"")  
   print(n1)  
else:  
   print(""Fibonacci sequence:"")  
   print(n1,"","",n2,end=', ')  
   while count < nterms:  
       nth = n1 + n2  
       print(nth,end=' , ')  
       n1 = n2  
       n2 = nth  
       count += 1"
441,52 write a program to check Armstrong number,"num = int(input(""Enter a number: ""))  
sum = 0  
temp = num  
while temp > 0:  
   digit = temp % 10  
   sum += digit ** 3  
   temp //= 10  
if num == sum:  
   print(num,""is an Armstrong number"")  
else:  
   print(num,""is not an Armstrong number"")"
442,53 write a program to find Armstrong number in an interval,"lower = int(input(""Enter lower range: ""))  
upper = int(input(""Enter upper range: ""))  
for num in range(lower,upper + 1):  
   sum = 0  
   temp = num  
   while temp > 0:  
       digit = temp % 10  
       sum += digit ** 3  
       temp //= 10  
       if num == sum:  
            print(num)"
443,"54 write a  program to find the sum of natural numbers
    use while loop to iterate un till zero","num = int(input(""Enter a number: ""))  
if num < 0:  
   print(""Enter a positive number"")  
else:  
   sum = 0  
   while(num > 0):  
       sum += num  
       num -= 1  
   print(""The sum is"",sum)"
444,55 write a  program to find LCM,"def lcm(x, y):  
   if x > y:  
       greater = x  
   else:  
       greater = y  
  while(True):  
       if((greater % x == 0) and (greater % y == 0)):  
           lcm = greater  
           break  
       greater += 1  
   return lcm  
num1 = int(input(""Enter first number: ""))  
num2 = int(input(""Enter second number: ""))  
print(""The L.C.M. of"", num1,""and"", num2,""is"", lcm(num1, num2))"
445,56 write a  program to find HCF,"def hcf(x, y):  
   if x > y:  
       smaller = y  
   else:  
       smaller = x  
   for i in range(1,smaller + 1):  
       if((x % i == 0) and (y % i == 0)):  
           hcf = i  
   return hcf  
num1 = int(input(""Enter first number: ""))  
num2 = int(input(""Enter second number: ""))  
print(""The H.C.F. of"", num1,""and"", num2,""is"", hcf(num1, num2))"
446,"57 write a  program to convert decimal to binary, octal and hexadecimal","dec = int(input(""Enter a decimal number: ""))  
print(bin(dec),""in binary."")  
print(oct(dec),""in octal."")  
print(hex(dec),""in hexadecimal."""
447,58 python program to find ascii value of a character,"c = input(""Enter a character: "")  
print(""The ASCII value of '"" + c + ""' is"",ord(c))"
448,"60 write a  program to sort words in alphabetic order
 breakdown the string into a list of words  
 sort the list  
 display the sorted words","my_str = input(""Enter a string: "")  
words = my_str.split()  
words.sort()  
for word in words:  
   print(word)"
449,61 write a program to print the elements of an array present on even position,"arr = [1, 2, 3, 4, 5];     
print(""Elements of given array present on even position: "");    
for i in range(1, len(arr), 2):    
    print(arr[i]);"
450,65 write a program to add two matrices using nested loop,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]"
451,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
452,66 write a program to transpose a matrix using a nested loop,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]"
453,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
454,67 write a program to multiply two matrices using nested loops,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]
for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
455,68 write a program to remove punctuation from a string,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
456,69 write a program to shuffle a deck of card,"import itertools, random
deck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))
random.shuffle(deck)
print(""You got:"")
for i in range(5):
   print(deck[i][0], ""of"", deck[i][1])"
457,70 write a program to display the powers of 2 using anonymous function,"terms = 10
result = list(map(lambda x: 2 ** x, range(terms)))
print(""The total terms are:"",terms)
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
458,71 write a program to add 2 binary numbers,"num1 = '00001'
num2 = '10001'
sum = bin(int(num1,2) + int(num2,2))
print(sum)"
459,71 write a program to find simple interest,"p = float(input(""Enter the principle amount : ""))
r = float(input(""Enter the rate of interest : ""))
t = float(input(""Enter the time in the years: ""))"
460,calculating simple interest,si = (p*r*t)/100
461,printing the values,"print(""Principle amount: "", p)
print(""Interest rate   : "", r)
print(""Time in years   : "", t)
print(""Simple Interest : "", si)"
462,72 write a program to find compound interest,"p = float(input(""Enter the principle amount : ""))
r = float(input(""Enter the rate of interest : ""))
t = float(input(""Enter the time in the years: ""))"
463,calculating compound interest,"ci =  p * (pow((1 + r / 100), t))"
464,printing the values,"print(""Principle amount  : "", p)
print(""Interest rate     : "", r)
print(""Time in years     : "", t)
print(""compound Interest : "", ci)"
465,"73 write a program to print a pattern of stars (*)
     ending row","for row in range (0,5):
    for column in range (0, row+1):
        print (""*"", end="""")
    print('\r')"
466,74 write a program to return the absolute value in Python,"def get_absolute_value(n):
	if n >= 0:
		return n
	else:
		return -n
print(get_absolute_value(101))"
467,75 write a program to find the power of a number,"a = 10
b = 3
result = a**b
print (a, "" to the power of "", b, "" is = "", result)"
468,76 write a program to print the binary value of the numbers from 1 to N,"n = int(input(""Enter the value of N: ""))
for i in range(1, n+1):
    print(""Binary value of "", i, "" is: "", bin(i))"
469,77 write a program to find number of bits necessary to represent an integer in binary,"num = int(input(""Enter an integer number: ""))
bits = num.bit_length()
print(""bits required to store "", num, "" = "", bits)
print(""binary value of "", num, "" is = "", bin(num))"
470,78 write a program to find the difference between 2 lists,"list1 = [10, 20, 30, 40, 50]
list2 = [10, 20, 30, 60, 70]
print ""list1:"", list1
print ""list2:"", list2
print ""Difference elements:""
print (list (set(list1) - set (list2)))"
471,79 write a program to add an element at specified index in a list,"list = [10, 20, 30]
print (list)
list.insert (1, ""ABC"")
print (list)
list.insert (3, ""PQR"")
print (list)"
472,80 write a program to print EVEN length words of a string,"str = ""Python is a programming language""
words = list(str.split(' '))
print ""str: "", str
print ""list converted string: "", words
print ""EVEN length words:""
for W in words:
	if(len(W)%2==0 ):
		print W"
473,81 write a program to create N copies of a given string,"str1 = ""Hello""
n = 3
str2 = str1 * 3 
print ""str1: "", str1 
print ""str2: "", str2"
474,"82 write a program to extract the mobile number from the given string in Python
 importing the module",import re
475,string,string='''hello you can call me at 018002089898.'''
476,extracting the mobile number,"Phonenumber=re.compile(r'\d\d\d\d\d\d\d\d\d\d\d\d')
m=Phonenumber.search(string)"
477,printing the result,"print('mobile number found from the string : ',m.group())"
478,83 write a program to Capitalizes the first letter of each word in a string,"def capitalize(text):
  return text.title()
str1 = ""Hello world!""
str2 = ""hello world!""
str3 = ""HELLO WORLD!""
str4 = ""includehelp.com is a tutorials site""
print(""str1: "", str1)
print(""str2: "", str2)
print(""str3: "", str3)
print(""str4: "", str4)
print()"
479,84 write a program to design a dice throw function,"import random
def dice():
    return random.choice([1,2,3,4,5,6])"
480,85 write a program to print perfect numbers from the given list of integers,"def checkPerfectNum(n) :
	i = 2;sum = 1;
	while(i <= n//2 ) :
		if (n % i == 0) :
			sum += i			
		i += 1
		if sum == n :
			print(n,end=' ')
if __name__ == ""__main__"" :
	print(""Enter list of integers: "")
	list_of_intgers = list(map(int,input().split()))
	print(""Given list of integers:"",list_of_intgers)
	print(""Perfect numbers present in the list is: "")
	for num in list_of_intgers :
		checkPerfectNum(num)"
481,86 write a program to convert meters into yards,"num = float(input(""Enter the distance measured in centimeter : ""))
inc = num/2.54 
print(""Distance in inch : "", inc)"
482,87 write a program Tower of Hanoi,"def hanoi(x):
    global repN
    repN += 1
    if x == 1:
        return 2
    else:
        return 3*hanoi(x-1) + 2
x = int(input(""ENTER THE NUMBER OF DISKS: ""))
global repN
repN =0
print('NUMBER OF STEPS: ', hanoi(x), ' :', repN)"
483,88 write a program to find variance of a dataset,"def variance(X):
    mean = sum(X)/len(X)
    tot = 0.0
    for x in X:
        tot = tot + (x - mean)**2
    return tot/len(X)"
484,"main code
  a simple data-set","sample = [1, 2, 3, 4, 5] 
print(""variance of the sample is: "", variance(sample))"
485,90 write a program for swapping the value of two integers without third variable,"x = int(input(""Enter the value of x :""))
y = int(input(""Enter the value of y :""))
(x,y) = (y,x)
print('Value of x: ', x, '\nValue of y: ', y, '\nWOO!! Values SWAPPEDDD')"
486,"91 write a program to check eligibility for voting
 input age","age = int(input(""Enter Age : ""))
if age>=18:
        status=""Eligible""
else:
    status=""Not Eligible""
print(""You are "",status,"" for Vote."")"
487,92 write a program to print the version information,"import sys
print(""Python version: "", sys.version)
print(""Python version info: "", sys.version_info)"
488,93 write a program to find sum of all digits of a number,"def sumDigits(num):
  if num == 0:
    return 0
  else:
    return num % 10 + sumDigits(int(num / 10))
x = 0
print(""Number: "", x)
print(""Sum of digits: "", sumDigits(x))
print()"
489,94 write a program to print double quotes with the string variable,"str1 = ""Hello world"";
print(""\""%s\"""" % str1)
print('""%s""' % str1)
print('""{}""'.format(str1))"
490,95 write a program to Remove leading zeros from an IP address,"import re
def removeLeadingZeros(ip):
    modified_ip = re.sub(regex, '.', ip)
    print(modified_ip)
if __name__ == '__main__' : 
	ip = ""216.08.094.196""
	removeLeadingZeros(ip)"
491,97 write a program to copy odd lines of one file to another file,"file1 = open('file1.txt', 'r') 
file2 = open('file2.txt', 'w') 
lines = file1.readlines() 
type(lines) 
for i in range(0, len(lines)): 
	if(i % 2 != 0): 
		file2.write(lines[i]) 
file1.close()
file2.close() 
file1 = open('file1.txt', 'r') 
file2 = open('file2.txt', 'r') 
str1 = file1.read()
str2 = file2.read()
print(""file1 content..."")
print(str1)
print() # to print new line
print(""file2 content..."")
print(str2)
file1.close()
file2.close()"
492,98 write a program to reverse a string that contains digits in Python,"def reverse(n):
    s=str(n) 
    p=s[::-1]
    return p 
num = int(input('Enter a positive value: '))
print('The reverse integer:',reverse(num))"
493,99 write a program to input a string and find total number uppercase and lowercase letters,"print(""Input a string: "")
str1 = input()
no_of_ucase, no_of_lcase = 0,0
for c in str1:
    if c>='A' and c<='Z':
        no_of_ucase += 1
    if c>='a' and c<='z':
        no_of_lcase += 1
print(""Input string is: "", str1)
print(""Total number of uppercase letters: "", no_of_ucase)
print(""Total number of lowercase letters: "", no_of_lcase)"
494,100 write a program to input a string and find total number of letters and digits,"print(""Input a string: "")
str1 = input()
no_of_letters, no_of_digits = 0,0
for c in str1:
    if (c>='a' and c<='z') or (c>='A' and c<='Z'):
        no_of_letters += 1
    if c>='0' and c<='9':
        no_of_digits += 1
print(""Input string is: "", str1)
print(""Total number of letters: "", no_of_letters)
print(""Total number of digits: "", no_of_digits)"
495,Write a python function to implement tower of hanoi,"def hanoi(disks, source, auxiliary, target):
    if disks == 1:
        print('Move disk 1 from peg {} to peg {}.'.format(source, target))
        return
    hanoi(disks - 1, source, target, auxiliary)
    print('Move disk {} from peg {} to peg {}.'.format(disks, source, target))
    hanoi(disks - 1, auxiliary, source, target)"
496,Write a python program to Implement Linear Search and print the key element if found,"def linear_search(alist, key):
    """"""Return index of key in alist. Return -1 if key not present.""""""
    for i in range(len(alist)):
        if alist[i] == key:
            return i
    return -1
alist = [2, 3, 5, 6, 4, 5]
key = 6
index = linear_search(alist, key)
if index < 0:
    print(f'{key} was not found.')
else:
    print(f'{key} was found at index {index}.')"
497,Write a python program to Implement Bubble sort and print the sorted list for the below list,"def bubble_sort(alist):
    for i in range(len(alist) - 1, 0, -1):
        no_swap = True
        for j in range(0, i):
            if alist[j + 1] < alist[j]:
                alist[j], alist[j + 1] = alist[j + 1], alist[j]
                no_swap = False
        if no_swap:
            return
alist = [2, 3, 5, 6, 4, 5]
bubble_sort(alist)
print('Sorted list: ', end='')
print(alist)"
498,Write a python program to Implement Selection sort and print the sorted list for the below list,"def selection_sort(alist):
    for i in range(0, len(alist) - 1):
        smallest = i
        for j in range(i + 1, len(alist)):
            if alist[j] < alist[smallest]:
                smallest = j
        alist[i], alist[smallest] = alist[smallest], alist[i]
alist = [2, 3, 5, 6, 4, 5]
selection_sort(alist)
print('Sorted list: ', end='')
print(alist)"
499,Write a python program to Implement Insertion sort and print the sorted list for the below list,"def insertion_sort(alist):
    for i in range(1, len(alist)):
        temp = alist[i]
        j = i - 1
        while (j >= 0 and temp < alist[j]):
            alist[j + 1] = alist[j]
            j = j - 1
        alist[j + 1] = temp
alist = [2, 3, 5, 6, 4, 5]
insertion_sort(alist)
print('Sorted list: ', end='')
print(alist)"
500,Write a python program to Implement Gnome sort and print the sorted list for the below list,"def gnome_sort(alist):
    for pos in range(1, len(alist)):
        while (pos != 0 and alist[pos] < alist[pos - 1]):
            alist[pos], alist[pos - 1] = alist[pos - 1], alist[pos]
            pos = pos - 1
alist = [2, 3, 5, 6, 4, 5]
gnome_sort(alist)
print('Sorted list: ', end='')
print(alist)"
501,Write a python Class to calculate area of a rectangle and print the area,"class rectangle():
    def __init__(self,breadth,length):
        self.breadth=breadth
        self.length=length
    def area(self):
        return self.breadth*self.length
a=6
b=4
obj=rectangle(a,b)
print(""Area of rectangle:"",obj.area())"
502,Write a python Class to calculate area of a circle and print the vale for a radius,"class CircleArea():
    def __init__(self,radius):
        self.radius=radius
    def area(self):
        return 3.14 * self.radius * self.radius
a=6
obj=CircleArea(a)
print(""Area of rectangle:"",obj.area())"
503,Write a python Class to calculate Perimeter of a circle and print the vale for a radius,"class CirclePerimeter():
    def __init__(self,radius):
        self.radius=radius
    def perimeter(self):
        return 2 * 3.14 * self.radius
a=6
obj=CirclePerimeter(a)
print(""Perimeter of rectangle:"",obj.perimeter())"
504,Write a python Class to print All Possible Subsets from a Set of Distinct Integers,"class sub:  
    def f1(self, s1):  
        return self.f2([], sorted(s1))  
    def f2(self, curr, s1):  
        if s1:  
            return self.f2(curr, s1[1:]) + self.f2(curr + [s1[0]], s1[1:])  
        return [curr]  
a=[2, 3, 5, 6, 4, 5]
print(""Subsets: "")
print(sub().f1(a))"
505,Write a python program to Read and print the Contents of a File,"a=str(input(""Enter file name .txt extension:""))
file2=open(a,'r')
line=file2.readline()
while(line!=""""):
    print(line)
    line=file2.readline()
file2.close()"
506,Write a python program to Count and print the Number of Words in a Text File,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
507,Write a python program to Count the Number of Lines in a Text File,"fname = input(""Enter file name: "")
num_lines = 0
with open(fname, 'r') as f:
    for line in f:
        num_lines += 1
print(""Number of lines:"")
print(num_lines)"
508,Write a python program to Count the Occurrences of a Word in a Text File,"fname = input(""Enter file name: "")
word='the'
k = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        for i in words:
            if(i==word):
                k=k+1
print(f""Frequency of Occurrences of the word {a} is:"")
print(k)"
509,Write a python function to Copy the Contents of One File into Another,"def copy(from_file, to_file):
    with open(from_file) as f:
        with open(to_file, ""w"") as f1:
            for line in f:
                f1.write(line)"
510,Write a python function that Counts the Number of Times a Certain Letter Appears in the Text File,"def count_letter(fname, l):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter==l):
                        k=k+1
    return k"
511,Write a python function that Print all the Numbers Present in the Text File,"def print_number(fname):
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isdigit()):
                        print(letter)"
512,Write a python function that Counts the Number of Blank Spaces in a Text File,"def count_blank_space(fname):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isspace):
                        k=k+1
    return k"
513,Write a python function that Capitalize the First Letter of Every Word in the File,"def capitalize(fname):
    with open(fname, 'r') as f:
        for line in f:
            l=line.title()
            print(l)"
514,Write a python function that prints the Contents of a File in Reverse Order,"def reverse_content(filename):
    for line in reversed(list(open(filename))):
        print(line.rstrip())"
515,Write a python Program to Flatten and print a List,"a=[[1,[[2]],[[[3]]]],[[4],5]]
flatten=lambda l: sum(map(flatten,l),[]) if isinstance(l,list) else [l]
print(flatten(a))"
516,Write a Python Program to print the LCM of Two Numbers,"def lcm(a,b):
    lcm.multiple=lcm.multiple+b
    if((lcm.multiple % a == 0) and (lcm.multiple % b == 0)):
        return lcm.multiple
    else:
        lcm(a, b)
    return lcm.multiple
lcm.multiple=0
a=4
b=7
if(a>b):
    LCM=lcm(b,a)
else:
    LCM=lcm(a,b)
print(LCM)"
517,Write a Python function to print the GSD of Two Numbers,"def gcd(a,b):
    if(b==0):
        return a
    else:
        return gcd(b,a%b)"
518,Write a Python function to Find if a Number is Prime or Not Prime,"def check(n, div = None):
    if div is None:
        div = n - 1
    while div >= 2:
        if n % div == 0:
            print(""Number not prime"")
            return False
        else:
            return check(n, div-1)
    else:
        print(""Number is prime"")
        return 'True'"
519,Write a Python function to Find the Power of a Number Using Recursion,"def power(base,exp):
    if(exp==1):
        return(base)
    if(exp!=1):
        return(base*power(base,exp-1))"
520,Write a Python function to Find the Total Sum of a Nested List Using Recursion,"def sum1(lst):
    total = 0
    for element in lst:
        if (type(element) == type([])):
            total = total + sum1(element)
        else:
            total = total + element
    return total"
521,Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"def count_vowels(s):
    count = 0
    vowels = set(""aeiou"")
    for letter in s:
        if letter in vowels:
            count += 1
    return count"
522,Write a Python Program to prints Common Letters in Two Input Strings,"s1='python'
s2='schoolofai'
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
523,Write a Python Program that Prints which Letters are in the First String but not in the Second,"s1='python'
s2='schoolofai'
a=list(set(s1)-set(s2))
print(""The letters are:"")
for i in a:
    print(i)"
524,Write a Python Program to Concatenate Two Dictionaries Into One,"def concat_dic(d1, d2):
    return d1.update(d2)"
525,Write a Python Program to Multiply All the Items in a Dictionary,"def mul_dict(d):
    tot=1
    for i in d:    
        tot=tot*d[i]
    return tot"
526,Write a Python Program to Remove the Given Key from a Dictionary,"def remove_item_dict(d, key):
    if key in d: 
        del d[key]
    else:
        print(""Key not found!"")
        exit(0)"
527,Write a Python Program to Map Two Lists into a Dictionary,"def map_dict(keys, values):
    return dict(zip(keys,values))"
528,Write a Python Program to Remove the nth Index Character from a Non-Empty String,"def remove(string, n):  
      first = string[:n]   
      last = string[n+1:]  
      return first + last"
529,Write a Python Program to Detect if Two Strings are Anagrams,"def anagram_check(s1, s2):
    if(sorted(s1)==sorted(s2)):
        return True
    else:
        return False"
530,Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,"def change(string):
      return string[-1:] + string[1:-1] + string[:1]"
531,Write a Python Program to Remove the Characters of Odd Index Values in a String,"def modify(string):  
    final = """"   
    for i in range(len(string)):  
        if i % 2 == 0:  
            final = final + string[i]  
    return final"
532,Write a Python Program to Take in Two Strings and Print the Larger String,"string1='python'
string2='theschoolofai'
count1=0
count2=0
for i in string1:
      count1=count1+1
for j in string2:
      count2=count2+1
if(count1<count2):
      print(""Larger string is:"")
      print(string2)
elif(count1==count2):
      print(""Both strings are equal."")
else:
      print(""Larger string is:"")
      print(string1)"
533,Write a Python Program to Count and print Number of Lowercase Characters in a String,"string='This is an Assignment'
count=0
for i in string:
      if(i.islower()):
            count=count+1
print(""The number of lowercase characters is:"")
print(count)"
534,Write a Python Program to Put Even and Odd elements in a List into Two Different Lists,"a=[2, 3, 8, 9, 2, 4, 6]
even=[]
odd=[]
for j in a:
    if(j%2==0):
        even.append(j)
    else:
        odd.append(j)
print(""The even list"",even)
print(""The odd list"",odd)"
535,Write a Python Program to Sort the List According to the Second Element in Sublist,"a=[['A',34],['B',21],['C',26]]
for i in range(0,len(a)):
    for j in range(0,len(a)-i-1):
        if(a[j][1]>a[j+1][1]):
            temp=a[j]
            a[j]=a[j+1]
            a[j+1]=temp"
536,Write a Python Program to Find the Second Largest Number in a List Using Bubble Sort,"a=[2, 3, 8, 9, 2, 4, 6]
for i in range(0,len(a)):
    for j in range(0,len(a)-i-1):
        if(a[j]>a[j+1]):
            temp=a[j]
            a[j]=a[j+1]
            a[j+1]=temp"
537,Write a Python Program to Find the Intersection of Two Lists,"def main(alist, blist):
    def intersection(a, b):
        return list(set(a) & set(b))
    return intersection(alist, blist)"
538,Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"l_range=2
u_range=5
a=[(x,x**2) for x in range(l_range,u_range+1)]"
539,Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"l=6
u=9
a=[x for x in range(l,u+1) if (int(x**0.5))**2==x and sum(list(map(int,str(x))))<10]
print(a)"
540,Write a Python Program to Swap the First and Last Value of a List,"a=[2, 3, 8, 9, 2, 4, 6]
n = len(a)
temp=a[0]
a[0]=a[n-1]
a[n-1]=temp
print(""New list is:"")
print(a)"
541,Write a Python Program to Remove and print the Duplicate Items from a List,"a=[2, 3, 8, 9, 2, 4, 6]
b = set()
unique = []
for x in a:
    if x not in b:
        unique.append(x)
        b.add(x)
print(""Non-duplicate items:"")
print(unique)"
542,Write a Python Program to Read a List of Words and Return the Length of the Longest One,"a=['the', 'tsai', 'python']
max1=len(a[0])
temp=a[0]
for i in a:
    if(len(i)>max1):
       max1=len(i)
       temp=i
print(""The word with the longest length is:"")
print(temp)"
543,Write a Python Program to Remove the ith Occurrence of the Given Word in a List where Words can Repeat,"a=['the', 'tsai', 'python' ,'a' ,'the', 'a']
c=[]
count=0
b='a'
n=3
for i in a:
    if(i==b):
        count=count+1
        if(count!=n):
            c.append(i)
    else:
        c.append(i)
if(count==0):
    print(""Item not found "")
else: 
    print(""The number of repetitions is: "",count)
    print(""Updated list is: "",c)
    print(""The distinct elements are: "",set(a))"
544,Write a Python function to Find Element Occurring Odd Number of Times in a List,"def find_odd_occurring(alist):
    """"""Return the element that occurs odd number of times in alist.
    alist is a list in which all elements except one element occurs an even
    number of times.
    """"""
    ans = 0
    for element in alist:
        ans ^= element
    return ans"
545,Write a Python function to Check Whether a Given Year is a Leap Year,"def leapyear_check(year):
    if(year%4==0 and year%100!=0 or year%400==0):
        return True
    else:
        return False"
546,Write a Python Program to print Prime Factors of an Integer,"n=24
print(""Factors are:"")
i=1
while(i<=n):
    k=0
    if(n%i==0):
        j=1
        while(j<=i):
            if(i%j==0):
                k=k+1
            j=j+1
        if(k==2):
            print(i)
    i=i+1"
547,Write a Python Program to print all the Divisors of an Integer,"n=60
print(""The divisors of the number are:"")
for i in range(1,n+1):
    if(n%i==0):
        print(i)"
548,Write a Python Program to Check if a Number is an Armstrong Number,"def amstrong_check(n):
    a=list(map(int,str(n)))
    b=list(map(lambda x:x**3,a))
    if(sum(b)==n):
        return True
    else:
        return False"
549,Write a Python Program to Print the Pascal’s triangle for n number of rows given by the user,"n=10
a=[]
for i in range(n):
    a.append([])
    a[i].append(1)
    for j in range(1,i):
        a[i].append(a[i-1][j-1]+a[i-1][j])
    if(n!=0):
        a[i].append(1)
for i in range(n):
    print(""   ""*(n-i),end="" "",sep="" "")
    for j in range(0,i+1):
        print('{0:6}'.format(a[i][j]),end="" "",sep="" "")
    print()"
550,Write a Python Program to Check if a Number is a Perfect Number,"def perfect_no_check(n):
    sum1 = 0
    for i in range(1, n):
        if(n % i == 0):
            sum1 = sum1 + i
    if (sum1 == n):
        return True
    else:
        return False"
551,Write a Python Program to Check if a Number is a Strong Number,"def strong_no_check(num):
    sum1=0
    temp=num
    while(num):
        i=1
        f=1
        r=num%10
        while(i<=r):
            f=f*i
            i=i+1
        sum1=sum1+f
        num=num//10
    if(sum1==temp):
        return True
    else:
        return False"
552,Write a Python Program to Check If Two Numbers are Amicable Numbers,"def amicable_no_check(x, y):
    sum1=0
    sum2=0
    for i in range(1,x):
        if x%i==0:
            sum1+=i
    for j in range(1,y):
        if y%j==0:
            sum2+=j
    if(sum1==y and sum2==x):
        return True
    else:
        return False"
553,Write a Python Program to Check if a Number is a Prime Number,"def prime_no_check(a):
    k=0
    for i in range(2,a//2+1):
        if(a%i==0):
            k=k+1
    if(k<=0):
        return True
    else:
        return False"
554,Write a Python Program to print the Sum of First N Natural Numbers,"n=7
sum1 = 0
while(n > 0):
    sum1=sum1+n
    n=n-1
print(""The sum of first n natural numbers is"",sum1)"
555,Write a Python Program to Print all Pythagorean Triplets in the Range,"limit=10
c=0
m=2
while(c<limit):
    for n in range(1,m+1):
        a=m*m-n*n
        b=2*m*n
        c=m*m+n*n
        if(c>limit):
            break
        if(a==0 or b==0 or c==0):
            break
        print(a,b,c)
    m=m+1"
556,Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"a=[2, 3, 8, 9, 2, 4, 6]
k=0
num=int(input(""Enter the number to be counted:""))
for j in a:
    if(j==num):
        k=k+1
print(""Number of times"",num,""appears is"",k)"
557,"Write a Python Program to test and print Collatz Conjecture for a Given Number
             n is odd
             n is even","def collatz(n):
    while n > 1:
        print(n, end=' ')
        if (n % 2):
            n = 3*n + 1
        else:
            n = n//2
    print(1, end='')"
558,Write a Python function to Count Set Bits in a Number,"def count_set_bits(n):
    count = 0
    while n:
        n &= n - 1
        count += 1
    return count"
559,Write a Python Program to Generate Gray Codes using Recursion,"def get_gray_codes(n):
    """"""Return n-bit Gray code in a list.""""""
    if n == 0:
        return ['']
    first_half = get_gray_codes(n - 1)
    second_half = first_half.copy()
    first_half = ['0' + code for code in first_half]
    second_half = ['1' + code for code in reversed(second_half)]
    return first_half + second_half"
560,Write a Python Program to Convert Gray Code to Binary,"def gray_to_binary(n):
    """"""Convert Gray codeword to binary and return it.""""""
    n = int(n, 2)
    mask = n
    while mask != 0:
        mask >>= 1
        n ^= mask
    return bin(n)[2:]"
561,Write a Python Program to Convert Binary to Gray Code,"def binary_to_gray(n):
    """"""Convert Binary to Gray codeword and return it.""""""
    n = int(n, 2)
    n ^= (n >> 1)
    return bin(n)[2:]"
562,Write a Python Program to print the Reverse a Given Number,"n=1023
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
563,Write a Python Program to Accept Three Digits and Print all Possible Combinations from the Digits,"a=2
b=9
c=5
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
    for j in range(0,3):
        for k in range(0,3):
            if(i!=j&j!=k&k!=i):
                print(d[i],d[j],d[k])"
564,Write a Python function to Print an Identity Matrix,"def print_identity_matrix(n):
    for i in range(0,n):
        for j in range(0,n):
            if(i==j):
                print(""1"",sep="" "",end="" "")
            else:
                print(""0"",sep="" "",end="" "")
        print()"
565,Write a Python Program to print a list of fibonacci series for a given no using closer,"def fib():
    cache = {1:1, 2:1}
    def calc_fib(n):
        if n not in cache:
            print(f'Calculating fib({n})')
            cache[n] = calc_fib(n - 1) + calc_fib(n - 2)
        return cache[n]
    return calc_fib"
566,Write a Python Program to print a list of fibonacci series for a given no using class,"class Fib:
    def __init__(self):
        self.cache = {1:1, 2:1}
    def fib(self, n):
        if n not in self.cache:
            print(f'Calculating fib({n})')
            self.cache[n] = self.fib(n-1) + self.fib(n-2)
        return self.cache[n]"
567,Write a Python function to calculate factorial of a given no using closer,"def fact():
    cache = {0:1, 1:1}
    def calc_fib(n):
        if n not in cache:
            print(f'Calculating fact({n})')
            cache[n] = calc_fib(n - 1) * n
        return cache[n]
    return calc_fib"
568,Write a Python function to calculate factorial of a given no using class,"class Fact:
    def __init__(self):
        self.cache = {0:1, 1:1}
    def fact(self, n):
        if n not in self.cache:
            self.cache[n] = self.fact(n-1) * n
        return self.cache[n]"
569,Write a Python function to calculate dot product of two given sequence,"def dot_product(a, b):
    return sum( e[0]*e[1] for e in zip(a, b))"
570,Write a Python function to Find the Sum of Sine Series,"import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine"
571,Write a Python function to Find the Sum of Cosine Series,"def cosine(x,n):
    cosx = 1
    sign = -1
    for i in range(2, n, 2):
        pi=22/7
        y=x*(pi/180)
        cosx = cosx + (sign*(y**i))/math.factorial(i)
        sign = -sign
    return cosx"
572,Write a Python function to strip vowels from a string,"def vowel_stripping(string):
    '''This function takes a string as an input strips out vowels and returns stripted out string'''
    return """".join([x for x in string if x not in('a','e','i','o','u')])"
573,Write a Python function that shifts the character of strings,"def char_shift(string, shift_count):
    '''This function takes a string as an input and shifts each character by 5 and returns shifted string'''
    return """".join([chr(ord(x)+shift_count) if (ord(x)+shift_count) <= 122 else chr(96 + (ord(x)+shift_count) - 122) for x in string])"
574,Write a Python function that returns biggest character in a string,"from functools import reduce
def biggest_char(string):
    '''This function takes an input as a string and returns the biggest output character in the string'''
    biggest_chr = lambda x, y: x if ord(x) > ord(y) else y
    return reduce(biggest_chr, string)"
575,Write a Python function that calculate interior angle of a equilateral polygon,"def interior_angle(no_of_sides):
    return (no_of_sides - 2) * 180 / no_of_sides"
576,Write a Python function that calculate side length of a equilateral polygon,"import math
def side_length(no_of_sides, circumradius):
    return 2 * circumradius * math.sin(math.pi / no_of_sides)"
577,Write a Python function that calculate area of a equilateral polygon,"import math
def area(no_of_sides, circumradius):
    side_length = 2 * circumradius * math.sin(math.pi / no_of_sides)
    apothem = circumradius * math.cos(math.pi / no_of_sides)
    return no_of_sides / 2 * side_length * apothem"
578,sample.py,"from datetime import datetime
from time import perf_counter
import random
val = 10
counter_67 = dict()"
579,1 Write a function to print given interger to binary,"def int_to_binary(num: int):
    """"""
    function to print number to binary
    """"""
    if isinstance(num, int):
        print(f'The binary of {num} is {bin(num).replace(""0b"","""")}')
    else:
        raise ValueError('Invalid Input')"
580,2 write a function to check given string is palindrome or not ( case insensitive ),"def palindrome_str_check(value: str):
    """"""
    function to print whether string is palindrome or not
    """"""
    if isinstance(value, str) :
        print( value.lower() == value[::-1].lower() )
    else:
        raise ValueError('Invalid Input')"
581,3 write a function to check whether a given date in DD/MM/YYYY format is valid or not,"def date_validation(inputdate: str):
    """"""
    function take input date in DD/MM/YYYY format and check its validation.
    """"""
    import datetime
    dd, mm, year = inputdate.split('/')
    isValidDate = True
    try :
        datetime.datetime(int(year),int(mm), int(dd))
    except ValueError : 
        isValidDate = False
    if(isValidDate):
        print (""Input Date is Valid"")
    else:
        print (""Input Date is invalid"")"
582,4 write a function to print the count of divisor.,"def divisor_count(num: int):
    """"""
    function to count the number of divisor of interger.
    """"""
    if isinstance(num, int):
        count = 0
        for i in range(1, num+1):
            if num%i == 0:
                count = count+1
        print(f'Number of divisor is {count}')
    else:
        raise ValueError('Invalid Input')"
583,5 write a function to print the count of divisor using list comprehension,"def divisor_using_list(num: int):
    """"""
    function to count the number of divisor using list comprehension.
    """"""
    if isinstance(num, int):
        count = [i for i in range(1,num+1) if not num%i]
        print(f'Number of divisor is {count}')
    else:
        raise ValueError('Invalid Input')"
584,6 write a function to print merger of two dictionary,"def merge_dict(dict1: dict, dict2: dict):
    """"""
    function to print merger of two dictionary
    """"""
    final_dict = {**dict1, **dict2}
    print(final_dict)"
585,7 write a function to print second largest number in a list.,"def second_large_num(num: list):
    if isinstance(num, list):
        num.sort()
        print (num[-2])
    else:
        raise ValueError('Invalid Input')"
586,8 write a function to remove empty list from a list and print.,"def remove_empty_list(num1: list):
    if isinstance(num1, list):
        modified = list(filter(None, num1))
        print(modified)"
587,9 write a function to remove empty tuples from a list and print,"def remove_empty_tuple(num1: list):
    if isinstance(num1, list):
        modified = list(filter(None, num1))
        print(modified)"
588,10 write a python function to remove duplicate from a list.,"def remove_duplicates(dup_list: list):
    print(list(set(dup_list)))"
589,11 write a function to reverse every word in a string,"def reverse_word(sen: str):
    words = sen.split(' ')
    rever_word = [ i[::-1] for i in words ]
    final_sen = ' '.join(rever_word)
    print(final_sen)"
590,12 function to check leap year,"def check_leap_year(year: int):
    if not year%4:
        print('Leap Year')
    else:
        print('Not a leap year')"
591,13 function to print the multiplication table,"def maths_tables( no_ : int):
     for i in range(1, 11):
         print(f'{no_}x{i}={no_*i}')"
592,14 function to check armstrong number or not,"def check_armstrong(no_: int):
    sum_ = 0
    temp = no_
    while temp > 0:
        digit = temp % 10
        sum_ += digit ** 3 
        temp //= 10
    if no_ == sum_:  
       print(f""{no_} is an Armstrong number"")  
    else:  
       print(f""{no_} is not an Armstrong number"")"
593,15 function to print all armstrong in a range,"def print_all_armstrong(lower: int, upper: int):
    for num in range(lower,upper + 1):  
        sum_ = 0
        temp = num
        while temp > 0:
            digit = temp % 10
            sum_ += digit ** 3
            temp //= 10
            if num == sum_:
                print(num)"
594,17 function to print the lcm of two number,"def ret_lcm(x: int, y: int):
    if x > y:
        greater = x
    else:
        greater = y
    while(True):
        if((greater % x == 0) and (greater % y == 0)):
            lcm = greater
            break
        greater += 1
    return lcm"
595,18 function to print the hcf of two number,"def ret_hcf(x: int, y: int):
    if x > y:
        greater = x
    else:
        greater = y
    while(True):
        if((greater % x == 0) and (greater % y == 0)):
            lcm = greater  
            break
        greater += 1
    return int(x*y/lcm)"
596,19 function to print ascii value of a character.,"def show_ascii(a: str):
    print(ord(a))"
597,20 function to print calendar,"def show_mm_calendar(mm: int, yyyy: int):
    import calendar
    print(calendar.month(yyyy, mm)"
598,21 Create a function that takes a list of numbers between 1 and 10 (excluding one number) and returns the missing number.,"def print_miss_num(l: list):
     print(f'Missing number is {55-sum(l)}')"
599,23 function to intern a sentence.,"def check_intern(a , b):
    if a is b:
        print(f'{a} and {b} is interned by Python')
    else:
        print(f'{a} and {b} is not interned by Python')"
600,24 convert string to intern string,"def str_to_intern_str(a):
    import sys
    b = sys.intern(a)
    if a is b:
        print('Sentence is interned')
    else:
        raise ValueError('This should not happen')"
601,25 write a function to print the time taken by a calc function to ferform a simple multiplication 10 Million time,"def time_calc(n: int):
    import time
    start = time.perf_counter()
    for i in range(10000000):
        n*2
    end = time.perf_counter()
    return end-start"
602,26 write a function to print other value with given base to int.,"def other_int(value, b):
    return int(value, b)"
603,27 write a function to convert any number to its equivalent fractions.,"def no_to_fraction(no_):
    from fractions import Fractions
    return Fractions(no_)"
604,28 function to check two number ( floating also )  are close or not,"def check_isclose(x, y)
    from math import isclose
    return isclose(x, y)"
605,29 function to convert temperature as per user mention.,"def temp_converter(temp , temp_given_in= 'F'):
    if temp < 0:
        raise ValueError(""Input Temperature is Negative"")
    else:
        if temp_given_in.upper() == 'F':
            t = (temp-32)*5/9
            return t
        elif temp_given_in.upper() == 'C':
            t = 9/5 * (temp) + 32
            return t
        elif temp_given_in.upper() not in ('C' , 'F'):
            raise NotImplementedError(""Invalid Temperature Coneversion"")"
606,32 function to remove values from dictionary,"def remove_dic_value(a: dict, key)
    a.pop(key)
    return a"
607,33 function insert at the begining of dictionary,"def dict_in_at_begin(orgin: dict, new_: dict):
    final = {**new_, **origin}
    return final"
608,"34 function to convert a list of tuples into dictionary
 Input  : [ ('a',1), ('b', 2), ('c', 3)]
 Output : { 'a':1, 'b':2, 'c':3 }","def list_to_dict(l: list):
    final_dict = {}
    for i in l:
        final_dict[i[0]] = i[1]
    return final_dict"
609,35 function to sort the  dictionary with respect to key.,"def dict_sort_with_key(test_dict: dict):
    final dict = {}
    temp = sorted(test_dict)
    for i in temp:
        final_dict[i] = test_dict[a]
    return final_dict"
610,"36 function to return mirir charcters of a letter.
 Input  : paradox after N = 3
 Output : paizwlc","def mirror_character(word: str, value: int):
    import string
    letters = string.ascii_lowercase
    rev_letter = letters[::-1]
    dict_char = dict(zip(letters, rev_letter))
    final_1 = word[0:value]
    final_2 = []
    for i in range(value, len(word)):
        final_2.append(dict_char[word[i]])
    print(final_1+''.join(final_2))"
611,37 function to add two tuple,"def add_tuple(tup1, tup2):
    return tup1+tup2"
612,"38 function to create a list of tuples from a given list having number and its cube in each tuple
 Input  : [1,2,3]
 Output : [(1,1),(2,8),(3,9)]","def list_of_tuple( l: list):
    final = [ (i, pow(i,3)) for i in l]
    return final"
613,39 function to create a dictionary of mirror of letter.,"def letter_mirror():
    import string
    letter = string.ascii_lowercase
    rvr_letter = letter[::-1]
    dict_char = dict(zip(letter, rvr_letter))
    return dict_char"
614,40 function to print the ascii value of letter,"def show_ascii():
    import string
    letter = string.ascii_letters
    for i in letter:
        print(i+"":""+str(ord(i)))"
615,41 function to get the current time at GMT,"def current_time():
    import datetime
    print(datetime.datetime.now())"
616,42 function to print the India Time,"def get_India_time():
    import datetime, pytz
    print(datetime.datetime.now( pytz.timezone('Asia/kolkata') ))"
617,43 function to print yesterday and tomorrow date,"def tmrw_yest_time()
    import datetime
    yesterday = datetime.datetime.now() - datetime.timedelta(1)
    tmrw = datetime.datetime.now() + datetime.timedelta(1)
    print( yesterday, tmrw )"
618,44 universal function,"def universal_func(*args, **kwargs):
    print(args)
    print(**kwargs)"
619,45 logging message,"def logging(msg, *, dt = datetime.utcnow()):
    print(f'message at {dt} was {msg}')"
620,46 factorial of number using recursion,"def factorial(n: int):
    if n<1:
        return 1
    else:
        return n * factorial(n-1)"
621,47 first class function,"def call_func(x, func):
    return fn(x)"
622,48 function to show documentation,"def doc_func(*args, **kwargs):
    """"""
    function to show how to do do documentation of function
    First line after function wriiten inside triple quotes.
    Don't forget to close when job is done.
    """"""
    pass"
623,49 function to show annotation,"def anno_func(a: ""Mandatory"",
              b: ""Optional""=2,
              c: ""Optional""=10,
              *args: ""Extra Position variable"",
              **kwargs: ""Provide extra to unpack dictionary"") -> 'Documentation to show how to do do annotation':
    """"""
    function to show how to do do documentation of function
    First line after function wriiten inside triple quotes.
    Don't forget to close when job is done.
    """"""
    pass"
624,50 function to check whether a given name is function or method,"def inspect_func(fn):
    from inspect import isfunction, ismethod
    print(f'{fn} is method {ismethod(func)}')
    print(f'{fn} is function {isfunction(func)}')"
625,51 function to print the source code of a function,"def print_so(f: ""Function name/class name/module""):
    from inspect import getsource
    print(getsource(f))"
626,52 callable_check,"def collable_check(x: ""Leterally can be anything""):
    return callable(x)"
627,52 zip two tuple,"def zip_to_tuple( tup1, tup2):
    return zip(tup1, tup2)"
628,53 factorial using pythonish,"def fact_one_line(n):
    return 1 if n < 2 else n*fact_one_line(n-1)"
629,54 str to list,"def str_to_list(sen):
    return list(sen)"
630,55 string to tuple,"def sen_to_tuple(sen):
   return tuple(sen)"
631,56 function to all implementation,"def all_imp(a):
   return all(a)"
632,57 function to any implementation,"def any_imp(a):
   return any(a)"
633,58 function to show boolean true / false is a number,"def bool_show(a=5):
    return True*a"
634,59 function to show boolean true / false is a number,"def bool_show(a=5):
    return False*a"
635,60 function to use global varibale implementation,"def gloabl_use(n):
    global val
    return val * n"
636,61 implementation of local cooncept,"def inner_show():
    x = 'Hola'
    def inner():
        nonlocal x
        x = 'Hola World'
        print(f'Inner function x is {x}')
    inner()
    print(f'outer function x is {x}')"
637,62 custom counter function,"def custom_counter():
    """"""
    An implementation of closures
    """"""
    x = 0
    def inner():
       nonlocal x
       x += 1
       print(f' Switch or button is called {x} times')
     return inner"
638,63 custom logging along with counter,"def custom_counter_log():
    """"""
    An implementation of closures
    """"""
    x = 0
    dt = datetime.now()
    def inner():
       nonlocal x
       x += 1
       print(f' Switch or button is called {x} at {dt}')
     return inner"
639,64 function to build a time elapsed closures,"def time_elsaped()
    start = perf_counter()
    def inner()
        nonlocal perf_counter
        return perf_counter() - start
    return inner"
640,65 function to attach counter to function,"def attach_counter(fn: ""Function""):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count += 1
        return fn(*args, **kwargs)
    return inner"
641,66 attach function closure with logs details to another function,"def attach_log(fn: ""function""):
    def inner(*args, **kwargs):
        dt = datetime.now()
        print(f'{fn.__name__} is called at {dt} with {args} {kwargs} ')
        return fn(*args, **kwargs)
    return inner"
642,67 function counter to store the number of times multiples function called in a dictionary,"def count_func_dict(fn: ""Function Name""):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count =+= 1
        counter_67[fn.__name__] = count
        return fn(*args, **kwargs)
    return inner"
643,68 write a function to unpack tuple of minimum 2 value to unlimited length int first two and rest,"def unpack_tuple(tup):
    a, b , *c = tup
    return a , b, c"
644,"69 write a function which take unlimited number and add it
 Note : Number can be anything","def add_unlimited(*args):
    return sum(args)"
645,70 class to print user defined message whenever object of class is called is called.,"class User:
    def __init__(self, msg=""Demo of custom message by repr and str in class""):
        self.msg = msg
    def __repr__(self):
        return f""Object of User class is called with parameter {self.msg}""
    def __str__(self):
        return f""Object of User class is called with parameter {self.msg}"""
646,72 class to show as how to make the class as callable,"class CallShow:
    """"""
    This is the space to do documentation related to class.
    """"""
    def __init__(self, msg = 'Demo class to show how to make class object as callable'):
        self.msg = msg
    def __call__(self):
        """"""
        to make object as callable the class should have __call__ in it
        """"""
        return f""Code to be writen here above to act as per accling object of call"""
647,73 function to store the data of IPL match in Namedtuple,"def store_ipl_date(tuple1):
    from collections import namedtuple
    IplData = namedtuple('IplData', 'match toss choice session1 session2 winner')
    return IplData(*tuple1)"
648,74 function to show namedtuple is instance of tuple,"def show_ins_tup():
    from collections import namedtuple
    IplData = namedtuple('IplData', 'match toss choice session1 session2 winner')
    match1 = IplData('RCBvsKKR', 'KKR', 'bat', '229/9', '85/8', 'KKR')
    return isinstance(match1, tuple)"
649,75 return dot product of two vectors,"def dot_product(a: ""Vector1"", b: ""Vector2""):
    return sum( e[0]*e[1] for e in zip(a,b) )"
650,77 show all local values while one function is running,"def show_local():
    import math
    a = 10
    b = 'Hello There'
    print(locals())"
651,81 generate intereger random number between user choice,"def gen_ran_int_number(lower, upper):
    import random
    final = [ random.randint(lower, upper) for _ in range(10) ]
    return final"
652,82 function to show how to use f string,"def f_string(msg: ""user message""):
    print(f'This is an f string with user paramter {msg}')"
653,83 function to show reading values from list is expensive in camparison to tuple,"def compare_list_tuple():
    from timeit import timeit
    import random
    l = [ random.randint(1,100) for _ in range(100) ]
    tu = tuple(l)
    list_time = timeit(stmt = 'max(l)', globals = locals(), number = 1)
    tup_time = timeit(stmt = 'max(tu)', globals = locals(), number = 1)
    if list_time > tup_time:
        print('Hence proved')
    else:
        raise ValueError('You did something Wrong')"
654,84 generate random number using the concept of iterators,"class RandomInt:
    """"""
    This is the space to do documentation related to class.
    """"""
    def __init__(self):
       self.n = 10
    def __next__(self):
        if self.n > 0:
           print(random.randint(0,10))
           self.n -= 1
        else:
           raise StopIteration
    def __iter__(self):
        return self"
655,88 write a class that act like squares and should print the squares of values and and cuustom sequence type.,"class Square:
    def __init__(self, n):
        self.n = n
    def __iter__(self):
        return self.show_sq(self.n)
    @staticmethod
    def show_sq(n):
         for i in range(n):
             yield i**2
    def __getitem__(self, i):
       if isinstance(i, int):
            if i < = self.n:
                print(i**2)
            else:
                raise ValueError('Index out of bound')"
656,89 fibonaaci using generator,"def fibo(n):
    x = 0
    yield x
    y = 1
    yield y
    for i in range(n-1):
        x, y = y, x+y
        yield y"
657,90 show generator is faster than list,"def show_gen_fast():
    from timeit import timeit
    dt = timeit(""[num for num in fib(100) ]"", globals = globals(), number=1)
    return dt"
658,Add two strings,"def add_str(str1,str2):
   return str1 + str2"
659,we are dealing with multiple inheritance,"class A(object):
    def foo(self):
        print(""class A"")
class B(object):
    def foo(self):
        print(""class B"")
class C(A, B):
    pass"
660,This is how pass works in case of multiple inheritance,"class A1(object):
   def foo(self):
      print(""class A1"")
class B1(A1):
   pass
class C1(A1):
   def foo(self):
      print(""class C1"")
class D1(B1,C1):
   pass"
661,List are mutable,"a_list = []
print('ID:', id(a_list))
a_list += [1]
print('ID (+=):', id(a_list))
a_list = a_list + [2]
print('ID (list = list + ...):', id(a_list))"
662,All blank lists are not the same,"a_list = []
print(a_list, '\nID (initial):',id(a_list), '\n')
a_list.append(1)
print(a_list, '\nID (append):',id(a_list), '\n')
a_list.extend([2])
print(a_list, '\nID (extend):',id(a_list))"
663,True and False in the datetime module,"from platform import python_version
import datetime
print(""Current python version: "", python_version())
print('""datetime.time(0,0,0)"" (Midnight) ->', bool(datetime.time(0,0,0))) # Python version <= 3.4.5 evaluates this statement to False"
664,"Python reuses objects for small integers - use ""=="" for equality, ""is"" for identity","a = 1
b = 1
print('a is b', bool(a is b))
c = 999
d = 999
print('c is d', bool(c is d))"
665,equality operator works this way,"print('256 is 257-1', 256 is 257-1)
print('257 is 258-1', 257 is 258 - 1)
print('-5 is -6+1', -5 is -6+1)
print('-7 is -6-1', -7 is -6-1)"
666,illustrate the test for equality (==) vs. identity (is),"a = 'hello world!'
b = 'hello world!'
print('a is b,', a is b)
print('a == b,', a == b)"
667,"We would think that identity would always imply equality, but this is not always true, as we can see in the next example:","a = float('nan')
print('a is a,', a is a)
print('a == a,', a == a)"
668,Shallow copy in python,"list1 = [1,2]
list2 = list1        # reference
list3 = list1[:]     # shallow copy
list4 = list1.copy() # shallow copy
print('IDs:\nlist1: {}\nlist2: {}\nlist3: {}\nlist4: {}\n'
      .format(id(list1), id(list2), id(list3), id(list4)))"
669,Deepcopy in python,"list1 = [[1],[2]]
list2 = list1.copy()    # shallow copy
list3 = deepcopy(list1) # deep copy
print('IDs:\nlist1: {}\nlist2: {}\nlist3: {}\n'
      .format(id(list1), id(list2), id(list3)))"
670,logical or logical and,"result = (2 or 3) * (5 and 7)
print('2 * 7 =', result)"
671,Don't use mutable objects as default arguments for functions!,"def append_to_list(value, def_list=[]):
    def_list.append(value)
    return def_list
my_list = append_to_list(1)
print(my_list)
my_other_list = append_to_list(2)
print(my_other_list)"
672,args and sleep,"import time
def report_arg(my_default=time.time()):
    print(my_default)
report_arg()
time.sleep(5)
report_arg()"
673,Generators are consumed,"gen = (i for i in range(5))
print('2 in gen,', 2 in gen)
print('3 in gen,', 3 in gen)
print('1 in gen,', 1 in gen)"
674,Convert generator to a list,"gen = (i for i in range(5))
a_list = list(gen)"
675,Usage of bool class,"print('isinstance(True, int):', isinstance(True, int))"
676,Create list of numbers using lambda function but not the right way,"my_list = [lambda: i for i in range(5)]
for l in my_list:
    print(l())"
677,print the numbers properly by creating a list,"my_list = [lambda x=i: x for i in range(5)]
for l in my_list:
    print(l())"
678,local scope representation,"x = 0
def in_func():
    x = 1
    print('in_func:', x)"
679,Global Scope Representation,"x = 0
def in_func1():
    x = 1
    print('in_func1:', x)
print('global:', x)"
680,Usage of global keyword,"x = 0
def in_func2():
    global x
    x = 1
    print('in_func2:', x)
in_func2()
print('global:', x)"
681,local vs. enclosed,"def outer():
    x = 1
    print('outer before:', x)
    def inner():
        x = 2
        print(""inner:"", x)
    inner()
    print(""outer after:"", x)
outer()"
682,nonlocal keyword comes in handy,"def outer():
    x = 1
    print('outer before:', x)
    def inner():
        nonlocal x
        x = 2
        print(""inner:"", x)
    inner()
    print(""outer after:"", x)
outer()"
683,tuples are immutable,"tup = (1,)
tup[0] += 1"
684,what if we put a mutable object into the immutable tuple,"tup1 = ([],)
print('tup before: ', tup1)
tup1[0] += [1]"
685,there are ways to modify the mutable contents of the tuple without raising the TypeError,"tup = ([],)
print('tup before: ', tup)
tup[0].extend([1])
print('tup after: ', tup)"
686,another way to append data to tuple,"tup = ([],)
print('tup before: ', tup)
tup[0].append(1)
print('tup after: ', tup)"
687,Add tuples like numerics,"my_tup = (1,)
my_tup += (4,)
my_tup = my_tup + (5,)
print(my_tup)"
688,"What happens ""behind"" the curtains is that the tuple is not modified, but a new object is generated every time, which will inherit the old ""name tag"":","my_tup = (1,)
print(id(my_tup))
my_tup += (4,)
print(id(my_tup))
my_tup = my_tup + (5,)
print(id(my_tup))"
689,Create a plain list,"def plainlist(n=100000):
    my_list = []
    for i in range(n):
        if i % 5 == 0:
            my_list.append(i)
    return my_list"
690,Create a list comprehension,"def listcompr(n=100000):
    my_list = [i for i in range(n) if i % 5 == 0]
    return my_list"
691,Create a Generator,"def generator(n=100000):
    my_gen = (i for i in range(n) if i % 5 == 0)
    return my_gen"
692,Generator using yield function,"def generator_yield(n=100000):
    for i in range(n):
        if i % 5 == 0:
            yield i"
693,Public vs. private class methods and name mangling,"def public_method(self):
        print('Hello public world!')
    def __private_method(self):
        print('Hello private world!')
    def call_private_method_in_class(self):
        self.__private_method()
my_instance = my_class()
my_instance.public_method()
my_instance._my_class__private_method()
my_instance.call_private_method_in_class()"
694,The consequences of modifying a list when looping through it,"a = [1, 2, 3, 4, 5]
for i in a:
    if not i % 2:
        a.remove(i)
print(a)
b = [2, 4, 5, 6]
for i in b:
     if not i % 2:
         b.remove(i)
print(b)"
695,iterating through the list index by index,"b = [2, 4, 5, 6]
for index, item in enumerate(b):
    print(index, item)
    if not item % 2:
        b.remove(item)
print(b)"
696,Dynamic binding and typos in variable names,"print('first list:')
for i in range(3):
    print(i)
print('\nsecond list:')
for j in range(3):
    print(i) # I (intentionally) made typo here!"
697,"List slicing using indexes that are ""out of range""","my_list = [1, 2, 3, 4, 5]
print(my_list[5])"
698,Reusing global variable names and UnboundLocalErrors,"def my_func():
    print(var)
var = 'global'
my_func()"
699,No problem to use the same variable name in the local scope without affecting the local counterpart:,"def my_func():
    var = 'locally changed'
var = 'global'
my_func()
print(var)"
700,"we have to be careful if we use a variable name that occurs in the global scope, and we want to access it in the local function scope if we want to reuse this name:","def my_func():
    print(var)  # want to access global variable
    var = 'locally changed'  # but Python thinks we forgot to define the local variable!
var = 'global'
my_func()"
701,We have to use the global keyword!,"def my_func():
    global var
    print(var)  # want to access global variable
    var = 'locally changed'  # changes the gobal variable
var = 'global'
my_func()
print(var)"
702,"Creating copies of mutable objects
 modify the 1st element of the 2nd sublist","my_list1 = [[1, 2, 3]] * 2
print('initially ---> ', my_list1)
my_list1[1][0] = 'a'
print(""after my_list1[1][0] = 'a' ---> "", my_list1)"
703,"we should better create ""new"" objects:
 modify the 1st element of the 2nd sublist","my_list2 = [[1, 2, 3] for i in range(2)]
print('initially:  ---> ', my_list2)
my_list2[1][0] = 'a'
print(""after my_list2[1][0] = 'a':  ---> "", my_list2)
for a, b in zip(my_list1, my_list2):
    print('id my_list1: {}, id my_list2: {}'.format(id(a), id(b)))"
704,Abortive statements in finally blocks,"def try_finally1():
    try:
        print('in try:')
        print('do some stuff')
        float('abc')
    except ValueError:
        print('an error occurred')
    else:
        print('no error occurred')
    finally:
        print('always execute finally')
try_finally1()"
705,Assigning types to variables as values,"a_var = str
a_var(123)"
706,random choice,"from random import choice
a, b, c = float, int, str
for i in range(5):
    j = choice([a,b,c])(i)
    print(j, type(j))"
707,Only the first clause of generators is evaluated immediately,gen_fails = (i for i in 1/0)
708,lazy evaluation,"gen_succeeds = (i for i in range(5) for j in 1/0)
print('But obviously fails when we iterate ...')
for i in gen_succeeds:
    print(i)"
709,Usge of *args,"def a_func(*args):
    print('type of args:', type(args))
    print('args contents:', args)
    print('1st argument:', args[0])
a_func(0, 1, 'a', 'b', 'c')"
710,usage of kwargs,"def b_func(**kwargs):
    print('type of kwargs:', type(kwargs))
    print('kwargs contents: ', kwargs)
    print('value of argument a:', kwargs['a'])
b_func(a=1, b=2, c=3, d=4)"
711,Unpacking of iterables,"val1, *vals = [1, 2, 3, 4, 5]
print('val1:', val1)
print('vals:', vals)"
712,if else for,"for i in range(5):
    if i == 1:
        print('in for')
else:
    print('in else')
print('after for-loop')"
713,usage of break,"for i in range(5):
    if i == 1:
        break
else:
    print('in else')
print('after for-loop')"
714,conditional usecase,"a_list = [1,2]
if a_list[0] == 1:
    print('Hello, World!')
else:
    print('Bye, World!')"
715,Usage of while,"i = 0
while i < 2:
    print(i)
    i += 1
else:
    print('in else')"
716,Interning of string,"hello1 = 'Hello'
hello2 = 'Hell' + 'o'
hello3 = 'Hell'
hello3 = hello3 + 'o'
print('hello1 is hello2:', hello1 is hello2)
print('hello1 is hello3:', hello1 is hello3)"
717,Disassembler,"import dis
def hello1_func():
    s = 'Hello'
    return s
dis.dis(hello1_func)"
718,example to demonstrate usage of docstring,"def greet(name):
    """"""
    This function greets to
    the person passed in as
    a parameter
    """"""
    print(""Hello, "" + name + "". Good morning!"")"
719,Absolute function,"def absolute_value(num):
    """"""This function returns the absolute
    value of the entered number""""""
    if num >= 0:
        return num
    else:
        return -num
print(absolute_value(2))
print(absolute_value(-4))"
720,usage of dictionary,"dict = {'Name': 'Zara', 'Age': 7, 'Class': 'First'}
print ""dict['Name']: "", dict['Name']
print ""dict['Age']: "", dict['Age']"
721,accept user input,"str = input(""Enter your input: "")
print (""Received input is : "", str)"
722,"A recursive function to find nth catalan number 
     Base Case 
     Catalan(n) is the sum  
     of catalan(i)*catalan(n-i-1)","def catalan(n): 
    if n <= 1: 
        return 1
    res = 0
    for i in range(n): 
        res += catalan(i) * catalan(n-i-1) 
    return res"
723,Driver Code,"for i in range(10): 
    print (catalan(i))"
724,"A naive recursive Python implementation 
     Recursive Call","def binomialCoeff(n , k): 
    if k > n : 
       return 0
    if k==0 or k ==n : 
        return 1
    return binomialCoeff(n-1 , k-1) + binomialCoeff(n-1 , k)"
725,Driver Program to test ht above function,"n = 5
k = 2
print (""Value of C(%d,%d) is (%d)"" %(n , k , binomialCoeff(n , k)) )"
726,A naive Python implementation of LIS problem,""""""" To make use of recursive calls, this function must return 
 two things: 
 1) Length of LIS ending with element arr[n-1]. We use 
 max_ending_here for this purpose 
 2) Overall maximum as the LIS may end with an element 
 before arr[n-1] max_ref is used this purpose. 
 The value of LIS of full array of size n is stored in 
 *max_ref which is our final result """""""
727,Driver program to test the above function,"arr = [10 , 22 , 9 , 33 , 21 , 50 , 41 , 60] 
n = len(arr) 
print (""Length of lis is "", lis(arr) )"
728,"Function for nth Fibonacci number 
     First Fibonacci number is 0 
     Second Fibonacci number is 1","def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"") 
    elif n==0: 
        return 0
    elif n==1: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)"
729,Driver Program,print(Fibonacci(9))
730,write a python program to add two list of same length.,"def add_two_list_items():
    num1 = [1,2,3]
    num2 = [4,5,6]
    sum = num1 + num2
    print(f'Sum: {sum}')"
731,write a python program to add numbers from two list if first list item is even and second list item is odd.,"def add_two_lists_even_odd(l1, l2):
    new = []
    for x, y in zip(l1, l2):
        if l1%2 == 0 and l2%2 != 0:
            new.append(x+y)
    return new"
732,write a python program Convert KM/H to MPH,"kmh = 50
mph =  0.6214 * kmh
print(""Speed:"", kmh, ""KM/H = "", mph, ""MPH"")"
733,write a program to find and print the smallest among three numbers,"num1 = 100
num2 = 200
num3 = 300
if (num1 <= num2) and (num1 <= num3):
    smallest = num1
elif (num2 <= num1) and (num2 <= num3):
    smallest = num2
else:
    smallest = num3
print(f'smallest:{smallest}')"
734,write a function to sort a list,"raw_list = [-5, -23, 5, 0, 23, -6, 23, 67]
sorted_list = []
while raw_list:
    minimum = raw_list[0]   
    for x in raw_list: 
        if x < minimum:
            minimum = x
    sorted_list.append(minimum)
    raw_list.remove(minimum)    
print(soreted_list)"
735,write a function to print the time it takes to run a function,"import time
def time_it(fn, *args, repetitons= 1, **kwargs):
    start = time.perf_counter()
    if (repetitons <= 0):
        raise ValueError(""repetitions should be greater that 0"")
    if (not(isinstance(repetitons,int))):
        raise ValueError(""Repetions must be of type Integer"")
    for _ in range(repetitons):
        fn(*args, **kwargs)
    stop = time.perf_counter()
    return ((stop - start)/repetitons)"
736,write a python function to calculate simple Interest,"def simple_interest(p,t,r): 
    si = (p * t * r)/100
    return si"
737,write a python program to print all Prime numbers in an Interval,"start = 11
end = 25
for i in range(start,end):
  if i>1:
    for j in range(2,i):
        if(i % j==0):
            break
    else:
        print(i)"
738,write a python funtion to implement a counter to record how many time the word has been repeated using closure concept,"def word_counter():
    counter = {}
    def count(word):
        counter[word] = counter.get(word, 0) + 1
        return counter[word]
    return count"
739,write a  python program to check and print if a string is palindrome or not,"st = 'malayalam'
j = -1
flag = 0
for i in st:
    if i != st[j]:
      j = j - 1
      flag = 1
      break
    j = j - 1
if flag == 1:
    print(""Not a palindrome"")
else:
    print(""It is a palindrome"")"
740,write a python function to find the URL from an input string using the regular expression,"import re 
def Find(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
741,write a python program to find N largest elements from a list,"l = [1000,298,3579,100,200,-45,900] 
n = 4
l.sort() 
print(l[-n:])"
742,write a python program to add two lists using map and lambda,"nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
result = map(lambda x, y: x + y, nums1, nums2)
print(list(result))"
743,write a python functionto test the equality of the float numbers,"def float_equality_testing(a, b):
    rel_tol = 1e-12
    abs_tol = 1e-05
    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)"
744,write a python function to caclucate the polygon_area,"def polygon_area( side_length, sides = 3):
    if(sides < 3 or sides > 6 ):
        raise ValueError(""number of sides must be greater than 2 and less than 7"")
    if(side_length < 0 ):
        raise ValueError(""side length must be positive"")
    return sides * (side_length ** 2) / (4 * tan(pi / sides))"
745,write a python program to get positive elements from given list of lists,"Input = [[10, -11, 222], [42, -222, -412, 99, -87]] 
temp = map(lambda elem: filter(lambda a: a>0, elem), Input) 
Output = [[a for a in elem if a>0] for elem in temp]"
746,"write the program to remove empty tuples from a list
 write  a python program to find Cumulative sum of a list
 write a python function to convert a list to string","def Remove(tuples): 
    tuples = filter(None, tuples) 
    return tuples 
list=[10,20,30,40,50]
new_list=[] 
j=0
for i in range(0,len(list)):
    j+=list[i]
    new_list.append(j) 
print(new_list) 
s = ['I', 'want', 4, 'apples', 'and', 18, 'bananas'] 
listToStr = ' '.join(map(str, s)) 
print(listToStr)"
747,write a python program to merge 2 dictionaries,"x = {'a' : 1, 'b' : 2, 'c' : 3}
y = {'x' : 10, 'y' : 20, 'z' : 30 }
z = {**x , **y}"
748,write a python code to implement Sigmoid function,"import math
def sigmoid(x):
  return 1 / (1 + math.exp(-x))"
749,write a python code to implement RELU function,"def relu(array):
    return [max(0,i) for i in array if(isinstance(i, int) or isinstance(i, float))]"
750,write a python function to check whether the given number is fibonacci or not,"def fiboacci_number_check(n):
    if(isinstance(n,int)):
        result = list(filter(lambda num : int(math.sqrt(num)) * int(math.sqrt(num)) == num, [5*n*n + 4,5*n*n - 4] ))
        return bool(result) 
    else:
        raise TypeError(""Input should be of type Int"")"
751,write a python program to strip all the vowels in a string,"string = ""Remove Vowel""
vowel = ['a', 'e', 'i', 'o', 'u']
"""".join([i for i in string if i not in vowel]"
752,write the python program to generate a random number between 0 and 9,"import csv
def read_csv(input_file):
    with open(input_file) as csv_file:
        csv_reader = csv.reader(csv_file, delimiter=',')
        for row in csv_reader:
                print(f'{row}')
                break"
753,write a python program to Generate a Random Number,"import random
print(random.randint(0,9))"
754,write a python program to Check Leap Year,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(f""{year} is a leap year"")
       else:
           print(f""{year} is not a leap year"")
   else:
       print(f""{year} is a leap year"")
else:
   print(f""{year} is not a leap year"")"
755,"write a python function to Compute LCM
 write a python function to compute gcd","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
def compute_gcd(x, y):
   while(y):
       x, y = y, x % y
   return x"
756,write a python program to Remove Punctuations From a String,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
757,write a python program to count the number of each vowels,"ip_str = 'Hello, have you tried our tutorial section yet?'
ip_str = ip_str.casefold()
count = {x:sum([1 for char in ip_str if char == x]) for x in 'aeiou'}
print(count)"
758,write a python Program to Find ASCII Value of Character,"c = 'p'
print(""The ASCII value of '"" + c + ""' is"", ord(c))"
759,write a python Program to Solve Quadratic Equation,"import cmath
a = 1
b = 5
c = 6
d = (b**2) - (4*a*c)
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)
print('The solution are {0} and {1}'.format(sol1,sol2))"
760,write a python program to Convert Celsius To Fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print(f'{celsius} degree Celsius is equal to {fahrenheit} degree Fahrenheit')"
761,write a python program to check Armstrong number of n digits,"num = 1634
order = len(str(num))
sum = 0
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** order
   temp //= 10
if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
762,write a Python Program to Find the Sum of Natural Numbers,"num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
763,write a python program  to Shuffle Deck of Cards,"import itertools, random
deck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))
random.shuffle(deck)
print(deck)"
764,write a Python function to Convert Decimal to Binary,"def convertToBinary(n):
   if n > 1:
       convertToBinary(n//2)
   print(n % 2,end = '')"
765,wrtie a python function to solve Tower Of Hanoi and print necessary statements,"def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print(""Move disk 1 from source"",source,""to destination"",destination) 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print(""Move disk"",n,""from source"",source,""to destination"",destination) 
    TowerOfHanoi(n-1, auxiliary, destination, source)"
766,write a python Program to Determine all Pythagorean Triplets in the Range,"limit= 50
c=0
m=2
while(c<limit):
    for n in range(1,m+1):
        a=m*m-n*n
        b=2*m*n
        c=m*m+n*n
        if(c>limit):
            break
        if(a==0 or b==0 or c==0):
            break
        print(a,b,c)
    m=m+1"
767,function to Convert Binary to Gray Code,"def binary_to_gray(n):
    n = int(n, 2) 
    n ^= (n >> 1)
    return bin(n)[2:]"
768,write a Python function to Find the Intersection of Two Lists,"def intersection(a, b):
    return list(set(a) & set(b))"
769,write a python program to Remove the Given Key from a Dictionary,"d = {'a':1,'b':2,'c':3,'d':4}
key= 'd'
if key in d: 
    del d[key]
else:
    print(""Key not found!"")
    exit(0)"
770,write a python function to Count the Number of Words in a Text File and print it,"def word_count(fname) : 
    num_words = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            num_words += len(words)
    print(num_words)"
771,write a python function to Count Set Bits in a Number,"def count_set_bits(n):
    count = 0
    while n:
        n &= n - 1
        count += 1
    return count"
772,wrie a python  Program to Flatten a List without using Recursion,"a=[[1,[[2]],[[[3]]]],[[4],5]]
flatten=lambda l: sum(map(flatten,l),[]) if isinstance(l,list) else [l]
print(flatten(a))"
773,,"import os
import nltk
import string
from collections import Counter
from itertools import permutations, combinations, combinations_with_replacement
letters = string.ascii_lowercase"
774,write a python function to print pyramid pattern,"def pyramid_pattern(symbol='*', count=4):
    for i in range(1, count + 1):
        print(' ' * (count - i) + symbol * i, end='')
        print(symbol * (i - 1) + ' ' * (count - i))"
775,write a python function to count the occurrence of a given word in a given file,"def check_word_count(word, file):
    if not os.path.isfile(file):
        raise FileNotFoundError
    if not isinstance(word, str):
        raise TypeError
    with open(file, 'r') as f:
        lines = f.readlines()
        words = [l.strip().split(' ') for l in lines]
        words = [word for sublist in words for word in sublist]
        c = Counter(words)
    return c.get(word, 0)"
776,write a python function to make permutations from a list with given length,"def get_permutations(data_list, l=2):
    return list(permutations(data_list, r=l))"
777,write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"def get_ordered_permutations(word, k):
    [print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"
778,"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","def get_ordered_combinations(string, k):
    [print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"
779,write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"def get_ordered_combinations_with_replacement(string, k):
    [print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"
780,"write a python function for Caesar Cipher, with given shift value and return the modified text","def caesar_cipher(text, shift=1):
    alphabet = string.ascii_lowercase
    shifted_alphabet = alphabet[shift:] + alphabet[:shift]
    table = str.maketrans(alphabet, shifted_alphabet)
    return text.translate(table)"
781,write a python function for a string to swap the case of all letters.,"def swap_case(s):
    return ''.join(x for x in (i.lower() if i.isupper() else i.upper() for i in s))"
782,write a python function to get symmetric difference between two sets from user.,"def symmetric_diff_sets():
    M, m = input(), set(list(map(int, input().split())))
    N, n = input(), set(list(map(int, input().split())))
    s = sorted(list(m.difference(n)) + list(n.difference(m)))
    for i in s:
        print(i)"
783,write a python function to check if given set is subset or not,"def check_subset():
    for _ in range(int(input())):
        x, a, z, b = input(), set(input().split()), input(), set(input().split())
    print(a.issubset(b))"
784,write a python program for basic HTML parser,"from html.parser import HTMLParser
class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs):
        print(tag)
        for attr in attrs:
            print(""->"", attr[0], "">"", attr[1])
parser = MyHTMLParser()
for i in range(int(input())):
    parser.feed(input())"
785,"write a python function for Named Entity Recognizer using NLTK
                     label = entity.label()","def ner_checker(texts):
    all_set = set()
    def nltk_ner_check(texts):
        for i, text in texts:
            for entity in nltk.ne_chunk(nltk.pos_tag(nltk.word_tokenize(text))):
                if isinstance(entity, nltk.tree.Tree):
                    etext = "" "".join([word for word, tag in entity.leaves()])
                    all_set.add(etext)
    nltk_ner_check(texts=texts)
    return all_set"
786,"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","def compress(text):
    from itertools import groupby
    for k, g in groupby(text):
        print(""({}, {})"".format(len(list(g)), k), end="" "")"
787,write a python function to count 'a's in the repetition of a given string 'n' times.,"def repeated_string(s, n):
    return s.count('a') * (n // len(s)) + s[:n % len(s)].count('a')"
788,"write a python function to find all the substrings of given string that contains 2 or more vowels. Also, these substrings must lie in between 2 consonants and should contain vowels only.","def find_substr():
    import re
    v = ""aeiou""
    c = ""qwrtypsdfghjklzxcvbnm""
    m = re.findall(r""(?<=[%s])([%s]{2,})[%s]"" % (c, v, c), input(), flags=re.I)
    print('\n'.join(m or ['-1']))"
789,write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"def min_max():
    nums = [int(x) for x in input().strip().split(' ')]
    print(sum(nums) - max(nums), sum(nums) - min(nums))"
790,"write a python function to find the number of (i, j) pairs where i<j and ar[i]+ar[j] is divisible by k in a data list","def divisible_sum_pairs(arr, k):
    count = 0
    n = len(arr)
    for i in range(n - 1):
        j = i + 1
        while j < n:
            if ((arr[i] + arr[j]) % k) == 0:
                count += 1
            j += 1
    return count
import math"
791,Write a python Class to calculate area of a circle and print the vale for a radius,"class CircleArea:
    def __init__(self, radius):
        self.radius = radius
    def area(self):
        return math.pi * self.radius * self.radius
r = 2
obj = CircleArea(r)
print(""Area of circle:"", obj.area())"
792,Write a python function to count the number of Words in a Text File,"def check_words():
    fname = input(""file name: "")
    num_words = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            num_words += len(words)
    print(""Number of words = "", num_words)"
793,Write a python function to Count the Number of Lines in a Text File,"def check_lines():
    fname = input(""file name: "")
    num_lines = 0
    with open(fname, 'r') as f:
        for line in f:
            num_lines += 1
    print(""Number of lines = "", num_lines)"
794,Write a python function that Counts the Number of Blank Spaces in a Text File,"def count_blank_space():
    fname = input(""file name:"")
    count = 0
    with open(fname, 'r') as f:
        for line in f:
            count += line.count(' ')
    return count"
795,Write a python function to check if 2 strings are anagrams or not,"def anagram(s1, s2):
    if sorted(s1) == sorted(s2):
        return True
    else:
        return False"
796,Write a python function to remove the duplicate items from a List and return the modified data list,"def remove_duplicates(data):
    c = Counter(data)
    s = set(data)
    for item in s:
        count = c.get(item)
        while count > 1:
            data.pop(item)
            count -= 1
    return data"
797,write a python function to get the most common word in text,"def most_common(text):
    c = Counter(text)
    return c.most_common(1)"
798,write a python function to do bitwise multiplication on a given bin number by given shifts,"def bit_mul(n, shift):
    return n << shift"
799,write a python function for bitwise division with given number of shifts,"def bit_div(n, shift):
    return n >> shift"
800,write a python function to get dot product between two lists of numbers,"def dot_product(a, b):
    return sum(e[0] * e[1] for e in zip(a, b))"
801,write a python function to strip punctuations from a given string,"def strip_punctuations(s):
    return s.translate(str.maketrans('', '', string.punctuation))"
802,write a python function that returns biggest character in a string,"from functools import reduce
def biggest_char(string):
    if not isinstance(string, str):
        raise TypeError
    return reduce(lambda x, y: x if ord(x) > ord(y) else y, string)"
803,write a python function to Count the Number of Digits in a Number,"def count_digits():
    n = int(input(""Enter number:""))
    count = 0
    while n > 0:
        count = count + 1
        n = n // 10
    return count"
804,write a python function to count number of vowels in a string,"def count_vowels(text):
    v = set('aeiou')
    for i in v:
        print(f'\n {i} occurs {text.count(i)} times')"
805,write a python function to check external IP address,"def check_ip():
    import re
    import urllib.request as ur
    url = ""http://checkip.dyndns.org""
    with ur.urlopen(url) as u:
        s = str(u.read())
        ip = re.findall(r""\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}"", s)
        print(""IP Address: "", ip[0])
        return ip[0]"
806,write a python function for dice roll asking user for input to continue and randomly give an output.,"def dice():
    import random
    min = 1
    max = 6
    roll_again = 'y'
    while roll_again == ""yes"" or roll_again == ""y"":
        print(""Rolling the dice..."")
        print(random.randint(min, max))
        roll_again = input(""Roll the dices again?"")
from cryptography.fernet import Fernet"
807,write a python function to generate SHA256 for given text,"def get_sha256(text):
    import hashlib
    return hashlib.sha256(text).hexdigest()"
808,write a python function to check if SHA256 hashed value is valid for given data or not,"def check_sha256_hash(hashed, data):
    import hashlib
    return True if hashed == hashlib.sha256(data.encode()).hexdigest() else False"
809,write a python function to get HTML code for a given URL,"def get_html(url=""http://www.python.org""):
    import urllib.request
    fp = urllib.request.urlopen(url)
    mybytes = fp.read()
    mystr = mybytes.decode(""utf8"")
    fp.close()
    print(mystr)"
810,"write a python function to get stock prices for a company from 2015 to 2020-12
     get data on this ticker
     get the historical prices for this ticker
     see your data","def get_stock_prices(tickerSymbol='TSLA'):
    import yfinance as yf
    tickerData = yf.Ticker(tickerSymbol)
    tickerDf = tickerData.history(period='1d', start='2015-1-1', end='2020-12-20')
    print(tickerDf)"
811,write a python function to get 10 best Artists playing on Apple iTunes,"def get_artists():
    import requests
    url = 'https://itunes.apple.com/us/rss/topsongs/limit=10/json'
    response = requests.get(url)
    data = response.json()
    for artist_dict in data['feed']['entry']:
        artist_name = artist_dict['im:artist']['label']
        print(artist_name)"
812,"get_word(data=""./christmas_carol.txt"")
 write a python function to sort each item in a data structure on one of the keys","def sort_list_with_key():
    animals = [
        {'type': 'lion', 'name': 'Mr. T', 'age': 7},
        {'type': 'tiger', 'name': 'scarface', 'age': 3},
        {'type': 'puma', 'name': 'Joe', 'age': 4}]
    print(sorted(animals, key=lambda animal: -animal['age']))"
813,write a python function with generator for an infinite sequence,"def infinite_sequence():
    n = 0
    while True:
        yield n
        n += 1
import uuid"
814,write a python function to generate a Unique identifier across space and time in this cosmos.,"def get_uuid():
    return uuid.uuid4()
import secrets"
815,write a python function to generate cryptographically strong pseudo-random data,"def get_cryptographically_secure_data(n=101):
    return secrets.token_bytes(n), secrets.token_hex(n)"
816,write a python function to convert byte to UTF-8,"def byte_to_utf8(data):
    return data.decode(""utf-8"")
print(byte_to_utf8(data=b'r\xc3\xa9sum\xc3\xa9'))"
817,"write a python function which takes length , breadth as user input and returns the area of rectangle.","def rectangle_area(length, breadth):
    area = length * breadth    
    return area"
818,"write a python function which takes a number as user input and print square, and cube of the number","def square_cube(number):
    print(number ** 2)  
    print(number ** 3)"
819,write a python program that takes height in centimeters as user input and return height in feet and inches,"cm=int(input(""Enter the height in centimeters:""))
inches=0.394*cm
feet=0.0328*cm
print(""The length in inches"",round(inches,2))
print(""The length in feet"",round(feet,2))"
820,write a python program to remove duplicates from the list and print the result,"l = [1,2,3,4,5,5,5,5,5,5,5,7,8,8,0]
result = set(l)
print(""Result : "",result)"
821,write a python function which takes length of sides as user input to calculate and return the area of a triangle,"def triangle_area(a,b,c):
    s = (a+b+c)/2
    area = (s(s-a)*(s-b)*(s-c)) ** 0.5
    return(area)"
822,write a python program to swap two numbers,"num1 = 130
num2 = 34
num1,num2 = num2,num1"
823,"Write a python program to obtain principal amount, rate of interest and time from user to print simple interest.","principal = float(input(""Enter principal : ""))
rate= float(input(""Enter rate : ""))
time = float(input(""Enter time : ""))
simple_interest = print(f""Simple Interest : {(principal*rate*time/100)}"")"
824,write a python program using while loop to reverse a number and print the reversed number,"Number = int(input(""Please Enter any Number: ""))    
Reverse = 0    
while(Number > 0):    
    Reminder = Number %10    
    Reverse = (Reverse *10) + Reminder    
    Number = Number //10    
print(""\n Reverse of entered number is = %d"" %Reverse)"
825,write a python program to take year as input and check if it is a leap year or not,"year = int(input(""Enter a year: ""))  
if (year % 4) == 0:  
   if (year % 100) == 0:  
       if (year % 400) == 0:  
           print(f""{year} is a leap year"")  
       else:  
           print(f""{year} is not a leap year"")  
   else:  
       print(f""{year} is a leap year"")  
else:  
   print(f""{year} is not a leap year"")"
826,write a python program to input a number to test and print if it is a prime number,"num = int(input(""Enter number :""))
lim = int(num/2) + 1
for i in range(2,lim):
    rem = num % i
    if rem == 0 :
        print(num,""is not a prime number"")
        break
else:
    print(num,""is a prime number"")"
827,write a python program to input a string from user and convert input string into all upper case and print the result,"string = input(""Please Enter your Own String : "")
string1 = string.upper()
print(""\nOriginal String in Lowercase  =  "", string)
print(""The Given String in Uppercase =  "", string1)"
828,write a python program to input a string from user and count vowels in a string and print the output,"str1 = input(""Please Enter Your Own String : "")
vowels = 0
for i in str1:
    if(i == 'a' or i == 'e' or i == 'i' or i == 'o' or i == 'u' or i == 'A'
       or i == 'E' or i == 'I' or i == 'O' or i == 'U'):
        vowels = vowels + 1
print(""Total Number of Vowels in this String = "", vowels)"
829,write a python program to input a Number N from user and print Odd Numbers from 1 to N,"maximum = int(input("" Please Enter any Maximum Value : ""))
for number in range(1, maximum + 1):
    if(number % 2 != 0):
        print(""{0}"".format(number))"
830,write a python program to input a Number N from user and print Even Numbers from 1 to N,"maximum = int(input("" Please Enter the Maximum Value : ""))
for number in range(1, maximum+1):
    if(number % 2 == 0):
        print(""{0}"".format(number))"
831,write a python program to input two numbers from user and add two Numbers and print the result,"number1 = input("" Please Enter the First Number: "")
number2 = input("" Please Enter the second number: "")
sum = float(number1) + float(number2)
print('The sum of {0} and {1} is {2}'.format(number1, number2, sum))"
832,write a python program that takes two integers as input and check if the first number is divisible by other,"num1 = int(input(""Enter first number :""))
num2 = int(input(""Enter second number :""))
remainder  = num1 % num2
if remainder == 0:
    print(num1 ,"" is divisible by "",num2)
else :
    print(num1 ,"" is not divisible by "",num2)"
833,write a python program to print the table of input integer,"num = int(input(""Please enter a number ""))
for a in range(1,11):
    print(num , 'x' , a , '=' ,num*a)"
834,write a python program to print the factorial of number,"num = int(input(""Please enter a number ""))
fact = 1
a = 1
while a <= num :
    fact *= a
    a += 1
print(""The factorial of "",num, "" is "",fact)"
835,write a python program which takes input a number N and print first N elements of fibonacci series,"N = int(input(""Please enter a number ""))
first = 0
second = 1
print(first)
print(second)
for a in range(1,N-1):
    third = first + second
    print(third)
    first,second = second , third"
836,write a python program to print the divisors of a integer,"num = int(input(""Please enter a integer ""))
mid = int(num / 2)
print(""The divisiors of "",num,"" are :"" )
for a in range(2,mid + 1):
    if num % a == 0:
        print(a, end = ' ')
else :
    print()
    print(""-End-"")"
837,write a python program to find the average of list of numbers provided as input by user,"n=int(input(""Enter the number of elements to be inserted: ""))
a=[]
for i in range(0,n):
    elem=int(input(""Enter element: ""))
    a.append(elem)
avg=sum(a)/n
print(""Average of elements in the list"",round(avg,2))"
838,write a python program which takes an integer N as input and add the odd numbers up to N and print the result,"N = int(input(""Enter Number : ""))
sum = 0
i = 1
while i <= N:
    sum = sum + i
    i = i + 2
print(sum)"
839,write a python function which takes input a string and returns whether is is a palindrome or not,"def isPalindrome(s):
    return s == s[::-1]"
840,write a python program which takes list as an input and calculate mean of given list of numbers,"lst = eval(input(""Enter list : ""))
mean = 0
sum = 0
for i in lst:
    sum  = sum + i
mean = sum / len(lst)
print("" The mean of given list is :"", mean)"
841,write a python program which takes list as an input and calculate sum of given list of numbers,"lst = eval(input(""Enter list : ""))
mean = 0
sum = 0
for i in lst:
    sum  = sum + i
print("" The mean of given list is :"", sum)"
842,write a python program which takes list as an input and find frequency of all elements in list,"lst = eval(input(""Enter list : ""))
mean = 0
sum = 0
for i in lst:
    sum  = sum + i
print("" The mean of given list is :"", sum)"
843,write a python function that takes two lists as an input an print out common elements in two lists,"def common_member(a, b): 
    a_set = set(a) 
    b_set = set(b) 
    if (a_set & b_set): 
        print(a_set & b_set) 
    else: 
        print(""No common elements"")"
844,write a python function that takes two lists and append second list after the first list,"lst1 = eval(input(""Enter list : ""))
lst2 = eval(input(""Enter list : ""))
print(lst1 + lst2)"
845,write a python program to calculate and print square root of numbers 0 to 100,"i = 0
while i<= 100:
 print(i, ""\t\t"" , i**0.5)
 i = i + 1"
846,"write a python program greets the user with ""Hello"", after user inputs his name:","name = input (""Input your name: "")
print(""HELLO "", name)"
847,write a python program which takes input a string and print reverse string,"name = input(""Enter String"")
print(name[::-1])"
848,write a python program which takes input a list and print reverse output,"lst = eval(input(""Enter list""))
print(lst[::-1])"
849,write a python function which takes sentence as input and remove vowels from a sentence,"sentence = input(""Enter a sentence : "")
def fn(sentence):
    vowels = 'aeiou'
    return ''.join([ l for l in sentence if l not in vowels])"
850,write a python function which takes two list of same length as input and return a dictionary with one as keys and other as values.,"keys = eval(input(""Enter key list : ""))
values = eval(input(""Enter value list : ""))
def fn(keys, values):
    return { keys[i] : values[i] for i in range(len(keys)) }"
851,"write a python function that takes an integer as input and returns the factorial of that number
     single line to find factorial","def factorial(n): 
    return 1 if (n==1 or n==0) else n * factorial(n - 1);"
852,write a python function that takes input radius and return area of circle,"def findArea(r): 
    PI = 3.142
    return PI * (r*r);"
853,"write a python funtion that takes input principle, rate, time and calculate compound intrest
     Calculates compound interest","def compound_interest(principle, rate, time):
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    print(""Compound interest is"", CI)"
854,write a python program to print the ascii value of input character,"character = input("" Enter Character :"")
print(f""Ascii value of character {character} is : "" , ord(character))"
855,write a python program that takes input an integer and find sum of series with cubes of first n natural numbers using list comprehension which ta,"N = int(input(""Enter Integer ""))
lst = [i**3 for i in range(1, N + 1)]
print(sum(lst))"
856,write a python function that takes list as an input and converts it into tuple,"def convert(list): 
    return tuple(list)"
857,"Write a Python program to get a list, sorted in increasing order by the last element in each tuple from a given list of non-empty tuples.","def last(n): return n[-1]
def sort_list_last(tuples):
  return sorted(tuples, key=last)
print(sort_list_last([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))"
858,write a python program to concatenate two dictionaries,"d1 = {'a' : 1 ,'b' : 2}
d2 = {'c' : 1 ,'d' : 2}
d3 = {**d1,**d2}
print(d3)"
859,"Write a Python program to print the length of a set.
Create a set
Find the length use len()","seta = set([5, 10, 3, 15, 2, 20])
print(len(seta))"
860,write a python program that takes two sets as input and print the common elements,"s1 = eval(input(""Enter set 1 ""))
s2 = eval(input(""Enter set 2 ""))
print(s1.intersection(s2))"
861,write a python program which takes input a list and prints the mean of elements within the list,"s1 = eval(input(""Enter list ""))
mean = sum(s1) / len(s1) 
print(""Mean of sample is : "" + str(mean))"
862,write a python program which takes input a list and prints the standard deviation of elements within the list,"mean = sum(s1) / len(s1) 
variance = sum([((x - mean) ** 2) for x in s1]) / len(s1) 
res = variance ** 0.5
print(""Standard deviation of sample is : "" + str(res))"
863,write a python program which prints a random number,"import random
n = random.random()
print(n)"
864,write a python function that takes input a string and removes duplicates from the same,"foo = input(""Enter String : "")
print(""Duplicates Removed"","""".join(set(foo)))"
865,"Write a Python program to add 'ing' at the end of a given string (length should be at least 3). If the given string already ends with 'ing' then add 'ly' instead. If the string length of the given string is less than 3, leave it unchanged.","def add_string(str1):
  length = len(str1)
  if length > 2:
    if str1[-3:] == 'ing':
      str1 += 'ly'
    else:
      str1 += 'ing'
  return str1"
866,"Write a Python program to find the first appearance of the substring 'not' and 'poor' from a given string, if 'not' follows the 'poor', replace the whole 'not'...'poor' substring with 'good'. Return the resulting string.","def not_poor(str1):
  snot = str1.find('not')
  spoor = str1.find('poor')
  if spoor > snot and snot>0 and spoor>0:
    str1 = str1.replace(str1[snot:(spoor+4)], 'good')
    return str1
  else:
    return str1"
867,Write a Python program to count the occurrences of each word in a given sentence.,"def word_count(str):
    counts = dict()
    words = str.split()
    for word in words:
        if word in counts:
            counts[word] += 1
        else:
            counts[word] = 1
    return counts"
868,Write a Python function to create the HTML string with tags around the word(s).,"def add_tags(tag, word):
	return ""<%s>%s</%s>"" % (tag, word, tag)"
869,Write a Python program to count the number of even and odd numbers from a series of numbers.,"numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9) # Declaring the tuple
count_odd = 0
count_even = 0
for x in numbers:
        if not x % 2:
    	     count_even+=1
        else:
    	     count_odd+=1"
870,Write a Python program that prints each item and its corresponding type from the following list.,"datalist = [1452, 11.23, 1+2j, True, 'w3resource', (0, -1), [5, 12],
{""class"":'V', ""section"":'A'}]
for item in datalist:
   print (""Type of "",item, "" is "", type(item))"
871,Write a Python program to sort (ascending) a dictionary by value.,"d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
print({k :v for k,v in sorted(d.items(),key = lambda x : x[1])})"
872,Write a Python program to sort (Descending) a dictionary by value.,"d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
print({k :v for k,v in sorted(d.items(),key = lambda x : x[1],reverse = True)})"
873,Write a Python program to sort list.,"numbers = [1, 3, 4, 2] 
numbers.sort()  
print(numbers)"
874,Write a Python program to sort a list of tuples by second Item,"def Sort_Tuple(tup):  
    return(sorted(tup, key = lambda x: x[1]))   
tup = [('rishav', 10), ('akash', 5), ('ram', 20), ('gaurav', 15)]  
print(Sort_Tuple(tup))"
875,write a python program that tke two inputs from user and check whether they are equal or not.,"print(""Enter first number"")
first = input()
print(""Enter second number"")
second = input()
print(first == second)"
876,write a python program that takes input a list and squares every term using list comprehension,"s1 = eval(input(""Enter list ""))
print([i**2 for i in s1])"
877,write a python program that takes input a list and cube every term using list comprehension,"s1 = eval(input(""Enter list ""))
print([i**3 for i in s1])"
878,write a python program that takes input a list and square root every term using list comprehension,"s1 = eval(input(""Enter list ""))
print([i**0.5 for i in s1])"
879,write a python function that takes input a list of string and print the largest string,"def find_longest_word(words_list):
    word_len = []
    for n in words_list:
        word_len.append((len(n), n))
    word_len.sort()
    return word_len[-1][0], word_len[-1][1]"
880,write a python program that takes input a string and prints the count of words,"s1 = input(""Enter string "")
print(""Count of words"",len(s1.split()))"
881,write a Python function that takes list of tuples as input and sort those alphabetically,"def SortTuple(tup): 
    n = len(tup) 
    for i in range(n): 
        for j in range(n-i-1): 
            if tup[j][0] > tup[j + 1][0]: 
                tup[j], tup[j + 1] = tup[j + 1], tup[j] 
    return tup"
882,write a python program which takes a list and swaps the first and last value of the list.,"a=[]
n= int(input(""Enter the number of elements in list:""))
for x in range(0,n):
    element=int(input(""Enter element"" + str(x+1) + "":""))
    a.append(element)
temp=a[0]
a[0]=a[n-1]
a[n-1]=temp
print(""New list is:"")
print(a)"
883,write a python program that print today's date,"from datetime import date
print(date.today())"
884,write a python program that takes input number of lines and finds the possible number of intersection,"def countMaxIntersect(n): 
    return int(n*(n - 1)/2)"
885,write a python program to input a number n and print an inverted star pattern of the desired size.,"n=int(input(""Enter number of rows: ""))
for i in range (n,0,-1):
    print((n-i) * ' ' + i * '*')"
886,write a python program to input a number and check whether a given number is a palindrome.,"n=int(input(""Enter number:""))
temp=n
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
if(temp==rev):
    print(""The number is a palindrome!"")
else:
    print(""The number isn't a palindrome!"")"
887,write a python program to input a number and find the smallest divisor of an integer.,"n=int(input(""Enter an integer:""))
a=[]
for i in range(2,n+1):
    if(n%i==0):
        a.append(i)
a.sort()
print(""Smallest divisor is:"",a[0])"
888,write a python program to accept three distinct digits and prints all possible combinations from the digits.,"a=int(input(""Enter first number:""))
b=int(input(""Enter second number:""))
c=int(input(""Enter third number:""))
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
    for j in range(0,3):
        for k in range(0,3):
            if(i!=j&j!=k&k!=i):
                print(d[i],d[j],d[k])"
889,write a python function to insert an element into sorted python list,"def insert(list, n): 
    for i in range(len(list)): 
        if list[i] > n: 
            index = i 
            break
    list = list[:i] + [n] + list[i:] 
    return list"
890,write a python program to add two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 + num2
print(f'Sum: {sum}')"
891,write a python function to add two user provided numbers and return the sum,"def add_two_numbers(num1, num2):
    sum = num1 + num2
    return sum"
892,write a program to find and print the largest among three number,"snum1 = 10
num2 = 12
num3 = 14 
if (num1 >= num2) and (num1 >= num3): 
   largest = num1
elif (num2 >= num1) and (num2 >= num3):   
    largest = num2
else:   largest = num3
print(f'largest:{largest}')"
893,write a python function to subtract two user provided numbers and return the result,"def sub_two_numbers(num1, num2):
    sub = num1 - num2
    return sub"
894,write a python function to multiply two user provided numbers and return the result,"def mul_two_numbers(num1, num2):
    mul = num1 * num2
    return mul"
895,write a python program to pop element form dictionary,"squares = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}
print(squares.pop(4))"
896,write a python program that prints the length of tuple,"thistuple = (""apple"", ""banana"", ""cherry"")
print(len(thistuple))"
897,"1 write a program to get numbers = 1,3,11,42,12,4001","from collections import Iterable
highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
898,"2 write a program to get numbers = 1,3,11,42,12,4001","highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
899,3 add 1 to all elements in list python,"lst = [1,2,3]
list(map(lambda x:x+1, lst))"
900,4 add a string to each element of a list python,"my_list = ['foo', 'fob', 'faz', 'funk']
string = 'bar'
list2 = list(map(lambda orig_string: orig_string + string, my_list))"
901,"5 add a third dimension matrix dataset python
 or","x = [2D_matrix] # To convert from a 2-D to 3-D
x = [[[value1]]] # To convert from a 1-D to 3-D"
902,6 python add all values of another list,"a = [1, 2, 3]
b = [4, 5, 6]
a += b"
903,7 add a value to the start of a list python,"var=7
array = [1,2,3,4,5,6]
array.insert(0,var)"
904,8 print into lowersase an uppercase sentence in python,"s = ""Kilometer""
print(s.lower())"
905,9 sort a dictionary,"mydictionary : {1: 1, 7: 2, 4: 2, 3: 1, 8: 1}
sortedDictionary = sorted(mydictionary.keys())"
906,10 limit decimals to only two decimals in python,"answer = str(round(answer, 2))"
907,11 print how many keys are in a dictionary python,"a = {'foo':42, 'bar':69}
print(len(a))"
908,11 access index of a character in a string python,"foo = 'Hello'
foo.find('lo')"
909,12 python print last element of list,"mylist = [0, 1, 2]
print(myList[-1])"
910,13 how to add a blank line in python,"print("""")"
911,14 how to add element at first position in array python,"x = [1,3,4]
a = 2
x.insert(1,a)"
912,15 how to add extra zeros after decimal in python,"format(2.0, '.6f')
'2.000000'"
913,16 how to add list numbers in python,"numbers = [1,2,3,4,5,1,4,5] 
Sum = sum(numbers)"
914,17 split list into lists of equal length python,"[lst[i:i + n] for i in range(0, len(lst), n)]"
915,18 how to break out of nested loops python,"x_loop_must_break = False
for x in [1, 2, 3]:
    print(f""x is {x}"")
    for y in [1, 2, 3]:
        print(f""y is {y}"")
        if y == 2:
            x_loop_must_break = True
            break
    if x_loop_must_break: break"
916,19 capitalize first letter in python in list,"my_list = ['apple pie', 'orange jam']
my_list[0].capitalize()"
917,20 how to check if a list is a subset of another list,"if(all(x in test_list for x in sub_list)): 
    flag = True"
918,21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"def is_camel_case(s):
    return s != s.lower() and s != s.upper() and ""_"" not in s"
919,22 how to check if string is in byte formate pythin,"isinstance(string, bytes)"
920,23 how to check nth prime in python,"x=int(input())
n,c=1,0
while(c<x):
    n+=1
    for i in range(2,n+1):
        if(n%i==0):
            break
    if(i==n):
        c=c+1"
921,24 how to convert fahrenheit to celsius in python,Celsius = (Fahrenheit - 32) * 5.0/9.0
922,25 print binary of a decimal number,"a=6
print(bin(a))"
923,26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"def getBaseTen(binaryVal):
    count = 0
    binaryVal = binaryVal[::-1]
	for i in range(0, len(binaryVal)):
    	if(binaryVal[i] == ""1""):
            count += 2**i
    return count"
924,27 write a python funtion to execute bash commands,"import subprocess
subprocess.call([""sudo"", ""apt"", ""update""])"
925,27 write a function to generate and print a random number between 0 and 22,"import random
n = random.randint(0,22)
print(n)"
926,28 to get a random element from an array in python,"import random
list_ = [1,2,3,4]
random.choice(list_)"
927,29 print current day in python,"from datetime import date
today = date.today()
print(""Today's date:"", today)"
928,30 program to count number of cpu cores available,"import os
os.cpu_count()"
929,30 get rid of all null values in array python,"mylist = [1, 2, 3, '', 4]
mylist = [i for i in mylist if i]"
930,31 get the most common number in python,"from statistics import mode
mode((1, 2, 4, 4, 5, 4, 4, 2, 3, 8, 4, 4, 4))"
931,32 print current version of python,"import sys
print(sys.version)"
932,33 write a python function to flatten nested lists,"from collections import Iterable
def flatten(lis):
    for item in lis:
        if isinstance(item, Iterable) and not isinstance(item, str):
            for x in flatten(item):
                yield x
        else:
            yield item"
933,34 write a python function to convert a string  into xml,"import xml.etree.ElementTree as ET
root = ET.fromstring(country_data_as_string)"
934,35 how to open xml file element tree,"import xml.etree.ElementTree as ET
tree = ET.parse('filename.xml') 
tree_root = tree.getroot()"
935,36 python parse datetime from string,"from datetime import datetime
datetime_object = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')"
936,37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"data = [7, 7, 7, 7]
print(*data, sep='')"
937,38 how to read a specific line from a text file in python,"line = open(""file.txt"", ""r"").readlines()[7]"
938,39 how to remove integer from string in python,"s = '12abcd405'
result = ''.join([i for i in s if not i.isdigit()])"
939,40 write a function to return the nth fibonacci in python,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)"
940,41 how to sort a list in python using lambda,"data = [(""Apples"", 5, ""20""), (""Pears"", 1, ""5""), (""Oranges"", 6, ""10"")]
data.sort(key=lambda x:x[0])"
941,43 write a to time a python script,"from datetime import datetime
start = datetime.now()
do_something():...
print(datetime.now() - start)"
942,44 write a  Python function to find intersection of two sorted arrays,"def printIntersection(arr1, arr2, m, n): 
    i, j = 0, 0
    while i < m and j < n: 
        if arr1[i] < arr2[j]: 
            i += 1
        elif arr2[j] < arr1[i]: 
            j+= 1
        else: 
            print(arr2[j]) 
            j += 1
            i += 1
arr1 = [1, 2, 4, 5, 6] 
arr2 = [2, 3, 5, 7] 
m = len(arr1) 
n = len(arr2) 
printIntersection(arr1, arr2, m, n)"
943,46 write Python Function to print leaders in array,"def printLeaders(arr,size):
    for i in range(0, size):
        for j in range(i+1, size):
            if arr[i]<arr[j]:
                break
        if j == size-1:  
            print(arr[i])
arr=[16, 17, 4, 3, 5, 2] 
printLeaders(arr, len(arr))"
944,47 write a python function to print lcm of n numbers python,"import math
def LCMofArray(a):
  lcm = a[0]
  for i in range(1,len(a)):
    lcm = lcm*a[i]//math.gcd(lcm, a[i])
  return lcm
arr1 = [1,2,3]
print(""LCM of arr1 elements:"", LCMofArray(arr1))"
945,48 write a python Program to multiply two matrices and print the result,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]
for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
946,48 write a python program to merge a list of dictionaires,"result = {}
for d in L:
    result.update(d)"
947,50 write a python function to find the median on an array of numbers,"def median(arr):
  if len(arr) == 1:
    return arr[0]
  else:
    arr = sorted(arr)
    a = arr[0:round(len(arr)/2)]
    b = arr[len(a):len(arr)]
    if len(arr)%2 == 0:
      return (a[len(a)-1]+b[0])/2
    else:
      return a[len(a)-1]"
948,51 write a python function to find a missing number in a list of consecutive natural numbers,"def getMissingNo(A): 
    n = len(A) 
    total = (n + 1)*(n + 2)/2
    sum_of_A = sum(A) 
    return total - sum_of_A"
949,52 write a python program to normalize a list of numbers and print the result,"a = [2,4,10,6,8,4]
amin, amax = min(a), max(a)
for i, val in enumerate(a):
    a[i] = (val-amin) / (amax-amin)
print(a)"
950,53  write a python program to permutations of a given string in python and print the result,"from itertools import permutations 
import string 
s = ""GEEK""
a = string.ascii_letters 
p = permutations(s) 
d = [] 
for i in list(p): 
    if (i not in d): 
        d.append(i) 
        print(''.join(i))"
951,54 Write a Python function to check if a number is a perfect square,"def is_perfect_square(n):
    x = n // 2
    y = set([x])
    while x * x != n:
        x = (x + (n // x)) // 2
        if x in y: return False
        y.add(x)
    return True"
952,55 Write a Python function to check if a number is a power of a given base.,"import math
def isPower (n, base):
    if base == 1 and n != 1:
        return False
    if base == 1 and n == 1:
        return True
    if base == 0 and n != 1:
        return False
    power = int (math.log(n, base) + 0.5)
    return base ** power == n"
953,57 Write a Python function to find the single number in a list that doesn't occur twice.,"def single_number(arr):
    result = 0
    for i in arr:
        result ^= i
    return result"
954,58 Write a Python function to find the single element in a list where every element appears three times except for one.,"def single_number(arr):
    ones, twos = 0, 0
    for x in arr:
        ones, twos = (ones ^ x) & ~twos, (ones & x) | (twos & ~x)
    assert twos == 0
    return ones"
955,59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,"def add_digits(num):
        return (num - 1) % 9 + 1 if num > 0 else 0"
956,"60 Write a function program to reverse the digits of an integer.
         Remove leading zero in the reversed integer
         string manipulation","def reverse_integer(x):
        sign = -1 if x < 0 else 1
        x *= sign
        while x:
            if x % 10 == 0:
                x /= 10
            else:
                break
        x = str(x)
        lst = list(x)  # list('234') returns ['2', '3', '4']
        lst.reverse()
        x = """".join(lst)
        x = int(x)
        return sign*x"
957,61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,"def reverse_Bits(n):
        result = 0
        for i in range(32):
            result <<= 1
            result |= n & 1
            n >>= 1
        return result"
958,62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,"def is_arithmetic(l):
    delta = l[1] - l[0]
    for index in range(len(l) - 1):
        if not (l[index + 1] - l[index] == delta):
             return False
    return True"
959,"63 Python Challenges: Check a sequence of numbers is a geometric progression or not
     Calculate ratio
     Check the ratio of the remaining","def is_geometric(li):
    if len(li) <= 1:
        return True
    ratio = li[1]/float(li[0])
    for i in range(1, len(li)):
        if li[i]/float(li[i-1]) != ratio: 
            return False
    return True"
960,64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"def reverse_sum(n1, n2):
    return int(str(int(str(n1)[::-1]) + int(str(n2)[::-1]))[::-1])"
961,"65 Write a Python function where you take any positive integer n, if n is even, divide it by 2 to get n / 2. If n is odd, multiply it by 3 and add 1 to obtain 3n + 1. Repeat the process until you reach 1.","def collatz_sequence(x):
    num_seq = [x]
    if x < 1:
       return []
    while x > 1:
       if x % 2 == 0:
         x = x / 2
       else:
         x = 3 * x + 1
       num_seq.append(x)    
    return num_seq"
962,65 Write a Python function to check if a given string is an anagram of another given string.,"def is_anagram(str1, str2):
    list_str1 = list(str1)
    list_str1.sort()
    list_str2 = list(str2)
    list_str2.sort()
    return (list_str1 == list_str2)"
963,66 Write a Python function to push all zeros to the end of a list.,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return(x)"
964,67 Write a Python function to the push the first number to the end of a list.,"def move_last(num_list):
    a = [num_list[0] for i in range(num_list.count(num_list[0]))]
    x = [ i for i in num_list if i != num_list[0]]
    x.extend(a)
    return(x)"
965,68 Write a Python function to find the length of the last word.,"def length_of_last_word(s):
        words = s.split()
        if len(words) == 0:
            return 0
        return len(words[-1])"
966,"70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.
     Initialize result
     Traverse the array
         XOR","def odd_occurrence(arr):
    result = 0
    for element in arr:
        result = result ^ element
    return result"
967,71 Write a Python function that takes a string and encode it that the amount of symbols would be represented by integer and the symbol.,"For example, the string ""AAAABBBCCDAAA"" would be encoded as ""4A3B2C1D3A""
def encode_string(str1):
    encoded = """"
    ctr = 1
    last_char = str1[0]
    for i in range(1, len(str1)):
        if last_char == str1[i]:
            ctr += 1
        else:
            encoded += str(ctr) + last_char
            ctr = 0
            last_char = str1[i]
            ctr += 1
    encoded += str(ctr) + last_char
    return encoded"
968,72 Write a Python function to create a new array such that each element at index i of the new array is the product of all the numbers of a given array of integers except the one at i.,"def product(nums):
    new_nums = []
    for i in nums:
        nums_product = 1
        for j in nums:     
            if j != i:
                nums_product = nums_product * j
        new_nums.append(nums_product)
    return new_nums"
969,73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"r = range(1, 201)
a = sum(r)
print (a * a - sum(i*i for i in r))"
970,74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,"def digits_sum():
	n = 2**20
	ans = sum(int(c) for c in str(n))
	return str(ans)"
971,75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"n = 0
for i in range(1,500):
     if not i % 5 or not i % 3:
         n = n + i
print(n)"
972,76 Write a Python function to converting an integer to a string in any base.,"def to_string(n,base):
   conver_tString = ""0123456789ABCDEF""
   if n < base:
      return conver_tString[n]
   else:
      return to_string(n//base,base) + conver_tString[n % base"
973,77 Write a Python function to calculate the geometric sum of n-1.,"def geometric_sum(n):
  if n < 0:
    return 0
  else:
    return 1 / (pow(2, n)) + geometric_sum(n - 1)"
974,78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"def Recurgcd(a, b):
	low = min(a, b)
	high = max(a, b)
	if low == 0:
		return high
	elif low == 1:
		return 1
	else:
		return Recurgcd(low, high%low)"
975,"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","between 2000 and 3200 (both included).  
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print ','.join(l)"
976,81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"def bytearray_to_hexadecimal(list_val):
     result = ''.join('{:02x}'.format(x) for x in list_val)  
     return(result)"
977,82 Write a Python program to count number of substrings with same first and last characters of a given string.,"def no_of_substring_with_equalEnds(str1): 
	result = 0; 
	n = len(str1); 
	for i in range(n): 
		for j in range(i, n): 
			if (str1[i] == str1[j]): 
				result = result + 1
	return result"
978,83 Write a Python program to move all spaces to the front of a given string in single traversal.,"def moveSpaces(str1): 
    no_spaces = [char for char in str1 if char!=' ']   
    space= len(str1) - len(no_spaces)
    result = ' '*space    
    return result + ''.join(no_spaces)"
979,84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"def max_consecutive_0(input_str): 
     return  max(map(len,input_str.split('1')))
str1 = '111000010000110'
print(""Original string:"" + str1)
print(""Maximum length of consecutive 0’s:"")"
980,85 Write a Python program that iterate over elements repeating each as many times as its count.,"from collections import Counter
c = Counter(p=4, q=2, r=0, s=-2)
print(list(c.elements()))"
981,86 Write a Python program to find the second smallest number in a list.,"def second_smallest(numbers):
  if (len(numbers)<2):
    return
  if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):
    return
  dup_items = set()
  uniq_items = []
  for x in numbers:
    if x not in dup_items:
      uniq_items.append(x)
      dup_items.add(x)
  uniq_items.sort()    
  return  uniq_items[1]"
982,87 Write a Python function to check whether a list contains a sublist.,"def is_Sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1
				if n == len(s):
					sub_set = True
	return sub_set"
983,86 Write a Python program to generate groups of five consecutive numbers in a list,"l = [[5*i + j for j in range(1,6)] for i in range(5)]
print(l)"
984,87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"print(max(num, key=sum))"
985,88 Write a Python fuction to print the depth of a dictionary.,"def dict_depth(d):
    if isinstance(d, dict):
        return 1 + (max(map(dict_depth, d.values())) if d else 0)
    return 0
dic = {'a':1, 'b': {'c': {'d': {}}}}
print(dict_depth(dic))"
986,89 Write a Python function to pack consecutive duplicates of a given list elements into sublists and print the output.,"from itertools import groupby
def pack_consecutive_duplicates(l_nums):
    return [list(group) for key, group in groupby(l_nums)]
n_list = [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ]
print(""Original list:"") 
print(n_list)
print(""\nAfter packing consecutive duplicates of the said list elements into sublists:"")
print(pack_consecutive_duplicates(n_list))"
987,90 Write a Python function to create a list reflecting the modified run-length encoding from a given list of integers or a given list of characters and print the output.,"from itertools import groupby
def modified_encode(alist):
        def ctr_ele(el):
            if len(el)>1: return [len(el), el[0]]
            else: return el[0]
        return [ctr_ele(list(group)) for key, group in groupby(alist)]
n_list = [1,1,2,3,4,4,5, 1]
print(""Original list:"") 
print(n_list)
print(""\nList reflecting the modified run-length encoding from the said list:"")
print(modified_encode(n_list))"
988,91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"nums = []
for i in range(3):
    nums.append([])
    for j in range(2):
        nums[i].append(0)
print(""Multidimensional list:"")
print(nums)"
989,92 Write a Python function to read a square matrix from console and print the sum of matrix primary diagonal.Accept the size of the square matrix and elements for each column separated with a space (for every row) as input from the user and print the output.,"size = int(input(""Input the size of the matrix: ""))
matrix = [[0] * size for row in range(0, size)]
for x in range(0, size):
    line = list(map(int, input().split()))
    for y in range(0, size):
        matrix[x][y] = line[y]
matrix_sum_diagonal = sum(matrix[size - i - 1][size - i - 1] for i in range(size))"
990,93 Write a Python function to check if a nested list is a subset of another nested list and print the output.,"def checkSubset(input_list1, input_list2): 
    return all(map(input_list1.__contains__, input_list2)) 
list1 = [[1, 3], [5, 7], [9, 11], [13, 15, 17]] 
list2 = [[1, 3],[13,15,17]]   
print(""Original list:"")
print(list1)
print(list2)
print(""\nIf the one of the said list is a subset of another.:"")
print(checkSubset(list1, list2))"
991,94 Write a Python function to print all permutations with given repetition number of characters of a given string and print the output.,"from itertools import product
def all_repeat(str1, rno):
  chars = list(str1)
  results = []
  for c in product(chars, repeat = rno):
    results.append(c)
  return results
print(all_repeat('xyz', 3))"
992,95 Write a Python function to find the index of a given string at which a given substring starts. If the substring is not found in the given string return 'Not found' and print the output.,"def find_Index(str1, pos):
    if len(pos) > len(str1):
        return 'Not found'
    for i in range(len(str1)):
        for j in range(len(pos)):
            if str1[i + j] == pos[j] and j == len(pos) - 1:
                return i
            elif str1[i + j] != pos[j]:
                break
    return 'Not found"
993,"96 Write a Python program to find the smallest multiple of the first n numbers. Also, display the factors.","def smallest_multiple(n):
    if (n<=2):
      return n
    i = n * 2
    factors = [number  for number in range(n, 1, -1) if number * 2 > n]
    print(factors)
    while True:
        for a in factors:
            if i % a != 0:
                i += n
                break
            if (a == factors[-1] and i % a == 0):
                return i"
994,97 Write a Python program to print all permutations of a given string (including duplicates).,"def permute_string(str):
    if len(str) == 0:
        return ['']
    prev_list = permute_string(str[1:len(str)])
    next_list = []
    for i in range(0,len(prev_list)):
        for j in range(0,len(str)):
            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]
            if new_str not in next_list:
                next_list.append(new_str)
    return next_lis"
995,98 Write a Python program to multiply two integers without using the '*' operator in python.,"def multiply(x, y):
    if y < 0:
        return -multiply(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply(x, y - 1)"
996,99 Write a Python program to calculate distance between two points using latitude and longitude.,"from math import radians, sin, cos, acos
print(""Input coordinates of two points:"")
slat = radians(float(input(""Starting latitude: "")))
slon = radians(float(input(""Ending longitude: "")))
elat = radians(float(input(""Starting latitude: "")))
elon = radians(float(input(""Ending longitude: "")))
dist = 6371.01 * acos(sin(slat)*sin(elat) + cos(slat)*cos(elat)*cos(slon - elon))
print(""The distance is %.2fkm."" % dist)"
997,99 Write a Python class to convert a roman numeral to an integer.,"class Solution:
    def roman_to_int(self, s):
        rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        int_val = 0
        for i in range(len(s)):
            if i > 0 and rom_val[s[i]] > rom_val[s[i - 1]]:
                int_val += rom_val[s[i]] - 2 * rom_val[s[i - 1]]
            else:
                int_val += rom_val[s[i]]
        return int_val"
998,Write a program to merge two python dictionaries and print merged dictionary,"d1 = {'a': 100, 'b': 200}
d2 = {'x': 300, 'y': 200}
d = d1.copy()
d.update(d2)
print(d)"
999,write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"def concat_two_numbers(num1, num2):
    combined_num = str(num1) + str(num2)
    return int(combined_num)"
1000,"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n = 8
d = dict()
for i in range(1,n+1):
    d[i] = i*i*i
print(d)"
1001,Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values=input()
l=values.split("","")
t=tuple(l)
print(l)
print(t)"
1002,Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,"def test_distinct(data):
  if len(data) == len(set(data)):
    return True
  else:
    return False"
1003,"Write a Python function to find the number of notes (Sample of notes: 10, 20, 50, 100, 200 and 500 ) against a given amount.","def no_notes(a):
  Q = [500, 200, 100, 50, 20, 10, 5, 2, 1]
  x = 0
  for i in range(9):
    q = Q[i]
    x += int(a / q)
    a = int(a % q)
  if a > 0:
    x = -1
  return x"
1004,Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,"def factendzero(n):
  x = n // 5
  y = x 
  while x > 0:
    x /= 5
    y += int(x)
  return y"
1005,Write a Python function to remove leading zeros from an IP address,"import re
regex = '\.[0]*'
def remove_leading_zeros(ip):
    modified_ip = re.sub(regex, '.', ip)
    return modified_ip"
1006,Write a Python function to return binary value of a given integer,"def int_to_bin(a):
  return bin(a)"
1007,Write a Python function to return octal value of a given integer,"def int_to_oct(a):
  return oct(a)"
1008,Write a Python function to return hexadecimal value of a given integer,"def int_to_hex(a):
  return hex(a)"
1009,Write a Python program to typecast given input to integer,"num = int(input(""Input a value: ""))
print(num)"
1010,Write a Python program to typecast given input to float,"num = float(input(""Input a value: ""))
print(num)"
1011,Write a Python program to check/test multiple variables against a value,"a = 10
b = 20
c = 30
if 10 in {a, b, c}:
  print(""True"")
else:
  print(""False"")"
1012,"Write a Python class that will initiate a number, input a number and print the number","class Number:
	def __init__(self, num):
		self.num = num
	def inputNum(self):
		self.num = int(input(""Enter an integer number: ""))
	def printNum(self):
		print(self.num)"
1013,"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","def simple_interest(p,r,t):
    si = (p*r*t)/100
    return si"
1014,"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","def compound_interest(p,r,t):
    ci = p * (pow((1 + r / 100), t)) 
    return ci"
1015,Write a Python function to check whether a person is eligible for voting or not based on their age,"def vote_eligibility(age):
	if age>=18:
	    status=""Eligible""
	else:
	    status=""Not Eligible""
	return status"
1016,Write a Python function to find the BMI for given weight and height of a person,"def bmi_calculator(height, weight):
	bmi = weight/(height**2)
	return bmi"
1017,Write a Python function to check whether a given number is perfect number or not,"def perfect_number_checker(num):
    i = 2
    sum = 1
    while(i <= num//2 ) :
        if (num % i == 0) :
            sum += i
        i += 1
    if sum == num :
        return f'{num} is a perfect number'
    else :
        return f'{num} is not a perfect number'"
1018,Write a Python function to find the maximum ODD number from a given list,"def odd_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 != 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
1019,Write a Python function to find the maximum EVEN number from a given list,"def even_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 == 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
1020,Write a Python function to print the root of the quadratic equation,"def quadratic_root(A,B,C):
	import math
	d=((B**2)-4*A*C)
	if d>=0:
	    s=(-B+(d)**0.5)/(2*A)
	    p=(-B-(d)**0.5)/(2*A)
	    print(math.floor(s),math.floor(p))
	else:
	    print('The roots are imaginary')"
1021,Write a Python program to print the calendar of any given year,"import calendar
year=2020
print(calendar.calendar(year))"
1022,Write a Python function to print whether the given Date is valid or not,"def date_validator(d,m,y):
	import datetime 
	try:
		s=datetime.date(y,m,d)
		print(""Date is valid."")
	except ValueError: 
		print(""Date is invalid."")"
1023,Write a Python function to find the N-th number which is both square and cube,"def nth_sq_and_cube(N):
	R = N**6
	return R"
1024,Write a Python function to check whether a number is a power of another number or not,"def power_checker(a,b):
	import math
	s=math.log(a,b)
	p=round(s)
	if (b**p)==a:
	    return f'{a} is the power of {b}.'
	else:
	    return f'{a} is NOT the power of {b}.'"
1025,Write a Python function to,"def binary_palindrome(n):
	s=int(bin(n)[2:])
	r=str(s)[::-1]
	if int(r)==s:
	    return ""The binary representation of the number is a palindrome.""
	else:
	    return ""The binary representation of the number is NOT a palindrome."""
1026,Write a Python program to print the list of all keywords,"import keyword
print(""Python keywords are..."")
print(keyword.kwlist)"
1027,Write a Python function to find the intersection of two arrays,"def array_intersection(A,B):
	inter=list(set(A)&set(B))
	return inter"
1028,Write a Python function to find the union of two arrays,"def array_union(A,B):
	union=list(set(A)|set(B))
	return union"
1029,"Write a Python program that prints a new set with all items from both sets by removing duplicates
 ---------------------------------------------------------","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.union(set2))"
1030,"Write a Python program that Given two Python sets, update first set with items that exist only in the first set and not in the second set
 ---------------------------------------------------------","set1 = {10, 20, 30}
set2 = {20, 40, 50}
print(set1.difference_update(set2))"
1031,"Write a Python program that prints a set of all elements in either A or B, but not both
 ---------------------------------------------------------","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
1032,"Write a Python program that determines whether or not the following two sets have any elements in common. If yes display the common elements
 ---------------------------------------------------------","set1 = {10, 20, 30, 40, 50}
set2 = {60, 70, 80, 90, 10}
if set1.isdisjoint(set2):
  print(""Two sets have no items in common"")
else:
  print(""Two sets have items in common"")
  print(set1.intersection(set2))"
1033,Write a Python function to print number with commas as thousands separators,"def formattedNumber(n):
  return (""{:,}"".format(n))"
1034,Write a Python program to find the total number of uppercase and lowercase letters in a given string,"str1='TestStringInCamelCase'
no_of_ucase, no_of_lcase = 0,0
for c in str1:
    if c>='A' and c<='Z':
        no_of_ucase += 1
    if c>='a' and c<='z':
        no_of_lcase += 1
print(no_of_lcase)
print(no_of_ucase)"
1035,Write a Python program to find the total number of letters and digits in a given string,"str1='TestStringwith123456789'
no_of_letters, no_of_digits = 0,0
for c in str1:
  no_of_letters += c.isalpha()
  no_of_digits += c.isnumeric()
print(no_of_letters)
print(no_of_digits)"
1036,Write a Python function to count occurrence of a word in the given text,"def text_searcher(text, word):
    count = 0
    for w in text.split():
        if w == word:
            count = count + 1
    return count"
1037,Write a Python function to capitalizes the first letter of each word in a string,"def capitalize(text):
  return text.title()"
1038,Write a Python function to remove falsy values from a list,"def newlist(lst):
  return list(filter(None, lst))"
1039,Write a Python function to to find the sum of all digits of a given integer,"def sum_of_digits(num):
  if num == 0:
    return 0
  else:
    return num % 10 + sum_of_digits(int(num / 10))"
1040,Write a Python function to check all elements of a list are the same or not,"def check_equal(a):
  return a[1:] == a[:-1]"
1041,Write a Python program to convert string into a datetime object,"from datetime import datetime
date_string = ""Mar 26 2021  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
1042,Write a Python function that returns the integer obtained by reversing the digits of the given integer,"def reverse(n):
    s=str(n) 
    p=s[::-1]
    return p"
1043,"Write a Python program that updates set1 by adding items from set2, except common items","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
set1.symmetric_difference_update(set2)
print(set1)"
1044,Write a Python program that removes items from set1 that are not common to both set1 and set2,"set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
set1.intersection_update(set2)
print(set1)"
1045,Write a Python program to reverse a tuple,"aTuple = (10, 20, 30, 40, 50)
aTuple = aTuple[::-1]
print(aTuple)"
1046,Write a Python program to swap two tuples,"tuple1 = (11, 22)
tuple2 = (99, 88)
tuple1, tuple2 = tuple2, tuple1
print(tuple2)
print(tuple1)"
1047,Write a Python program to modify the second item (33) of a list inside a following tuple to 333,"tuple1 = (11, [22, 33], 44, 55)
tuple1[1][1] = 333
print(tuple1)"
1048,Write a Python program to sort a tuple of tuples by 2nd item,"tuple1 = (('a', 23),('b', 37),('c', 11), ('d',29))
tuple1 = tuple(sorted(list(tuple1), key=lambda x: x[1]))
print(tuple1)"
1049,Write a Python function to check if all items in the following tuple are the same,"def check_tuple_same(sampleTuple):
    return all(i == sampleTuple[0] for i in sampleTuple)"
1050,Write a Python program to print current time in milliseconds,"import time
milliseconds = int(round(time.time() * 1000))
print(milliseconds)"
1051,Write a Python function func1() such that it can accept a variable length of  argument and print all arguments value,"def func1(*args):
    for i in args:
        print(i)"
1052,Write a Python program that Given a two Python list. Iterate both lists simultaneously such that list1 should display item in original order and list2 in reverse order,"list1 = [10, 20, 30, 40]
list2 = [100, 200, 300, 400]
for x, y in zip(list1, list2[::-1]):
    print(x, y)"
1053,"Write a Python function that Given a string, display only those characters which are present at an even index number","def printEveIndexChar(str):
  for i in range(0, len(str)-1, 2):
    print(""index["",i,""]"", str[i] )"
1054,"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","def removeChars(str, n):
  return str[n:]"
1055,"Write a Python function that Given a list of numbers, return True if first and last number of a list is same","def isFirst_And_Last_Same(numberList):
    firstElement = numberList[0]
    lastElement = numberList[-1]
    if (firstElement == lastElement):
        return True
    else:
        return False"
1056,"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5","def findDivisible(numberList):
    for num in numberList:
        if (num % 5 == 0):
            print(num)"
1057,Write a Python function that Given a two list of numbers create a new list such that new list should contain only odd numbers from the first list and even numbers from the second list,"def mergeList(list1, list2):
    thirdList = []
    for num in list1:
        if (num % 2 != 0):
            thirdList.append(num)
    for num in list2:
        if (num % 2 == 0):
            thirdList.append(num)
    return thirdList"
1058,"Write a Python program to return a set of all elements in either A or B, but not both","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
1059,Write a Python program to Subtract a week ( 7 days) from a given date in Python,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
1060,Write a Python program to Find the day of week of a given date,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
1061,Write a Python program to Convert following datetime instance into string format,"from datetime import datetime
given_date = datetime(2020, 2, 25)
string_date = given_date.strftime(""%Y-%m-%d %H:%M:%S"")
print(string_date)"
1062,Write a Python program to convert two equal length sets to dictionary,"keys = {'Ten', 'Twenty', 'Thirty'}
values = {10, 20, 30}
sampleDict = dict(zip(keys, values))
print(sampleDict)"
1063,Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))"
1064,Write a program that will determine the object type,"def typeIdentifier(object):
  return f'object type : {type(object)}'"
1065,Write a Python class which has at least two methods: getString: to get a string from console input printString: to print the string in upper case.,"class IOString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = input()
    def printString(self):
        print(self.s.upper())
strObj = IOString()
strObj.getString()
strObj.printString()"
1066,Write a program that will determine the memory usage by python process,"import os, psutil
print(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)"
1067,Write a function that will provide the ascii value of a character,"def charToASCII(chr):
  return f'ASCII value of {chr} is: {ord(chr)}'"
1068,Write a function to reverse a string,"def revStr(inp):
  inp = inp[::-1]
  return inp"
1069,Write a function to determine the bits used by any number,"def totalBits(n):
	return f'total number of bits used in {n} is : {len(bin(n)[2: ])}'"
1070,write a function to find the sum of Sine series,"import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine"
1071,Write a function to determine whether a given number is even or odd recursively,"def check(n):
    if (n < 2):
        return (n % 2 == 0)
    return (check(n - 2))
n=int(input(""Enter number:""))
if(check(n)==True):
      print(""Number is even!"")
else:
      print(""Number is odd!"")"
1072,Write a program to swap two variables inplace,"a,b = b,a"
1073,Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"items=[x for x in input().split(',')]
items.sort()
print(','.join(items))"
1074,Write a function that takes a base and a power and finds the power of the base using recursion.,"def power(base,exp):
    if(exp==1):
        return(base)
    if(exp!=1):
        return(base*power(base,exp-1))
base=int(input(""Enter base: ""))
exp=int(input(""Enter exponential value: ""))
print(""Result:"",power(base,exp))"
1075,Write a function to repeat M characters of a string N times,"def multTimes(str, m, n):
    front_len = m
    if front_len > len(str):
        front_len = len(str)
    front = str[:front_len]
    result = ''
    for i in range(n):
        result = result + front
    return result
print (multTimes('Hello', 3, 7))"
1076,Write a function that will convert a string into camelCase,"from re import sub
def camelCase(string):
  string = sub(r""(_|-)+"", "" "", string).title().replace("" "", """")
  return string[0].lower() + string[1:]"
1077,Write a function to remove empty list from a list using list comprehension,"def removeEmptyList(li):
  res = [ele for ele in li if ele != []] 
  return res"
1078,Write a function to Find the size of a Tuple in Python without garbage values,"Tuple = (10,20)
def sizeOfTuple(tup):
  return f'Size of Tuple: {str(Tuple.__sizeof__())} bytes'"
1079,"Write a function, which will find all such numbers between 1000 to 9999 that each digit of the number is an even number.","values = []
for i in range(1000, 9999):
  s = str(i)
  if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
      values.append(s)"
1080,Write a function that finds a list is homogeneous,"def homoList(li):
  res = True
  for i in li: 
      if not isinstance(i, type(li[0])): 
          res = False 
          break
  return res"
1081,Write a function to remove a given date type elements from a list.,"def removeDataType(li,dType):
    res = []
    for i in li:
        if not isinstance(i, dType):
            res.append(i)
    return res"
1082,"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","def firstOccurence(arr, i,j):
  res = 0
  for k in arr:         
      if k == j: 
          break
      if k == i: 
          res += 1
  return res"
1083,Write a program to check whether a file/path/direcory exists or not,"file_path = ""path/here""
import os.path
os.path.exists(file_path)"
1084,Write a program to merge two python dictionaries,"x={'key1':'val1','key2':'val2'}
y={'key3':'val3','key4':'val4'}
z = {**x, **y} # z = x | y"
1085,Write a program to convert dictionary into JSON,"import json
data = {""key1"" : ""value1"", ""key2"" : ""value2""}
jsonData = json.dumps(data)
print(jsonData)"
1086,Write a program to find common divisors between two numbers in a given pair,"def ngcd(x, y):
    i=1
    while(i<=x and i<=y):
        if(x%i==0 and y%i == 0):
            gcd=i
        i+=1
    return gcd
def num_comm_div(x, y):
  n = ngcd(x, y)
  result = 0
  z = int(n**0.5)
  i = 1
  while( i <= z ):
    if(n % i == 0):
      result += 2 
      if(i == n/i):
        result-=1
    i+=1
  return result"
1087,Write a function to Check whether following json is valid or invalid,"import json
def validateJSON(jsonData):
    try:
        json.loads(jsonData)
    except ValueError as err:
        return False
    return True"
1088,Write a function to remove and print every third number from a list of numbers until the list becomes empty,"def remove_nums(int_list):
  position = 3 - 1 
  idx = 0
  len_list = (len(int_list))
  while len_list>0:
    idx = (position+idx)%len_list
    print(int_list.pop(idx))
    len_list -= 1"
1089,Write a program to get a list of locally installed Python modules,"import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted([""%s==%s"" % (i.key, i.version)
     for i in installed_packages])
for m in installed_packages_list:
    print(m)"
1090,Write a function to create all possible permutations from a given collection of distinct numbers,"def permute(nums):
  result_perms = [[]]
  for n in nums:
    new_perms = []
    for perm in result_perms:
      for i in range(len(perm)+1):
        new_perms.append(perm[:i] + [n] + perm[i:])
        result_perms = new_perms
  return result_perms"
1091,Write a function to add two positive integers without using the '+' operator,"def add_without_plus_operator(a, b):
    while b != 0:
        data = a & b
        a = a ^ b
        b = data << 1
    return a"
1092,Write a program to find the median among three given number,"x=10
y=20
z=30
if y < x and x < z:
    print(x)
elif z < x and x < y:
    print(x)
elif z < y and y < x:
    print(y)
elif x < y and y < z:
    print(y)
elif y < z and z < x:
    print(z)    
elif x < z and z < y:
    print(z)"
1093,Write a function to count the number of carry operations for each of a set of addition problems,"def carry_number(x, y):
  ctr = 0
  if(x == 0 and y == 0):
    return 0
  z = 0  
  for i in reversed(range(10)):
      z = x%10 + y%10 + z
      if z > 9:
        z = 1
      else:
        z = 0
      ctr += z
      x //= 10
      y //= 10
  if ctr == 0:
    return ""No carry operation.""
  elif ctr == 1:
    return ctr
  else:
    return ctr"
1094,Write a program to compute the number of digits in multiplication of two given integers,"a,b = 312, 410
print(len(str(a*b)))"
1095,Write a function to return the area of a rhombus,"def area(d1, a): 
    d2 = (4*(a**2) - d1**2)**0.5
    area = 0.5 * d1 * d2 
    return(area)"
1096,"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two","def setBitNumber(n): 
    if (n == 0): 
        return 0
    msb = 0 
    n = int(n / 2) 
    while (n > 0): 
        n = int(n / 2) 
        msb += 1
    return (1 << msb)"
1097,Write a function to calculate volume of Triangular Pyramid,"def volumeTriangular(a, b, h): 
    return (0.1666) * a * b * h"
1098,Write a function to calculate volume of Square Pyramid,"def volumeSquare(b, h): 
    return (0.33) * b * b * h"
1099,Write a function to calculate Volume of Pentagonal Pyramid,"def volumePentagonal(a, b, h): 
    return (0.83) * a * b * h"
1100,Write a function to calculate Volume of Hexagonal Pyramid,"def volumeHexagonal(a, b, h): 
    return a * b * h"
1101,Write a python program to find and print if a number given is disarium or not,"num = 135
num_len = len(str(num))
n = num
sum = 0
exp = num_len
while n != 0:
    i = int(n % 10)
    n = int(n / 10)
    sum += i ** exp
    exp -= 1
if sum == num:
    print(""disarium"")
else:
    print(""not disarium"")"
1102,Write a python program to find and print second largest number from list of numbers,"num_array = [8, 6, 15, 23, 14, 28, 5, 1, 99]
largest = second_largest = num_array[0]
for i in range(1,len(num_array)):
    if num_array[i] > largest:
        second_largest = largest
        largest = num_array[i]
    elif num_array[i] > second_largest:
        second_largest = num_array[i]
print(second_largest)"
1103,"Write a python program to find and print volume of a sphere for which diameter d is given
 Calculate volume V","import math
diameter = 12.
radius = diameter/2.
V = 4./3. * math.pi * radius ** 3
print(f""Volume={V}"")"
1104,"Write a python program using list comprehension to produce and print the list ['x', 'xx', 'xxx', 'xxxx', 'y', 'yy', 'yyy', 'yyyy', 'z', 'zz', 'zzz', 'zzzz']","input_string_list = ['x', 'y', 'z']
repeat_count = 4
list2 = [input_string_list[i] * (j+1)  for i in range(len(input_string_list)) for j in range(repeat_count) ]
print(list2)"
1105,"Write a python program using list comprehension to produce and print the list ['x', 'y', 'z', 'xx', 'yy', 'zz', 'xxx', 'yyy', 'zzz', 'xxxx', 'yyyy', 'zzzz']","input_string_list = ['x', 'y', 'z']
repeat_count = 4
list3 = [input_string_list[i] * (j+1) for j in range(repeat_count)  for i in range(len(input_string_list)) ]
print(list3)"
1106,"Write a python program using list comprehension to produce and print the list  [[2],[3],[4],[3],[4],[5],[4],[5],[6]]","start_num = 2
repeat_count = 3
max_offset = 3
list4 = [[start_num + i + j ]  for j in range(max_offset) for i in range(repeat_count) ] 
print(list4)"
1107,"Write a python program using list comprehension to produce and print the list [[2, 3, 4, 5], [3, 4, 5, 6], [4, 5, 6, 7], [5, 6, 7, 8]]","start_num = 2
repeat_count = 4
max_offset =4
list5 = [[start_num + i + j  for j in range(max_offset)]  for i in range(repeat_count) ]
print(list5)"
1108,"Write a python program using list comprehension to produce and print the list [(1, 1), (2, 1), (3, 1), (1, 2), (2, 2), (3, 2), (1, 3), (2, 3), (3, 3)]","max_count = 3
list6 = [(j+1,i+1)  for i in range(max_count)  for j in range(max_count) ]
print(list6)"
1109,Implement a python function longestWord which take input as list of words and return the longest word,"import functools
def longestWord(word_list):
    if word_list is None or isinstance(word_list, list) == False or len(word_list) == 0:
        raise ValueError(""Input word_list to function longestWord must be list of words of size at least 1"")
    if len(word_list) == 1:
        return word_list[0]    
    else:
        return functools.reduce(lambda x,y: x if len(x) >= len(y) else y, word_list)"
1110,Write a python program that maps list of words into a list of integers representing the lengths of the corresponding words,"lst = [""ab"",""cde"",""erty""]
length_list = list(map((lambda element: len(element)), lst))
print(str(length_list))"
1111,"Write a python program to generate and print all sentences where subject is in[""Americans"", ""Indians""] and verb is in [""Play"", ""watch""] and the object is in [""Baseball"",""cricket""]","subjects=[""Americans"",""Indians""]
verbs=[""play"",""watch""]
objects=[""Baseball"",""Cricket""]
sentence_list = [subject + "" "" + verb + "" "" + object + ""."" for subject in subjects for verb in verbs for object in objects]
for sentence in sentence_list:
    print(sentence)"
1112,Write a python program which accepts users first name and last name and print in reverse order with a space,"first_name = input(""Enter your first name: "")
last_name = input(""Enter your last name: "")
print(last_name.strip() + "" "" + first_name.strip())"
1113,"Write a python function which takes a list of non negative numbers and target sum S, two operations (+, -) how many different ways target sum is achived re","def findTargetSumWays(nums, S):
    count = 0
    def calculate(nums, i, sum, S):
        nonlocal count
        if i == len(nums):
            if sum == S:
                count += 1
        else:
            calculate(nums, i+1, sum+ nums[i], S)
            calculate(nums, i+1, sum- nums[i], S)
    calculate(nums, 0, 0, S) 
    return count"
1114,"Write a python function which wil return True if list parenthesis used in a input expression is valid, False otherwise","def isValid(s):
    stack = []
    mapping = {')': '(', '}' : '{', ']':'['}
    for char in s:
        if char in mapping:                
            if not stack:
                return False
            top = stack.pop()
            if mapping[char] != top:
                return False
        else:
            stack.append(char)     
    return not stack"
1115,Write a python function to solve and print Towers of Hanoi problem,"def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print(""Move disk 1 from source"",source,""to destination"",destination) 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print(""Move disk"",n,""from source"",source,""to destination"",destination) 
    TowerOfHanoi(n-1, auxiliary, destination, source)"
1116,Write a python function to check if a number given is a Armstrong number,"def isArmstrong(x):
    n = 0
    while (x != 0): 
        n = n + 1
        x = x // 10
    temp = x 
    sum1 = 0
    while (temp != 0): 
        r = temp % 10
        sum1 = sum1 + r ** n
        temp = temp // 10
    return (sum1 == x)"
1117,Write a python program to find and print sum of series with cubes of first n natural numbers,"n = 10
sum = 0
for i in range(1, n+1): 
    sum += i**3
print(f""{sum}"")"
1118,"Write a python  function which returns True elements in a given list is monotonically increasing or decreasing, return False otherwise","def isMonotonic(A):  
    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or
            all(A[i] >= A[i + 1] for i in range(len(A) - 1)))"
1119,Write a python program to find and print product of two matrices,"A = [[12, 7, 3], 
    [4, 5, 6], 
    [7, 8, 9]]   
B = [[5, 8, 1, 2], 
    [6, 7, 3, 0], 
    [4, 5, 9, 1]] 
result = [[0, 0, 0, 0], 
        [0, 0, 0, 0], 
        [0, 0, 0, 0]] 
for i in range(len(A)): 
    for j in range(len(B[0])): 
        for k in range(len(B)): 
            result[i][j] += A[i][k] * B[k][j] 
for r in result: 
    print(r)"
1120,Write a python program to find and print  K th column of a matrix,"test_list = [[4, 5, 6], [8, 1, 10], [7, 12, 5]] 
K = 2
res = [sub[K] for sub in test_list] 
print(""The Kth column of matrix is : "" + str(res))"
1121,Write a python program to Convert and print Snake case to Pascal case,"test_str = 'go_east_or_west_india_is_the_best'
res = test_str.replace(""_"", "" "").title().replace("" "", """")
print(res)"
1122,Write a python  program to print only even length words in a sentence,"def printEvenLengthWords(s):       
    s = s.split(' ')  
    for word in s:
        if len(word)%2==0: 
            print(word)"
1123,Write a python function to find uncommon words between two sentences given,"def UncommonWords(A, B): 
    count = {} 
    for word in A.split(): 
        count[word] = count.get(word, 0) + 1
    for word in B.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] == 1]"
1124,Write a python function which determines if binary representation of a number is palindrome,"def binaryPallindrome(num): 
     binary = bin(num) 
     binary = binary[2:] 
     return binary == binary[-1::-1]"
1125,Write a python program to extract and print words that starts with vowel,"test_list = [""all"", ""love"", ""and"", ""get"", ""educated"", ""by"", ""gfg""] 
res = [] 
vow = ""aeiou""
for sub in test_list: 
    flag = False
    for ele in vow: 
        if sub.startswith(ele): 
            flag = True 
            break
    if flag: 
        res.append(sub) 
print(""The extracted words : "" + str(res))"
1126,Write a python function to extract URLs from a sentence,"import re 
def FindUrls(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
1127,Write a python function to Check and print if binary representations of two numbers are anagram,"from collections import Counter 
def checkAnagram(num1,num2): 
    bin1 = bin(num1)[2:] 
    bin2 = bin(num2)[2:] 
    zeros = abs(len(bin1)-len(bin2)) 
    if (len(bin1)>len(bin2)): 
         bin2 = zeros * '0' + bin2 
    else: 
         bin1 = zeros * '0' + bin1 
    dict1 = Counter(bin1) 
    dict2 = Counter(bin2) 
    if dict1 == dict2: 
         print('Yes') 
    else: 
         print('No')"
1128,Write a program to print inverted star pattern for the given number,"n=11
for i in range (n, 0, -1): 
    print((n-i) * ' ' + i * '*')"
1129,Write a python function to find and print if a email address given is valid or not,"import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
def check(email):   
    if(re.search(regex,email)):  
        print(""Valid Email"")  
    else:  
        print(""Invalid Email"")"
1130,Write a python function to find and print the largest prime factor of a given number,"import math 
def maxPrimeFactors (n): 
    maxPrime = -1
    while n % 2 == 0: 
        maxPrime = 2
        n >>= 1               
    for i in range(3, int(math.sqrt(n)) + 1, 2): 
        while n % i == 0: 
            maxPrime = i 
            n = n / i 
    if n > 2: 
        maxPrime = n 
    return int(maxPrime)"
1131,"Write a python function to determine if a year is leap year or not
     Write your logic here","def is_leap(year):
    leap = False
    if year % 4 == 0:
        if year % 400 == 0:
            leap = True
        elif year % 100 == 0:
            leap = False
        else:
            leap = True
    return leap"
1132,Write a python function to generate permuations of a list of given numbers,"def permute(nums):
    def backtrack(first = 0):
        if first == n:        
            output.append(nums[:])
        for i in range(first, n):
            nums[first], nums[i] = nums[i], nums[first]
            backtrack(first + 1)
            nums[first], nums[i] = nums[i], nums[first]
    n = len(nums)
    output = []
    backtrack()
    return output"
1133,"Write a python function to print staircase pattern
         conditional operator","def pattern(n): 
    for i in range(1,n+1):   
        k =i + 1 if(i % 2 != 0) else i   
        for g in range(k,n): 
            if g>=k: 
                print(end=""  "") 
        for j in range(0,k): 
            if j == k - 1: 
                print("" * "") 
            else: 
                print("" * "", end = "" "")"
1134,Write a python function to find gcd using eucliean algorithm,"def gcd(a, b):  
    if a == 0 : 
        return b  
    return gcd(b%a, a)"
1135,Write a python function to check if number is divisible by all the digits,"def allDigitsDivide( n) :
    temp = n
    while (temp > 0) :
        digit = temp % 10
        if not (digit != 0 and n % digit == 0) :
            return False
        temp = temp // 10
    return True"
1136,Write a python program to flatten  a multidimensional list,"my_list = [[10,20,30],[40,50,60],[70,80,90]]
flattened = [x for temp in my_list for x in temp]
print(flattened)"
1137,Write Python Program to Print Table of a Given Number,"n=int(input(""Enter the number to print the tables for:""))
for i in range(1,11):
    print(n,""x"",i,""="",n*i)"
1138,Write a python program to check and print if the number is a perfect number,"n = int(input(""Enter any number: ""))
sum1 = 0
for i in range(1, n):
    if(n % i == 0):
        sum1 = sum1 + i
if (sum1 == n):
    print(""The number is a Perfect number!"")
else:
    print(""The number is not a Perfect number!"")"
1139,Write a python function to find and print longest continous odd sequence of a list of numbers given,"def longest_continuous_odd_subsequence(array):
    final_list = []
    temp_list = []
    for i in array:
        if i%2 == 0:
            if temp_list != []:
                final_list.append(temp_list)
            temp_list = []
        else:
            temp_list.append(i)
    if temp_list != []:
        final_list.append(temp_list)
    result = max(final_list, key=len)
    print(result)"
1140,Write a python function to return minimum sum of factors of a number,"def findMinSum(num): 
    sum = 0
    i = 2
    while(i * i <= num): 
        while(num % i == 0): 
            sum += i 
            num /= i 
        i += 1
    sum += num    
    return sum"
1141,Write a function to check and print if a string starts with a substring using regex in Python,"import re 
def find(string, sample) :    
  if (sample in string): 
      y = ""^"" + sample 
      x = re.search(y, string) 
      if x : 
          print(""string starts with the given substring"") 
      else : 
          print(""string doesn't start with the given substring"") 
  else : 
      print(""entered string isn't a substring"")"
1142,Write a python program to print square matrix in Z form,"arr = [[4, 5, 6, 8],  
        [1, 2, 3, 1],  
        [7, 8, 9, 4],  
        [1, 8, 7, 5]] 
n = len(arr[0]) 
i=0
for j in range(0, n-1): 
    print(arr[i][j], end ="" "")  
k = 1
for i in range(0, n): 
    for j in range(n, 0, -1): 
        if(j==n-k): 
            print(arr[i][j], end = "" "")  
            break;  
    k+=1
i=n-1;  
for j in range(0, n): 
    print(arr[i][j], end = "" "")"
1143,Write a python function to calculate number of ways of selecting p non  consecutive stations out of n stations,"def stopping_station( p, n): 
    num = 1
    dem = 1
    s = p 
    while p != 1: 
        dem *= p 
        p-=1
    t = n - s + 1
    while t != (n-2 * s + 1): 
        num *= t 
        t-=1
    if (n - s + 1) >= s: 
        return int(num/dem) 
    else: 
        return -1"
1144,Write a python program to solve and print the solution for the quadratic equation ax**2 + bx + c = 0,"import cmath
a = 1
b = 5
c = 6
d = (b**2) - (4*a*c)
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)
print('The solution are {0} and {1}'.format(sol1,sol2))"
1145,Write a program to print the powers of 2 using anonymous function,"terms = 10
result = list(map(lambda x: 2 ** x, range(terms)))
print(""The total terms are:"",terms)
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
1146,"Write a python function to find the L.C.M. of two input number
    choose the greater number","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
1147,Write a Python program to shuffle and print a deck of card,"import itertools, random
deck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))
random.shuffle(deck)
print(""You got:"")
for i in range(5):
   print(deck[i][0], ""of"", deck[i][1])"
1148,Write a python program to sort alphabetically the words form a string provided by the user,"my_str = ""Hello this Is an Example With cased letters""
words = [word.lower() for word in my_str.split()]
words.sort()
print(""The sorted words are:"")
for word in words:
   print(word)"
1149,Write a python program to remove punctuations from a sentence,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
1150,Write a python  program to check and print Yes/No if a triangle  of positive area is possible with the given angles,"def isTriangleExists(a, b, c): 
    if(a != 0 and b != 0 and c != 0 and (a + b + c)== 180): 
        if((a + b)>= c or (b + c)>= a or (a + c)>= b): 
            return ""YES""
        else: 
            return ""NO""
    else: 
        return ""NO"""
1151,"Write a program to rotate and print elements of a list
    Stores the last element of array    
        Shift element of array by one","arr = [1, 2, 3, 4, 5];     
n = 3;      
for i in range(0, n):    
    last = arr[len(arr)-1];    
    for j in range(len(arr)-1, -1, -1):    
        arr[j] = arr[j-1];    
    arr[0] = last; 
print(arr)"
1152,Write a program to find and print if a number is a Harshad number,"num = 156;    
rem = sum = 0;   
n = num;    
while(num > 0):    
    rem = num%10;    
    sum = sum + rem;    
    num = num//10;    
if(n%sum == 0):    
    print(str(n) + "" is a harshad number"")    
else:    
    print(str(n) + "" is not a harshad number"")"
1153,Write a program to left rotate and print a list given,"arr = [1, 2, 3, 4, 5];     
n = 3;    
for i in range(0, n):    
    first = arr[0];    
    for j in range(0, len(arr)-1):    
        arr[j] = arr[j+1];    
    arr[len(arr)-1] = first;    
print(""Array after left rotation: "");    
for i in range(0, len(arr)):    
    print(arr[i]),"
1154,"Write a python function to implement 0/1 Knapsack problem
     Base Case","def knapSack(W, wt, val, n): 
    if n == 0 or W == 0 : 
        return 0
    if (wt[n-1] > W): 
        return knapSack(W, wt, val, n-1) 
    else: 
        return max(val[n-1] + knapSack(W-wt[n-1], wt, val, n-1), 
                   knapSack(W, wt, val, n-1))"
1155,Write a function to find out if permutations of a given string is a palindrome,"def has_palindrome_permutation(the_string):
    unpaired_characters = set()
    for char in the_string:
        if char in unpaired_characters:
            unpaired_characters.remove(char)
        else:
            unpaired_characters.add(char)
    return len(unpaired_characters) <= 1"
1156,Write a python function which accepts or discard only string ending with alphanumeric character,"import re 
regex = '[a-zA-z0-9]$'
def check(string):
    if(re.search(regex, string)):  
        print(""Accept"")          
    else:  
        print(""Discard"")"
1157,Write a python program to accept a number n and calculate n+nn+nn,"n=int(input(""Enter a number n: ""))
temp=str(n)
t1=temp+temp
t2=temp+temp+temp
comp=n+int(t1)+int(t2)
print(""The value is:"",comp)"
1158,Write a program to accept a number and print inverted star pattern,"n=int(input(""Enter number of rows: ""))
for i in range (n,0,-1):
    print((n-i) * ' ' + i * '*')"
1159,Write a program to print prime numbers in a range using Sieve of Eratosthenes.,"n=int(input(""Enter upper limit of range: ""))
sieve=set(range(2,n+1))
while sieve:
    prime=min(sieve)
    print(prime,end=""\t"")
    sieve-=set(range(prime,n+1,prime))
print()"
1160,"Write python function to generate valid parenthesis, number of parenthesis is given as input","def generateParenthesis(n):
    def backtrack(S='', left=0, right=0):
        if len(S) == 2*n:
            output.append(S)
            return
        if left < n:
            backtrack(S+'(', left+1, right)
        if right < left:
            backtrack(S+')', left, right+1)
    output = []
    backtrack()
    return output"
1161,"Write python function which Given an list distinct integers candidates and a target integer target, return a list of all unique combinations of candidates where the chosen numbers sum to target.","def combinationSum(candidates, target):
    results = []
    def helper(i, path):
        if sum(path) == target:
            results.append(path[:])
            return
        if sum(path) > target:
            return
        for x in range(i, len(candidates)):
            path.append(candidates[x])
            helper(x, path)
            path.pop()
    helper(0, []) 
    return results"
1162,"Write a function Given a list of daily temperatures T, return a list such that, for each day in the input, tells you how many days you would have to wait until a warmer temperature. If there is no future day for which this is possible, put 0 instead.","def dailyTemperatures(T):
    stack = []
    res = [0 for _ in range(len(T))]
    for i, t1 in enumerate(T):
        while stack and t1 > stack[-1][1]:
            j, t2 = stack.pop()
            res[j] = i - j
        stack.append((i, t1))
    return res"
1163,"Write a function which Given an array of integers nums and a positive integer k, find whether it's possible to divide this array into sets of k consecutive numbers Return True if its possible otherwise return False","import collections
def isPossibleDivide(nums, k):
    d = collections.Counter(nums)
    for num in sorted(d.keys()):
        if num in d:
            for i in range(k - 1, -1, -1):
                d[num + i] -= d[num] 
                if d[num + i] == 0:
                    del d[num + i]
                if d[num + i] < 0:
                    return False
    return (True if not d else False)"
1164,"Write a function pow(x, n), which calculates x raised to the power n","def myPow(x, n):
    def pow(y, n):
        if n == 0:
            return 1.0
        else:
            partial = pow(x, n//2)
            result = partial * partial
            if n%2 == 1:
                result *= x
            return result
    if n >= 0:
        return pow(x, n)
    else:
        return 1/ pow(x, -n)"
1165,Write a function to generate permutation of list of numbers,"def permute(nums):
    def backtrack(first = 0):
        if first == n:      
            output.append(nums[:])
        for i in range(first, n):
            nums[first], nums[i] = nums[i], nums[first]            
            backtrack(first + 1)
            nums[first], nums[i] = nums[i], nums[first]
    n = len(nums)
    output = []
    backtrack()
    return output"
1166,"Write a python class to implement a Bank which which supports basic operations like depoist, withdrwa, overdrawn","class BankAccount(object):
    def __init__(self, account_no, name, initial_balance=0):
        self.account_no = account_no
        self.name = name
        self.balance = initial_balance
    def deposit(self, amount):
        self.balance += amount
    def withdraw(self, amount):
        self.balance -= amount
    def overdrawn(self):
        return self.balance < 0"
1167,Write a function to calculate median of a list of numbers given,"def median(pool):
    copy = sorted(pool)
    size = len(copy)
    if size % 2 == 1:
        return copy[int((size - 1) / 2)]
    else:
        return (copy[int(size/2 - 1)] + copy[int(size/2)]) / 2"
1168,Write a function to get the Cumulative sum of a list,"def Cumulative(lists): 
    cu_list = [] 
    length = len(lists) 
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] 
    return cu_list[1:]"
1169,Write a python program to perform Vertical Concatenation in Matrix,"test_list = [[""India"", ""good""], [""is"", ""for""], [""Best""]] 
print(""The original list : "" + str(test_list)) 
res = [] 
N = 0
while N != len(test_list): 
    temp = '' 
    for idx in test_list:       
        try: temp = temp + idx[N] 
        except IndexError: pass
    res.append(temp) 
    N = N + 1
res = [ele for ele in res if ele] 
print(""List after column Concatenation : "" + str(res))"
1170,Write a python program code to perform Triple quote String concatenation Using splitlines() + join() + strip(),"test_str1 = """"""India 
is""""""
test_str2 = """"""best 
for everybody 
""""""
print(""The original string 1 is : "" + test_str1) 
print(""The original string 2 is : "" + test_str2) 
test_str1 = test_str1.splitlines() 
test_str2 = test_str2.splitlines() 
res = [] 
for i, j in zip(test_str1, test_str2): 
    res.append(""   "" + i.strip() + "" "" + j.strip()) 
res = '\n'.join(res) 
print(""String after concatenation : "" + str(res))"
1171,Write a program to perform Consecutive prefix overlap concatenation Using endswith() + join() + list comprehension + zip() + loop,"def help_fnc(i, j): 
    for ele in range(len(j), -1, -1): 
        if i.endswith(j[:ele]): 
            return j[ele:] 
test_list = [""India"", ""gone"", ""new"", ""best""] 
print(""The original list is : "" + str(test_list)) 
res = ''.join(help_fnc(i, j) for i, j in zip([''] + 
                           test_list, test_list)) 
print(""The resultant joined string : "" + str(res))"
1172,Write a python function to generate unique file names in a folder for a given list of file names,"from collections import Counter
def getFolderNames(names):
    seen, res = Counter(), []
    for name in names:
        if name in seen:
            while True:
                c = f'({seen[name]})'
                if name + c not in seen:
                    name += c
                    break
                else:
                    seen[name] += 1
        seen[name] += 1
        res.append(name)
    return res"
1173,Write a python program to convert complex number to polar coordinates,import cmath
1174,using cmath.polar() method,"num = cmath.polar(1)  
print(num)"
1175,Write a python program to print calendar of a given year,"import calendar 
year = 2019
print(calendar.calendar(year))"
1176,"Write a python function to perform Matrix Chain multiplication i.e. Given a sequence of matrices, find the most efficient way to multiply these matrices together","import sys 
def MatrixChainOrder(p, i, j): 
    if i == j: 
        return 0
    _min = sys.maxsize 
    for k in range(i, j): 
        count = (MatrixChainOrder(p, i, k)  
             + MatrixChainOrder(p, k + 1, j) 
                   + p[i-1] * p[k] * p[j]) 
        if count < _min: 
            _min = count; 
    return _min;"
1177,write a python program to print even numbers in a list,"list1  = [2,7,5,64,14]
for i in list1:
    if i%2==0:
        print(i,end="" "")"
1178,write a python program to print positive numbers in a list,"list1 = [2,4,-5,3,8,-10,-11]
for i in list1:
    if i>0:
        print(i,end="" "")"
1179,write a python program to remove empty list from list and print it,"list1 = [2,5,6,[],8,[],[],0]
list2=[]
for i in list1:
    if not isinstance(i,list):
       list2.append(i)
print(list2)"
1180,write a python program to print the list having sum of digits,"list1 = [12, 67, 98, 34]
list2=[]
for i in list1:
    sum = 0
    for digit in str(i): 
        sum += int(digit) 
    list2.append(sum)
print(list2)"
1181,write a python program to find string in a list and print it,"list1 = [1, 2.0, 'have', 'a', 'nice', 'day'] 
s = 'nice'
for i in list1:
    if i == s:
       print(f'{s} is  present in the list')"
1182,write a python function to swap two numbers in a list and return the list,"def swapPositions(list, pos1, pos2): 
    list[pos1], list[pos2] = list[pos2], list[pos1] 
    return list"
1183,Driver function,"List1 = [23, 65, 19, 90] 
pos1, pos2  = 1, 3
print(swapPositions(List1, pos1-1, pos2-1))"
1184,write a python function tp print the occurences of i before first j in list,"list1 = [4, 5, 6, 4, 1, 4, 8, 5, 4, 3, 4, 9]"
1185,"initializing i, j","i, j = 4, 8
count=0
for k in list1:
    if k==i and k!=j:
       count=count+1
    elif k==j:
         break;   
print(count)"
1186,write  a python program to print element with maximum values from a list,"list1 = [""gfg"", ""best"", ""for"", ""geeks""] 
s=[]
for i in list1:
    count=0  
    for j in i:
        if j in ('a','e','i','o','u'):
           count=count+1
    s.append(count)
print(s)    
if  count== max(s):      
    print(list1[s.index(max(s))])"
1187,9 write a python program to omit K length rows and print the list,"list1 = [[4, 7], 
             [8, 10, 12, 8], 
             [10, 11],  
             [6, 8, 10]]"
1188,initializing K,"K = 2
for i in test_list:
    if len(i)==K:
       list1.remove(i)
print(list1)"
1189,"10 write a python program to construct equidigit tuple and print them
     getting mid element 
     slicing Equidigits","list1 = [5654, 223, 982143, 34, 1021]
list2 = [] 
for sub in list1: 
    mid_idx = len(str(sub)) // 2
    el1 = str(sub)[:mid_idx] 
    el2 = str(sub)[mid_idx:] 
    list2.append((int(el1), int(el2)))"
1190,printing result,"print(""Equidigit tuples List : "" + str(list2))"
1191,"11 write a python function to filter Rows with a specific pair sum and return boolean value
     checking pair sum","def pair_sum(x, k): 
    for idx in range(len(x)): 
        for ix in range(idx + 1, len(x)): 
            if x[idx] + x[ix] == k: 
                return True
    return False"
1192,initializing list,"test_list = [[1, 5, 3, 6], [4, 3, 2, 1], [7, 2, 4, 5], [6, 9, 3, 2]]"
1193,printing original list,"print(""The original list is : "" + str(test_list))"
1194,initializing K,k = 8
1195,checking for pair sum,"res = [ele for ele in test_list if pair_sum(ele, k)]"
1196,printing result,"print(""Filtered Rows : "" + str(res))"
1197,"12 write a python program to find decreasing point in a list and print them
     checking for 1st decreasing element","test_list = [3, 6, 8, 9, 12, 5, 18, 1] 
res = -1
for idx in range(0, len(test_list) - 1): 
    if test_list[idx + 1] < test_list[idx]: 
        res = idx 
        break"
1198,printing result,"print(""Decreasing Point : "" + str(res))"
1199,"13 Write a python program to test if all elements are unique in columns in matrix and print them
     getting column  
     checking for all Unique elements","test_list = [[3, 4, 5], [1, 2, 4], [4, 1, 10]] 
res = True 
for idx in range(len(test_list[0])): 
    col = [ele[idx] for ele in test_list] 
    if len(list(set(col))) != len(col): 
        res = False 
        break"
1200,printing result,"print(""Are all columns Unique : "" + str(res))"
1201,14 Write a python program to find elements with the same index and print them,"list1 = [3, 1, 2, 5, 4, 10, 6, 9] 
list2 = [] 
for idx, ele in enumerate(list1): 
    if idx == ele: 
        list2.append(ele)"
1202,printing result,"print(""Filtered elements : "" + str(list2))"
1203,15 Write a python program to check if two list are reverse equal and print boolean value,"list1 = [5, 6, 7, 8] 
list2 = [8, 7, 6, 5]"
1204,"Check if two lists are reverse equal 
 Using reversed() + == operator",res = list1 == list(reversed(list2))
1205,printing result,"print(""Are both list reverse of each other ? : "" + str(res))"
1206,16 write a python program to extract priority elements in tuple list,"test_list = [(5, 1), (3, 4), (9, 7), (10, 6)]"
1207,initializing Priority list,"prior_list = [6, 4, 7, 1]"
1208,"Extracting Priority Elements in Tuple List and print the list 
 loop","res = [] 
for sub in test_list: 
    for val in prior_list: 
        if val in sub: 
            res.append(val) 
print(res)"
1209,17 Write a python program to check if any string is empty in list and print true or False,"list1 = ['the', 'sun', 'rises', '', 'the', 'east']"
1210,"Check if any String is empty in list 
 using len() + any()",res = any(len(ele) == 0 for ele in list1)
1211,printing result,"print(""Is any string empty in list? : "" + str(res))"
1212,18 write a python program to increment numeric string by K,"list = [""gfg"", ""234"", ""is"", ""98"", ""123"", ""best"", ""4""]"
1213,"initializing K 
     incrementing on testing for digit.","K = 6
res = []
for ele in test_list: 
    if ele.isdigit(): 
        res.append(str(int(ele) + K)) 
    else: 
        res.append(ele)"
1214,printing result,"print(""Incremented Numeric Strings : "" + str(res))"
1215,"19 Write a python function to remove i'th character from a string
     Characters before the i-th indexed 
     is stored in a variable a 
     Characters after the nth indexed 
     is stored in a variable b 
     Returning string after removing 
     nth indexed character.","def remove(string, i):  
    a = string[ : i]  
    b = string[i + 1: ] 
    return a + b"
1216,20 Write a python program to move number to end of string and print them,test_str = 'the2sun4rises5sinthe6east9'
1217,printing original string,"print(""The original string is : "" + str(test_str))
s=''
r=''
for i in test_str:
    if i.isdigit():
      s=s+i
    else:
      r=r+i 
print(r+s)"
1218,21 Write a python program to count the number of spaces in a string and print it,"count=0
string = ""Welcome to schoolofAI""
for i in string:
    if i=="" "":
        count=count+1
print(f'number of spaces {count}')"
1219,22 Write a python program to Concatenate all elements of a list into a string and print it,"l = ['hello', 'guys', 'have', 
   'a', 'nice', 'day']"
1220,"this will join all the  
 elements of the list with ' '","l = ' '.join(l)  
print(l)"
1221,23 Write a python program to filter similar case strings and print it,"x=[]
for i in test_list:
    if i.islower() or i.isupper():
       print(x.append(i))
print(x)"
1222,24 Write a python program to increment Suffix number in string and print it,"test_str = 'hello006'
x=''
r=''
for i in test_str:
    if i.isdigit() and int(i)>0:
       x=x+str(int(i)+1)
    else:
      r=r+i
print(r+x)"
1223,25 Write a python program to add phrase in the middle of string and print it,"test_str = 'The sun in the east'
mid_str = ""rises""
s=""""
l=test_str.split("" "")
for i in range(0,len(l)):
    if i==len(l)//2:
       l.insert(i,mid_str)
       break
s="" "".join(i for i in l)
print(s)"
1224,26 Write a program to split a string by custom length and print it,test_str = 'geeksforgeeks'
1225,printing original string,"print(""The original string is : "" + str(test_str))"
1226,"initializing length list 
     slicing for particular length","cus_lens = [5, 3, 2, 3] 
res = [] 
strt = 0
for size in cus_lens: 
    res.append(test_str[strt : strt + size]) 
    strt += size"
1227,printing result,"print(""Strings after splitting : "" + str(res))"
1228,27 Write a python program to extract strings with successive alphabets in alphabetical order and print the list,"list1 = ['gfg', 'is', 'best', 'for', 'geeks'] 
res = [] 
for i in range(0,len(list1)):
    for j in range(0,len(list1[i])-1):
        if ord(list1[i][j+1])- ord(list1[i][j])==1:
           res.append(list1[i])
print(res)"
1229,28 Write a python program to compute arithmetic operation from String and print it,"test_str = '5x6, 9x10, 7x8'"
1230,using replace() to create eval friendly string,"temp = test_str.replace(',', '+').replace('x', '*')"
1231,using eval() to get the required result,res = eval(temp)
1232,printing result,"print(""The computed summation of products : "" + str(res))"
1233,29 write a python  program to Extract string till first Non-Alphanumeric character and print it,"test_str = 'geeks4g!!!eeks'
s=''
for i in test_str:
    if i.isalnum()==False:
       break
    else:
      s+=i  
print(s)"
1234,30 write a python program  to extract domain name from Email address and print it,test_str = 'md.shakiluzzaman@gmail.com'
1235,printing original string,"print(""The original string is : "" + str(test_str))
s=test_str.split('@')
print(s[1])"
1236,31 write a python program to  check if string starts with any element in list,"test_string = ""GfG is best"""
1237,initializing prefix list,"pref_list = ['best', 'GfG', 'good']"
1238,"using filter() + startswith() 
 Prefix tests in Strings","res = list(filter(test_string.startswith, pref_list)) != []"
1239,print result,"print(""Does string start with any prefix list sublist ? : "" + str(res))"
1240,32 write a python function to find all permutations of a string and print the result,"ini_str = ""abc"""
1241,Printing initial string,"print(""Initial string"", ini_str)"
1242,"Finding all permuatation 
             swap","result = [] 
def permute(data, i, length):  
    if i == length:  
        result.append(''.join(data) ) 
    else:  
        for j in range(i, length):  
            data[i], data[j] = data[j], data[i]  
            permute(data, i + 1, length)  
            data[i], data[j] = data[j], data[i]   
permute(list(ini_str), 0, len(ini_str))"
1243,Printing result,"print(""Resultant permutations"", str(result))"
1244,33 write a python program to delete all occurences of character and print it,"test_str = ""TheSchoolofAI"""
1245,initializing removal character,"rem_char = ""e"""
1246,"Using replace() 
 Deleting all occurrences of character","res = test_str.replace(rem_char, """")"
1247,printing result,"print(""The string after character deletion : "" + str(res))"
1248,34 Write a python program for printing alternate Strings Concatenation,"test_list = [""Early"", ""morning"", ""is"", ""good"", ""for"", ""health""]"
1249,printing original list,"print(""The original list : "" + str(test_list)) 
s=[]
k=test_list[::2]
a=["""".join(i for i in k)]
print(a)
l=test_list[1::2]
b=["""".join(i for i in l)]
print(b)
print(a+b)"
1250,"35 Write a python program to remove duplicate word from sentence and print it
s=[]","str1 = ""Good bye bye world world""
l=str1.split("" "")
s=list(set(l))
print("" "".join(i for i in s))"
1251,36 Write a python program to trim tuples by k and print it,"test_list = [(5, 3, 2, 1, 4), (3, 4, 9, 2, 1), 
             (9, 1, 2, 3, 5), (4, 8, 2, 1, 7)]"
1252,printing original list,"print(""The original list is : "" + str(test_list))"
1253,"initializing K 
    for j in i:","K = 2
l=[]
for i in test_list:
    s=tuple()
    s+=i[K:len(i)-K]
    l.append((s))
print(l)"
1254,37 write a python program to sort Tuples by their maximum element and print it,"def get_max(sub): 
    return max(sub)"
1255,initializing list,"test_list = [(4, 5, 5, 7), (1, 3, 7, 4), (19, 4, 5, 3), (1, 2)]"
1256,printing original list,"print(""The original list is : "" + str(test_list))"
1257,"sort() is used to get sorted result 
 reverse for sorting by max - first element's tuples","test_list.sort(key = get_max, reverse = True)"
1258,printing result,"print(""Sorted Tuples : "" + str(test_list))"
1259,38 write a python program to extract digits from Tuple list and print it,"test_list = [(15, 3), (3, 9), (1, 10), (99, 2)]"
1260,printing original list,"print(""The original list is : "" + str(test_list))
s=[]
k=''
for i in test_list:
    for j in  i:
        k+=str(j)
print(list(set(k)))"
1261,39 write a python program  to print all pair combinations of two tuples,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8)"
1262,printing original tuples,"print(""The original tuple 1 : "" + str(test_tuple1)) 
print(""The original tuple 2 : "" + str(test_tuple2))"
1263,"All pair combinations of 2 tuples 
 Using list comprehension","res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1]"
1264,printing result,"print(""The filtered tuple : "" + str(res))"
1265,40 write a python program to find minimum k records from tuple list,"test_list = [('Manjeet', 10), ('Akshat', 4), ('Akash', 2), ('Nikhil', 8)]"
1266,Initializing K,K = 2
1267,printing original list,"print(""The original list is : "" + str(test_list))"
1268,"Minimum K records 
 Using sorted() + lambda","res = sorted(test_list, key = lambda x: x[1])[:K]"
1269,printing result,"print(""The lowest K records are : "" + str(res))"
1270,41 write a python program to check if one tuple is subset of other and print it,"test_tup1 = (10, 4, 5, 6) 
test_tup2 = (5, 10)"
1271,printing original tuples,"print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2))"
1272,"Check if one tuple is subset of other 
 using issubset()",res = set(test_tup2).issubset(test_tup1)
1273,printing result,"print(""Is 2nd tuple subset of 1st ? : "" + str(res))"
1274,"42 write a python program to display keys with same values in a dictionary List
 initializing Matrix","test_list = [{""Gfg"": 5, ""is"": 8, ""best"": 0}, 
             {""Gfg"": 5, ""is"": 1, ""best"": 0}, 
             {""Gfg"": 5, ""is"": 0, ""best"": 0}]"
1275,"getting keys 
 iterating each dictionary for similar key's value 
         checking for similar values","keys = list(test_list[0].keys()) 
res = [] 
for key in keys: 
    flag = 1
    for ele in test_list: 
        if test_list[0][key] != ele[key]: 
            flag = 0
            break
    if flag: 
        res.append(key)"
1276,printing result,"print(""Similar values keys : "" + str(res))"
1277,43 write a python program to filter dictionaries with ordered values,"test_list = [{'gfg': 2, 'is': 8, 'good': 10}, 
             {'gfg': 1, 'for': 10, 'geeks': 9}, 
             {'love': 3, 'gfg': 4}]"
1278,"sorted to check with ordered values 
 values() extracting dictionary values","res = [sub for sub in test_list if sorted( 
    list(sub.values())) == list(sub.values())]"
1279,printing result,"print(""The filtered Dictionaries : "" + str(res))"
1280,"44 write a python program to  rotate dictionary by K
 Python3 code to demonstrate working of 
 Rotate dictionary by K 
 Using list comprehension + items() + dictionary comprehension 
 initializing dictionary","test_dict = {1: 6, 8: 1, 9: 3, 10: 8, 12: 6, 4: 9}"
1281,initializing K,K = 2
1282,converting to tuples list,test_dict = list(test_dict.items())
1283,performing rotate,"res = [test_dict[(i - K) % len(test_dict)] 
       for i, x in enumerate(test_dict)]"
1284,reconverting to dictionary,res = {sub[0]: sub[1] for sub in res}
1285,printing result,"print(""The required result : "" + str(res))"
1286,"45 write a python program to Count if dictionary position equals key or value and print it
     checking for key or value equality","test_dict = {5: 3, 1: 3, 10: 4, 7: 3, 8: 1, 9: 5} 
res = 0
test_dict = list(test_dict.items()) 
for idx in range(0, len(test_dict)): 
    if idx == test_dict[idx][0] or idx == test_dict[idx][1]: 
        res += 1"
1287,printing result,"print(""The required frequency : "" + str(res))"
1288,46 write a python program to test if Values Sum is Greater than Keys Sum in dictionary and print it,"test_dict = {5: 3, 1: 3, 10: 4, 7: 3, 8: 1, 9: 5} 
res = sum(list(test_dict.keys())) < sum(list(test_dict.values()))"
1289,printing result,"print(""The required result : "" + str(res))"
1290,47 write a program to  sort Dictionary by key-value Summation and print it,"test_dict = {3: 5, 1: 3, 4: 6, 2: 7, 8: 1}"
1291,"sorted() to sort, lambda provides key-value addition","res = sorted(test_dict.items(), key=lambda sub: sub[0] + sub[1])"
1292,converting to dictionary,res = {sub[0]: sub[1] for sub in res}
1293,printing result,"print(""The sorted result : "" + str(res))"
1294,48 write a program  to divide dictionary and its keys into K equal dictionaries and print it,"test_dict = {""Gfg"": 20, ""is"": 36, ""best"": 100}"
1295,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1296,initializing size,"K = 4
s=list(test_dict.keys())
print(s)
q=list(test_dict.values())
t=[]
for i in q:
    t.append(i//K)
print(t)
q=[]
d={}
for i in range(K):
    for i in range(0,len(s)):
       d[s[i]] = t[i]
    q.append(d)
print(q)"
1297,49 Write a  Python function to Sort a List of Dictionaries by the Sum of their Values and print it,"test_list = [{1 : 3, 4 : 5, 3 : 5}, {1 : 7, 10 : 1, 3 : 10}, {1 : 100}, {8 : 9, 7 : 3}]
def func(test_list):
    return sum(list(test_list.values()))
for i in test_list:
  test_list.sort(key=func) 
print(test_list)"
1298,50 write a python program to remove double quotes from dictionary keys and print it,"test_dict = {'""Geeks""' : 3, '""is"" for' : 5, '""g""eeks' : 9}"
1299,"dictionary comprehension to make double quotes free 
 dictionary","res = {key.replace('""', ''):val for key, val in test_dict.items()}"
1300,printing result,"print(""The dictionary after removal of double quotes : "" + str(res))"
1301,51 write a python program to check whether the values of a dictionary are in same order as in a list,"test_dict = {""gfg"" : 4, ""is"" : 10, ""best"" : 11, ""for"" : 19, ""geeks"" : 1}"
1302,"initializing list  
 52 write a python program to update a dictionary with the values from a dictionary list and print it","sub_list = [4, 10, 11, 19, 1]
l=list(test_dict.values())
if l == sub_list:
   print(True)
else:
  print(False)  
 test_dict = {""Gfg"" : 2, ""is"" : 1, ""Best"" : 3}"
1303,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1304,initializing dictionary list,"dict_list = [{'for' : 3, 'all' : 7}, {'geeks' : 10}, {'and' : 1, 'CS' : 9}]
for i in dict_list:
    test_dict.update(i)
print(test_dict)"
1305,"53 write a python program that displays the key of list value with maximum range and print it
     storing maximum of difference","test_dict = {""Gfg"" : [6, 2, 4, 1], ""is"" : [4, 7, 3, 3, 8], ""Best"" : [1, 0, 9, 3]} 
max_res = 0
for sub, vals in test_dict.items(): 
    max_res = max(max_res, max(vals) - min(vals))     
    if max_res == max(vals) - min(vals): 
        res = sub"
1306,printing result,"print(""The maximum element key : "" + str(res))"
1307,54 write a pythom program to find Maximum value from dictionary whose key is present in the list,"test_dict = {""Gfg"": 4, ""is"" : 5, ""best"" : 9, 
             ""for"" : 11, ""geeks"" : 3}"
1308,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1309,initializing list,"test_list = [""Gfg"", ""best"", ""geeks""] 
c=sorted(test_dict.values(),reverse=True)
for key,value in test_dict.items():
    if key in test_list and value in c[0:2]:
       print(key)"
1310,55 write a python program to extract  N largest dictionaries keys and print it,"test_dict = {6 : 2, 8: 9, 3: 9, 10: 8}"
1311,initializing N,"N = 4
res = []"
1312,write a python program to extract N largest dictionaries keys  and print it,"for key, val in sorted(test_dict.items(), key = lambda x: x[0], reverse = True)[:N]: 
    res.append(key)"
1313,printing result,"print(""Top N keys are: "" + str(res))"
1314,56 write a python program to print a  Dictionary Keys whose Values summation equals K,"test_dict = {""Gfg"" : 3, ""is"" : 5, ""Best"" : 9, ""for"" : 8, ""Geeks"" : 10}"
1315,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1316,"initializing K  
           print((i,j))","K = 14
l=[]
s=list(test_dict.values())
v=list(test_dict.keys())
for i in range(0,len(s)):
    for j in range(i+1,len(s)-1):
        if s[i]+s[j] == K:
           print([v[i],v[j]])"
1317,57 write a python program  to add prefix to each key name in dictionary and print it,"test_dict = {'Gfg' : 6, 'is' : 7, 'best' : 9, 'for' : 8, 'geeks' : 11}"
1318,initializing prefix,"temp = ""Pro""
d={}
for key,value in test_dict.items():
    d.update({temp+key:value})
print(d)"
1319,58 write a python program to extract Kth index elements from Dictionary Value list and print it,"test_dict = {""Gfg"" : [4, 7, 5], ""Best"" : [8, 6, 7], ""is"" : [9, 3, 8]}"
1320,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1321,initializing K,"K = 1
s=[]
for key,value in test_dict.items():
    s.append(value[K])
print(s)"
1322,59 write a python program to  remove digits from Dictionary String Values List,import re
1323,initializing dictionary,"test_dict = {'Gfg' : [""G4G is Best 4"", ""4 ALL geeks""], 
             'is' : [""5 6 Good""],  
             'best' : [""Gfg Heaven"", ""for 7 CS""]}"
1324,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1325,using dictionary comprehension to go through all keys,"res = {key: [re.sub('\d', '', ele) for ele in val] 
       for key, val in test_dict.items()}"
1326,printing result,"print(""The filtered dictionary : "" + str(res))"
1327,"60 write a program to Test for Even values dictionary values lists and print it
     checking for even elements 
     adding True if all Even elements","test_dict = {""Gfg"" : [6, 7, 3],  
             ""is"" :  [8, 10, 12, 16],  
             ""Best"" : [10, 16, 14, 6]} 
res = dict() 
for sub in test_dict: 
    flag = 1
    for ele in test_dict[sub]: 
        if ele % 2 != 0: 
            flag = 0
            break
    res[sub] = True if flag else False"
1328,printing result,"print(""The computed dictionary : "" + str(res))"
1329,61 write a program to sort Dictionary by Values and Keys and print it,"test_dict = {""Gfg"" : 1, ""is"" :  3, ""Best"" : 2, ""for"" : 3, ""Geeks"" : 2}"
1330,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1331,"- sign for descended values, omit if low-high sorting required","res = {val[0] : val[1] for val in sorted(test_dict.items(), key = lambda x: (-x[1],x[0]))}"
1332,printing result,"print(""Sorted dictionary : "" + str(res))"
1333,62 write a program to concatenate Ranged Values in String list and print it,"test_list = [""abGFGcs"", ""cdforef"", ""asalloi""]"
1334,initializing range,"i, j = 2, 5
r=''
for z in test_list:
    r += z[i:j] 
print(r)"
1335,63 write a program to replace dictionary value from other dictionary and print it,"test_dict = {""Gfg"" : 5, ""is"" : 8, ""Best"" : 10, ""for"" : 8, ""Geeks"" : 9}"
1336,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1337,initializing updict,"updict = {""Gfg""  : 10, ""Best"" : 17} 
d={}
for key in test_dict.keys():
     if key in updict:
        d.update({key:updict[key]})
     else:
        d.update({key:test_dict[key]})
print(d)"
1338,"64 write a program  to convert string to dictionary and print it
 Python implementation of converting 
 a string into a dictionary 
 initialising string","str = "" Jan = January; Feb = February; Mar = March"""
1339,generates key:value pair for each item,"dictionary = dict(subString.split(""="") for subString in str.split("";""))"
1340,printing the generated dictionary,print(dictionary)
1341,65 write a python program to extract item with Maximum Tuple Value,"test_dict = {'gfg' : (4, 6), 
             'is' : (7, 8), 
             'best' : (8, 2)}"
1342,"initializing tuple index  
 0 based indexing",tup_idx = 1
1343,"Extract Item with Maximum Tuple Value 
 Using max() + lambda 
 printing result","res = max(test_dict.items(), key = lambda ele: ele[1][tup_idx])
print(""The extracted maximum element item : "" + str(res))"
1344,66 write a python program  to Remove dictionary Key Words and print it,test_str = 'gfg is best for geeks'
1345,printing original string,"print(""The original string is : "" + str(test_str))"
1346,initializing Dictionary,"test_dict = {'geeks' : 1, 'best': 6} 
l=test_str.split()
print(l)
s=''
for i in l:
    if i in test_dict:
       l.remove(i)
print("" "".join(i for i in l))"
1347,67 write a python program to group Strings on Kth character and print it,"test_list = [""gfg"", ""is"", ""best"", ""for"", ""geeks""]"
1348,printing original list,"print(""The original list is : "" + str(test_list))"
1349,initializing K,"K = 2
d={}
for i in test_list:
    d.update({i[K-1]:[i]})
print(d)"
1350,68 write a python program to convert List of Dictionaries to List of Lists and print it,"test_list = [{'Nikhil' : 17, 'Akash' : 18, 'Akshat' : 20}, 
             {'Nikhil' : 21, 'Akash' : 30, 'Akshat' : 10}, 
             {'Nikhil' : 31, 'Akash' : 12, 'Akshat' : 19}] 
s=[]
count=0
for i in test_list:
    if count<1: 
       s.append(list(i.keys()))
    s.append(list(i.values()))
    count+=1
print(s)"
1351,"69 write a python program for printing custom order dictionary 
 initializing dictionary","test_dict = {'is' : 2, 'for' : 4, 'gfg' : 1, 'best' : 3, 'geeks' : 5}"
1352,initializing order,"ord_list = ['gfg', 'is', 'best', 'for', 'geeks'] 
c={}
for i in ord_list:
    if i in test_dict:
       c.update({i:test_dict[i]})
print(c)"
1353,70 write a python program to extract Numerical Dictionary values and print it,"test_dict = {""Gfg"" : [""34"", ""45"", 'geeks'], 'is' : [""875"", None, ""15""], 'best' : [""98"", 'abc', '12k']}"
1354,printing original dictionary,"res = [] 
for a, b, c in zip(*test_dict.values()):
    if a.isdigit() : 
        res.append((a, b, c))"
1355,printing result,"print(""The Numerical values : "" + str(res))"
1356,71 write a python program to count dictionaries in a list in Python and print it,"test_list = [10, {'gfg' : 1}, {'ide' : 2, 'code' : 3}, 20]"
1357,printing original list,"print(""The original list is : "" + str(test_list)) 
count=0
for i in test_list:
    if isinstance(i,dict):
       count=count+1
print(count)"
1358,72 write a python program to Filter and Double keys greater than K and print it,"test_dict = {'Gfg' : 4, 'is' : 2, 'best': 3, 'for' : 6, 'geeks' : 1}"
1359,"printing original dictionary 
 initializing K","print(""The original dictionary : "" + str(test_dict)) 
d={}  
K = 2
for keys,values in test_dict.items():
    if values >K:
       d.update({keys:2*values})
    else:
       d.update({keys:values})       
print(d)"
1360,73 write a python program to Convert Frequency dictionary to list and print it,"test_dict = {'gfg' : 4, 'is' : 2, 'best' : 5}"
1361,printing original dictionary,"print(""The original dictionary : "" + str(test_dict))
s=[]
for key,value in test_dict.items():
    for i in range(0,value):
        s.append(key)
print(s)"
1362,74 write a python program to assign list items to Dictionary and print it,"test_list = [{'Gfg' :  1, 'id' : 2 },  
             {'Gfg' :  4, 'id' : 4 }]"
1363,initializing key,new_key = 'best'
1364,initializing list,"add_list = [12, 2]"
1365,"Assign list items to Dictionary 
 Using zip() + loop","res = [] 
for sub, val in zip(test_list, add_list): 
    sub[new_key] = val 
    res.append(sub)"
1366,printing result,"print(""The modified dictionary : "" + str(res))"
1367,75 write a python program to test Boolean Value of Dictionary and print it,"test_dict = {'gfg' : True, 'is' : False, 'best' : True}"
1368,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))
res=True
for key,value in test_dict.items():
    if value==False:
       res=False
       break
print(f""Dictionary is {res}"")"
1369,76 write a python program  to print Dictionary values String Length Summation,"test_dict = {'gfg' : '2345', 
             'is' : 'abcde', 
             'best' : 'qwerty'}"
1370,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict)) 
list1=list(test_dict.values())
print(list1)
s="""".join(i for i in list1)
print(f'Summation of string values is {len(s)}')"
1371,77 write a python program to printlist of  Keys with shortest length lists in dictionary,"test_dict = {'gfg' : [4, 5], 
             'is' : [9, 7, 3, 10], 
             'best' : [11, 34], 
             'for' : [6, 8, 2],  
             'geeks' : [12, 24]}"
1372,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict)) 
s=[]
a=0
q=[]
for key,value in test_dict.items():
    s.append(len(value))
    q.append(key)
l=[]
print(s)
print(q) 
for k,z in zip(q,s):
      if z==min(s):
         l.append(k)
print(l)"
1373,78 write a python program to decrement Dictionary value by K,"test_dict = {'gfg' : 1, 'is' : 2, 'for' : 4, 'CS' : 5}"
1374,printing original dictionary,"print(""The original dictionary : "" + str(test_dict))"
1375,Initialize K,"K = 5
for key,value in test_dict.items():
    test_dict.update({key:value-K})
print(test_dict)"
1376,79 write a python program to find Common items among dictionaries and print it,"test_dict1 = {'gfg' : 1, 'is' : 2, 'best' : 3} 
test_dict2 = {'gfg' : 1, 'is' : 2, 'good' : 3}"
1377,printing original dictionaries,"print(""The original dictionary 1 is : "" + str(test_dict1)) 
print(""The original dictionary 2 is : "" + str(test_dict2))
count=0
for key1,value1 in test_dict1.items():
    for key2,value2 in test_dict2.items():
        if key1==key2 and value1==value2:
           count=count+1
print(count)"
1378,"80 write a python program to print Nth largest values in dictionary
81 write a python program to print consecutive Kth column Difference in Tuple List
 Consecutive Kth column Difference in Tuple List","test_list = [(5, 4, 2), (1, 3, 4), (5, 7, 8), (7, 4, 3)]"
1379,printing original list,"print(""The original list is : "" + str(test_list))"
1380,initializing K,"K = 1 
s=[]
for i in range(0,len(test_list)-1):
    s.append(abs(test_list[i][K]-test_list[i+1][K]))
print(s)"
1381,82 write a python program to find Tuples with positive elements in List of tuples and print it,"test_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)]"
1382,printing original list,"print(""The original list is : "" + str(test_list))"
1383,[all(i) for i in test_list if i>0],result = [i for i in test_list if all(ele >= 0 for ele in i)]
1384,printing result,"print(""Positive elements Tuples : "" + str(result))"
1385,83 write a python program to remove given character from first element of Tuple and print it,"test_list = [(""GF ! g !"", 5), (""! i ! s"", 4), (""best !!"", 10)]"
1386,printing original list,"print(""The original list is : "" + str(test_list))"
1387,initializing K,"K = ""!"""
1388,replace with empty string removes the desired char.,"res = [(sub[0].replace(K, ''), sub[1]) for sub in test_list]"
1389,printing result,"print(""The filtered tuples : "" + str(res))"
1390,84  write a python program remove particular data type Elements from Tuple and print it,"test_tuple = (4, 5, 'Gfg', 7.7, 'Best')"
1391,printing original tuple,"print(""The original tuple : "" + str(test_tuple))"
1392,initializing data type,"a=tuple()
data_type = int 
for i in test_tuple:
    if not isinstance(i,data_type):
       a=a+(i,)
print(list(a))"
1393,85 write a python program to print rear element extraction from list of tuples records,"test_list = [(1, 'Rash', 21), (2, 'Varsha', 20), (3, 'Kil', 19)]"
1394,printing original list,"print (""The original list is : "" + str(test_list))
s=[]
for i in test_list:
    l=len(i)
    s.append(i[l-1])
print(s)"
1395,86 write a python program to raise elements of tuple as power to another tuple and print it,"test_tup1 = (10, 4, 5, 6)  
test_tup2 = (5, 6, 7, 5) 
s=tuple()"
1396,printing original tuples,"print(""The original tuple 1 : "" + str(test_tup1))  
print(""The original tuple 2 : "" + str(test_tup2))
for i in range(0,len(test_tup1)):
    s+= (test_tup1[i] ** test_tup2[i],)
print(s)"
1397,87 write a python program to Count the elements till first tuple and print it,"test_tup = (1, 5, 7, (4, 6), 10)"
1398,printing original tuple,"print(""The original tuple : "" + str(test_tup))
count=0
for i in test_tup:
    if isinstance(i,tuple):
       break
    count=count+1
print(f'count of element till first tuple is {count}')"
1399,88 write a python program to print Dissimilar Elements in Tuples,"test_tup1 = (3, 4, 5, 6) 
test_tup2 = (5, 7, 4, 10)"
1400,printing original tuples,"print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2))
c=tuple()
c=tuple(set(test_tup1) ^ set(test_tup2))
print(f'Dissimilar element tuple is {c}')"
1401,89 write a python program to flatten Tuples List to String and print it,"test_list = [('1', '4', '6'), ('5', '8'), ('2', '9'), ('1', '10')]"
1402,printing original tuples list,"print(""The original list : "" + str(test_list)) 
s=''
for i in test_list:
    for j in i:
        s+=' '+j+' '
print(f' string after flattening is {s}')"
1403,"90 write a python program to filter tuples according to list element presence and print it
 initialize target list  
        print(j)
           print(j)","test_list = [(1, 4, 6), (5, 8), (2, 9), (1, 10)] 
s=[]  
tar_list = [6, 10] 
for i in test_list:
    for j in i:
        if j in tar_list:
           s.append(i)
print(s)"
1404,91 write a python program to concatenate tuple and print it,"test_tup1 = (1, 3, 5) 
test_tup2 = (4, 6)"
1405,printing original tuples,"print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2)) 
c=test_tup1+test_tup2
print(c)"
1406,92 write a python program to sort list under tuples and print it,"test_tup = ([7, 5, 4], [8, 2, 4], [0, 7, 5])"
1407,printing original tuple,"print(""The original tuple is : "" + str(test_tup)) 
s=tuple(sorted([j for j in i],reverse=False ) for i in test_tup)
print(f'the sorted list inside tuple is {s}')"
1408,93 write a  python program for  removing strings from tuple and printing it,"test_list = [('Geeks', 1, 2), ('for', 4, 'Geeks'), (45, 'good')]"
1409,printing original list,"print(""The original list : "" + str(test_list)) 
s=[]
for i in test_list:
    t=tuple()
    for j in i:
        if not isinstance(j,str):
           t+=(j,)
    s.append(t)       
print(f'List after removing string from tuple is {s}')"
1410,"94 write a program to remove matching tuples and print it
           continue","test_list1 = [('Early', 'morning'), ('is','good'), ('for', 'Health')] 
test_list2 = [('Early', 'morning'), ('is','good')] 
l=[]
for i in range(0,len(test_list1)):
    for j in range(0,len(test_list2)):
        if test_list1[i]  not in test_list2:
           l.append(test_list1[i])
           break
print(l)"
1411,"95  write a program to Split tuple into groups of n and print it
t=tuple()
        print(ini_tuple[j])","ini_tuple = (1, 2, 3, 4, 8, 12, 3, 34, 
             67, 45, 1, 1, 43, 65, 9, 10)
n=4
N=0
s=tuple()
for i in range(0,len(ini_tuple)//n):
    t=tuple()
    for j in range(N,N+n):
        t+=(ini_tuple[j],)
    N=N+n
    s+=(t,)    
print(s)"
1412,96 write a python program to convert  list of tuples into digits and print it,"lst = [(11, 100), (22, 200), (33, 300), (44, 400), (88, 800)]
a=''
for i in lst:
    for j in i:
        a+=str(j)
print(list(set(a)))"
1413,97 write a python program to Join tuple elements in a list and print it,"test_list = [('geeks', 'for', 'geeks'), 
             ('computer', 'science', 'portal')]"
1414,"printing original list 
s=''","print (""The original list is : "" + str(test_list)) 
l=[]
for i in test_list:
    s=''
    for j in i:
        s+=j+' '
    l.append(s)
print(l)"
1415,98 write a python program to  count the elements in a list until an element is a Tuple  and print it,"li = [4, 5, 6, 10, (1, 2, 3), 11, 2, 4]
count=0
for i in li:
    if  isinstance(i,tuple):
        break
    count=count+1
print(f'count of element till tuple is encountered {count}')"
1416,99 write a python program  to get maximum of each key Dictionary List and print it,"test_list = [{""Gfg"": 8, ""is"": 1, ""Best"": 9}, 
             {""Gfg"": 2, ""is"": 9, ""Best"": 1}, 
             {""Gfg"": 5, ""is"": 10, ""Best"": 7}]"
1417,"printing original list 
         checking for key presence and updating max","print(""The original list is : "" + str(test_list)) 
res = {} 
for i in test_list: 
    for key, value in i.items(): 
        if key in res: 
            res[key] = max(res[key], value) 
        else: 
            res[key] = value"
1418,printing result,"print(""All keys maximum : "" + str(res))"
1419,100 write a python program to extract Keys with specific Value Type,"test_dict = {'gfg': 2, 'is': 'hello', 'best': 2, 'for': {'1': 3}, 'geeks': 4}"
1420,printing original dictionary,"print(""The original dictionary is : "" + str(test_dict))"
1421,"initializing type 
     checking for values datatype","targ_type = int
res = [] 
for key, val in test_dict.items(): 
    if isinstance(val, targ_type): 
        res.append(key)"
1422,printing result,"print(""The extracted keys : "" + str(res))"
1423,"Driver Code 
     Remove nth index element 
     Print the new string","if __name__ == '__main__': 
    string = ""SchoolofAI""
    i = 5
    print(remove(string, i))"
1424,"1
 write a python function to remove last element in the list","def remove_last_element_list(list1):
    list1.pop()
    return list1"
1425,"2
 write a python function to find the add two numbers and then find the largest among sum and other two inputs","def find_the_largest(num1, num2):
    sum_ = num1+num2
    if num1 >= sum_ and num1 >= num2:
        return num1
    elif num2 >= sum_ and num2 >= num1:
        return num2
    else:
        return sum_"
1426,"3 
 write a function to calculate the area of polygon given the number of edges, circumradius","import math
def area_of_polygon(number_of_edges, circumradius):
        return number_of_edges * 2 * circumradius * math.sin(180/number_of_edges) * circumradius * math.cos(180/number_of_edges) * 0.5"
1427,"4
 write a function to calculate the apothem of polygon given the number of edges, circumradius","import math
def apothem_of_polygon(number_of_edges, circumradius):
    return circumradius * math.cos(180/number_of_edges)"
1428,"5
 write a function which creates a deck of cards, given the list of suits and values","def create_deck_of_cards(values: list, suits: list):
    card_deck = []
    for i in range(52):
        tup = (values[i], suits[i])
        card_deck.append(tup)
    return card_deck"
1429,"6
 write a function which converts temperature values, from Celsius(C) to Fahreinheit(F) and from Fahreinheit(F) to Celsius(C) \
      given the temperature value and its unit","def temp_converter(value, unit):
    if unit =='F' and value in range(32, 212):
        converts = (value - 32) * 5.0/9.0
        return converts
    elif unit =='C' and value in range(0,100):
        converts = (9.0/5.0) * value + 32
        return converts
    else:
        raise ValueError"
1430,"7
 write a function which takes in a list and a number as an input and returns a list with each list element raised to power of that number","def powered_list(a_list, a_number):
    a_list = [math.pow(a_number) for i in a_list]  
    return a_list"
1431,"8 
 write a function to execute a string containing Python code","def execute_python_code(a_string):
    return exec(a_string)"
1432,"9 
 write a function to multiply all the numbers in a list","def multiply_all(a_list):
    product = 1
    for i in a_list:
        product *= i
    return product"
1433,"10
  write a function to slice a tuple, given an input tuple and start, stop, step=1","def slice_a_tuple(a_tuple, start, stop, step=1):
    return a_tuple[start:stop:step]"
1434,"11
 write a function to check if a list is empty or not","def list_is_empty(a_list):
    if not a_list:
        return True
    else:
        return False"
1435,"12
 Write a Python function to convert a string list to a normal list type","import ast
def convert_string_to_list(str_lst):
    return ast.literal_eval(str_lst)"
1436,"13
 Write a Python function to extend a list without append.","def extend_list_without_append(list1, list2):
    return list1.extend(list2)"
1437,"14
  Write a Python function to find the median among three given numbers","def find_the_median(x,y,z):
    list_ = sorted([x,y,z])
    return list_[1]"
1438,"15
 Write a python function to remove a newline in Python","def remove_newline(string):
    return string.strip()"
1439,"16
 Write a python function to convert a string to a list","def convert_str_to_list(string):
    return string.split(' ')"
1440,"17
  Write a python function to remove spaces from a given string","def remove_spaces_from_string(string):
    return string.replace(' ', '')"
1441,"18
 Write a python function to capitalize first and last letters of each word of a given string","capitalize_both_ends = lambda x: x[0].upper() + x[1:-1] + x[-1].upper()
def capitalize_first_and_last(string):
    string = string.strip().split()
    new_string = [capitalize_both_ends(word) for word in string]
    return new_string"
1442,"19
 Write a python function to remove duplicate words from a given string","def remove_duplicate_words(string):
    string = string.strip().split()
    return ' '.join(set(string))"
1443,"20 
 Write a python function to calculate number of days between two dates using datetime module","from datetime import date
def day_diff(date1, date2):
    diff = date1 - date2
    return diff.days"
1444,"21
 Write a python function to get the volume of a sphere with radius as input","def sphere_volume(radius):
    volume =  4.0/3.0 * 3.14 * radius ** 3
    return volume"
1445,"22
 Write a Python function to check whether the input letter is a vowel or not","def check_vowel_or_not(letter):
    result =  str(letter) in ""aeiou""
    return result"
1446,"23
 Write a Python function to get OS name & platform using os & platform library","import os
import platform
def get_info():
    return f'OS: {os.name}\n Platform: {platform.system}'"
1447,"24
 Write a Python program to print out the number of CPUs working behind the scenes using multiprocessing library","import multiprocessing
print(multiprocessing.cpu_count())"
1448,"25
 Write a Python program to calculate the hypotenuse of a right angled triangle using math library","from math import sqrt
print(""Input lengths of shorter triangle sides:"")
def hypotenuse(side1, side2):
    hyp = sqrt(side1**2 + side2**2)
    return hyp"
1449,"26
 Write a Python function to convert height (in feet and inches) to centimeters","def height_converter(h_ft, h_inch):
    h_inch += h_ft * 12
    h_cm = round(h_inch * 2.54, 1)
    return h_cm"
1450,"27
  Write a Python function to convert the distance (in feet) to inches, yards, and miles.","def distance_converter(d_ft):
    d_inches = d_ft  * 12
    d_yards = d_ft  / 3.0
    d_miles = d_ft  / 5280.0
    return f""Distance in Inches:{d_inches}\nDistance in Yards :{d_yards}\nDistance in Miles :{d_miles}"""
1451,"28
  Write a Python program to get the copyright information using sys module","import sys
print(""\nPython Copyright Information"")
print(sys.copyright)
print()"
1452,"29
 Write a Python program to find the available built-in modules using sys and textwrap modules","import sys
import textwrap
module_name = ', '.join(sorted(sys.builtin_module_names))
print(textwrap.fill(module_name, width=70))"
1453,"30
 Write a Python program to get the current username using getpass library","import getpass
print(getpass.getuser())"
1454,"31
 Write a Python program to accept a filename from the user and print the extension of that","def filename_extension(file):
    f_extns = file.split(""."")
    return f""The extension of the file is :{repr(f_extns[-1])}"""
1455,"32
 Write a Python function that calculates the area of parallelogram and takes in base, height as input","def area_shape(base, height, shape):
    return {'triangle': 0.5*base*height, 'parallelogram': base*height}[shape]"
1456,"33
 Write a Python function to reverse a string if it's length is a multiple of 4.","def reverse_string(str1):
    if len(str1) % 4 == 0:
       return ''.join(reversed(str1))
    return str1"
1457,"34
 Write a Python function to reverse words in a string.","def reverse_string_words(text):
    for line in text.split('\n'):
        return(' '.join(line.split()[::-1]))"
1458,"35
 Write a Python program to count and display the vowels of a given text.","def vowel(text):
    vowels = ""aeiuoAEIOU""
    main_list = [letter for letter in text if letter in vowels]
    return len(main_list), main_list"
1459,"36
 Write a Python program to find the first repeated character in a given string","def first_repeated_char(str1):
    for index,c in enumerate(str1):
        if str1[:index+1].count(c) > 1:
            return c 
    return ""None"""
1460,"37
 Write a Python program to find the first repeated word in a given string.","def first_repeated_word(str1):
    temp = set()
    for word in str1.split():
        if word in temp:
            return word
        else:
            temp.add(word)
    return 'None'"
1461,"38
 Write a Python program to remove spaces from a given string","def remove_spaces(str1):
    str1 = str1.replace(' ','')
    return str1"
1462,"39
 Write a Python program to remove spaces from a given string using set","def remove_duplicate(str1):
    list_str = str1.split()
    return """".join(set(list_str))"
1463,"40
 Write a Python function that will accept the base and height of a triangle and compute the area.","def triangle_area(base, height):
    area = base*height/2
    return area"
1464,"41
 Write a Python function to create all possible permutations from a given collection of distinct numbers.","def permute(nums):
    result_perms = [[]]
    for n in nums:
        new_perms = []
        for perm in result_perms:
            for i in range(len(perm)+1):
                new_perms.append(perm[:i] + [n] + perm[i:])
                result_perms = new_perms
    return result_perms"
1465,"42
 Write a Python program to print the calendar of a given month and year","import calendar
y = int(input(""Input the year : ""))
m = int(input(""Input the month : ""))
print(calendar.month(y, m))"
1466,"43
 Write a python function to get the volume of a cube with side as input","def cube_volume(side):
    volume = side ** 3
    return volume"
1467,"44
 Write a python function to get the volume of a prism with base area & height as input","def prism_volume(base_area, height):
    volume = base_area * height
    return volume"
1468,"45
 Write a python function to get the volume of a cylinder with radius & height as input","def cylinder_volume(radius, height):
    volume = 3.14 * (radius ** 2) * height
    return volume"
1469,"46
  Write a python function to get the volume of a cone with radius & vertical height as input","def cone_volume(radius, height):
    volume = 1/3 * 3.14 * (radius ** 2) * height
    return volume"
1470,"47 
  Write a python function to get the volume of a pyramid with base area & vertical height as input","def pyramid_volume(base_area, height):
    volume = 1/3 * base_area * height
    return volume"
1471,"48 
 Write a python function to get the surface area of a cube with side as input","def cube_surface_area(side):
    surface_area = 6 * side ** 2
    return surface_area"
1472,"49
 Write a python function to get the volume of a rectangular prism with side as length, width and height as input","def rec_prism_volume(length, width, height):
    volume = length * width * height
    return volume"
1473,"50
 Write a python function to get the surface_area of a rectangular prism with side as length, width and height as input","def rec_prism_surface_area(length, width, height):
    surface_area = 2*((length * width) + (width * height) + (height * length))
    return surface_area"
1474,"51
 Write a python function to get the surface_area of a prism with base area, base perimeter & height as input","def prism_surface_area(base_area, base_perimeter, height):
    surface_area = 2*base_area + (base_perimeter*height)
    return surface_area"
1475,"52
 Write a python function to get the surface_area of a cylinder with radius & height as input","def cylinder_surface_area(radius, height):
    surface_area = 3.14 * (radius ** 2) + (2 * 3.14 * radius * height)
    return surface_area"
1476,"53
  Write a python function to get the surface_area of a cone with radius & slant height as input","def cone_surface_area(radius, slant_height):
    surface_area =  3.14 * (radius ** 2) + 3.14 * radius * slant_height
    return surface_area"
1477,"54
  Write a python function to get the surface_area of a pyramid with base area & vertical height as input","def pyramid_surface_area(base_area, height):
    surface_area = 1/3 * base_area * height
    return surface_area"
1478,"55
  Write a python function to get the volume of a cuboid with length, breadth & height as input","def cuboid_volume(length, breadth, height):
    volume = length * breadth * height
    return volume"
1479,"56
 Write a python function to break a list into chunks of size N use generator","my_list = ['one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight']"
1480,"Yield successive n-sized 
 chunks from l. 
	 looping till length l","def divide_chunks(l, n): 
	for i in range(0, len(l), n): 
		yield l[i:i + n]"
1481,"57
 Write a python function to generate Lucas Numbers (2, 1, 3, 4, 7, 11, 18...)","def lucas_numbers(n):
    first, second = 2,1
    for _ in range(n):
        first, second = second, first+second
    return first"
1482,"58
 Write a python function to generate Square Numbers (1, 4, 9, 16, 25...)","def square_numbers(n):
    for i in range(n):
        yield i ** 2"
1483,"59
 Write a python function to generate Cube Numbers (1, 8, 27, 64, 125...)","def cube_numbers(n):
    for i in range(n):
        yield i **  3"
1484,"60
 Write a python function to generate Triangular Number Series (1, 3, 6, 10, 15...)","def triangle_numbers(n):
    for i in range(n):
        yield int(i*(i+1)/2)"
1485,"61
 Write a python function to generate  Euclid Number Series(2, 3, 7, 31, 211, 2311, 30031)","from math import sqrt
from itertools import count, islice
def is_prime(n):
    return n > 1 and all(n % i for i in islice(count(2), int(sqrt(n)-1)))
def euclid_numbers(n):
    product = 1
    if n > 3:
        for i in range(n):
            if is_prime(i):
                product = product * i
                yield product"
1486,"62
 Write a Python program to print the following floating numbers with no decimal places.","x = 3.1415926
y = -12.9999
print(""\nOriginal Number: "", x)
print(""Formatted Number with no decimal places: ""+""{:.0f}"".format(x))
print(""Original Number: "", y)
print(""Formatted Number with no decimal places: ""+""{:.0f}"".format(y))"
1487,"63
 Write a Python program to append a list to the second list.","list1 = [1, 2, 3, 0]
list2 = ['Red', 'Green', 'Black']
final_list = list1 + list2
print(final_list)"
1488,"64
 Write a Python program to create the colon of a tuple.
create a tuple
make a copy of a tuple using deepcopy() function","from copy import deepcopy
tuplex = (""HELLO"", 5, [], True) 
print(tuplex)
tuplex_colon = deepcopy(tuplex)
tuplex_colon[2].append(50)"
1489,"65
 Write a Python program to find the repeated items of a tuple.
return the number of times it appears in the tuple.","tuplex = 2, 4, 5, 6, 2, 3, 4, 4, 7 
print(tuplex)
count = tuplex.count(4)
print(count)"
1490,"66
 Write a Python program to slice a tuple
create a tuple
used tuple[start:stop] the start index is inclusive and the stop index","tuplex = (2, 4, 3, 5, 4, 6, 7, 8, 6, 1)
_slice = tuplex[3:5]"
1491,"67
 Write a Python program to reverse a tuple.
create a tuple
 Reversed the tuple","x = (""w3resource"")
y = reversed(x)"
1492,"68
 Write a Python program to convert a list of tuples into a dictionary.
create a list","l = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]
d = {}
for a, b in l:
    d.setdefault(a, []).append(b)
print (d)"
1493,"69
 Write a Python program to check whether an element exists within a tuple.","tuplex = (""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"", ""e"")
print(""e"" in tuplex)"
1494,"70
 Write a Python function to convert a list to a tuple.","def convert_list_to_tuple(list_input):
    return tuple(list_input)"
1495,"71
 Write a Python function to unzip a list of tuples into individual lists","def unzip_list_of_tuples(list_tuple):
    return list(zip(*l))"
1496,"72
 Write a Python program to convert a list of tuples into a dictionary.","l = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]
d = {}
for a, b in l:
    d.setdefault(a, []).append(b)
print(d)"
1497,"73
 Write a Python function to clear a set.","def clear_set(set_input):
    setp_copy = set_input.copy()
    setp_copy.clear()
    return setp_copy"
1498,"74
 Write a Python function that returns the ASCII value of the passed in character.","def ascii_value_of_character(char):
    return ord(char)"
1499,"75
 Write a Python function to create a union of sets.
Union","def union_of_sets(Set1, Set2):
    result = Set1 | Set2
    return result"
1500,"76
 Write a Python program to add member in a set
A new empty set","color_set = set()
color_set.add(""Red"")
print(color_set)"
1501,"77
 Write a Python function to add two given lists using map and lambda.","def add_two_lists(list_1, list_2):
    result = map(lambda x, y: x + y, list_1, list_2)
    return result"
1502,"78
 Write a Python function to find numbers within a given range where every number is divisible by every digit it contains.","def divisible_by_digits(start_num, end_num):
    return [n for n in range(start_num, end_num+1) \
                if not any(map(lambda x: int(x) == 0 or n%int(x) != 0, str(n)))]"
1503,"79
 Write a Python function to find the maximum value in a given heterogeneous list using lambda","def max_val(list_val):
     max_val = max(list_val, key = lambda i: (isinstance(i, int), i))  
     return(max_val)"
1504,"80
 Write a Python function that takes a string and returns the concatenated first and last character","def first_last(name):
    return name[0] + name[-1]"
1505,"81
 Write a Python function to return Syslvester's Sequence
 a(n) = a(n-1)**2 + a(n-1) + 1","def syslvester_seq(n):
    if n == 1:
        return 2
    if n > 1:
        return syslvester_seq(n-1)**2 - syslvester_seq(n-1) + 1"
1506,"82
 Write a Python function to return Tribonacci's Sequence
 T(n) = T(n − 1) + T(n − 2) + T(n − 3) for n ≥ 3 [T(0) = 0, T(1) = 1, T(2) = 1]","def tribonacci_seq(n):
    if n >= 0:
        if n == 0:
            return 0
        elif n == 1:
            return 1
        elif n == 2 :
            return 1
        else:
            return tribonacci_seq(n-1) + tribonacci_seq(n-2) + tribonacci_seq(n-3)"
1507,"83
 Write a Python function to return Pell's Sequence
 a(n) = 2a(n − 1) + a(n − 2) for n ≥ 2, with a(0) = 0, a(1) = 1.","def pell_seq(n):
    if n >= 0:
        if n == 0:
            return 0
        elif n == 1:
            return 1
        else:
            return 2 * pell_seq(n-1) + pell_seq(n-2)"
1508,"84
 Write a Python function to return Fermat's Sequence
 Fn = 2 ** 2n + 1 for n ≥ 0.","def fermat_seq(n):
    if n >= 0:
        return 2 ** (2**n) + 1"
1509,"85
 Write a Python function to return Padovan's Sequence
 P(n) = P(n − 2) + P(n − 3) for n ≥ 3, with P(0) = P(1) = P(2) = 1.","def padovan_seq(n):
    if n >= 0:
        if n in {0,1,2}:
            return 1
        else:
            return padovan_seq(n-3) + padovan_seq(n-2)"
1510,"86
 Write a Python function to return Jacobsthal's number
 a(n) = a(n − 1) + 2a(n − 2) for n ≥ 2, with a(0) = 0, a(1) = 1.","def jacobsthal_seq(n):
     if n >= 0:
        if n == 0:
            return 0
        elif n == 1:
            return 1
        else:
            return 2 * jacobsthal_seq(n-2) + jacobsthal_seq(n-1)"
1511,"87
  Write a Python function to return perrin's number
 P(n) = P(n−2) + P(n−3) for n ≥ 3, with P(0) = 3, P(1) = 0, P(2) = 2.","def perrins_number(n):
    if n >= 0:
        if n == 0:
            return 3
        elif n == 1:
            return 0
        elif n == 2:
            return 2
        else:
            return perrins_number(n-3) + perrins_number(n-2)"
1512,"88
  Write a Python function to return cullen number
 Cn = n⋅2n + 1, with n ≥ 0.","def cullen_number(n):
    if n >= 0:
        return n * 2 ** n + 1"
1513,"89
  Write a Python function to return woodall numbers
 n⋅2n − 1, with n ≥ 1.","def woodall_number(n):
    if n >= 0:
        return n * 2 ** n - 1"
1514,"90
  Write a Python function to return carol numbers
 (2n − 1)**2 - 2, with n ≥ 1.","def carol_number(n):
    if n >= 0:
        return (2**n - 1)**2 - 2"
1515,"91
  Write a Python function to return star numbers
 The nth star number is Sn = 6n(n − 1) + 1.","def star_number(n):
    return 6*n*(n-1)+1"
1516,"92
  Write a Python function to return stella octangula numbers
 Stella octangula numbers: n (2n2 − 1), with n ≥ 0.","def stella_octangula_number(n):
    if n >= 0:
        return n*(2**n - 1)"
1517,"93
 Write a Python function to convert Hours into Seconds","def hours_to_seconds(hours):
    return hours * 60 * 60"
1518,"94
 Write a Python function which returns the Modulo of the two given numbers.","def mod(m, n):
    return m % n"
1519,"95
 Write a Python function that finds the maximum range of a triangle's third edge, where the side lengths are all integers.","def next_edge(side1, side2):
    return (side1+side2-1)"
1520,"96
 Write a Python function that takes a list and returns the difference between the biggest and smallest numbers.","def difference_max_min(lst):
	return abs(min(lst) - max(lst))"
1521,"97
 Write a Python function that returns the number of frames shown in a given number of minutes for a certain FPS.","def number_of_frames(minutes, fps):
	return (minutes * 60) * fps"
1522,"98
 Write a Python function that returns True if a string is empty and False otherwise.","def is_empty(s):
    if s == """":
        return True
    else:
        return False"
1523,"99
 Write a Python function that accepts a measurement value in inches and returns the equivalent in feet","def inches_to_feet(inches):
    if inches < 12:
        return 0
    return inches/12"
1524,"100
 Write a Python function that takes the age and return the age in days.","def calc_age(age):
    calculation = age*365
    return calculation"
1525,write a Python function to remove empty tuples from a list of tuples function to remove empty tuples using filter,"def Remove(tuples): 
    tuples = filter(None, tuples) 
    return tuples 
tuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  
          ('krishna', 'akbar', '45'), ('',''),()] 
print(Remove(tuples))"
1526,write a Python function to count the number of occurrences in list,"def countX(lst, x): 
    return lst.count(x) 
lst = [8, 6, 8, 10, 8, 20, 10, 8, 8] 
x = 8
print('{} has occurred {} times'.format(x, countX(lst, x)))"
1527,write a Python function to clone or copy a list using the in-built function list(),"def Cloning(li1): 
    li_copy = list(li1) 
    return li_copy 
li1 = [4, 8, 2, 10, 15, 18] 
li2 = Cloning(li1) 
print(""Original List:"", li1) 
print(""After Cloning:"", li2)"
1528,write a Python program to print odd Numbers in a List,"list1 = [10, 21, 4, 45, 66, 93] 
only_odd = [num for num in list1 if num % 2 == 1] 
print(""Odd numbers in the list: "",only_odd)"
1529,write a Python program to print even Numbers in a List,"list1 = [10, 21, 4, 45, 66, 93]  
even_nos = [num for num in list1 if num % 2 == 0] 
print(""Even numbers in the list: "", even_nos)"
1530,write a Python program to find N largest element from given list of integers,"l = [1000,298,3579,100,200,-45,900] 
n = 4
l.sort() 
print(l[-n:])"
1531,write a Python program to find the second largest number in given list.,"list1 = [10, 20, 4, 45, 99]
list1.sort()
print(""Second largest element is:"", list1[-2])"
1532,write a python function to swap first and last element of a list,"def swapList(newList): 
    newList[0], newList[-1] = newList[-1], newList[0] 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
1533,"write a python function to find simple interest for given principal amount, time and rate of interest.","def simple_interest(p,t,r): 
    print('The principal is', p) 
    print('The time period is', t) 
    print('The rate of interest is',r) 
    si = (p * t * r)/100
    print('The Simple Interest is', si) 
    return si 
simple_interest(8, 6, 8)"
1534,write a python function for implementation of Insertion Sort,"def insertionSort(arr): 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
arr = [12, 11, 13, 5, 6] 
insertionSort(arr) 
print (f""Sorted array is: {arr}"")"
1535,write a python function for implementation of Bubble Sort,"def bubbleSort(arr): 
    n = len(arr) 
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
arr = [64, 34, 25, 12, 22, 11, 90] 
bubbleSort(arr) 
print (f""Sorted array {arr}"")"
1536,write a python program for implementation of selection sort of list,"A = [64, 25, 12, 22, 11] 
for i in range(len(A)): 
    min_idx = i 
    for j in range(i+1, len(A)): 
        if A[min_idx] > A[j]: 
            min_idx = j 
    A[i], A[min_idx] = A[min_idx], A[i] 
print (f""Sorted array {A}"")"
1537,write a python program for adding two binary numbers,"num1 = '00001'
num2 = '10001'
sum = bin(int(num1,2) + int(num2,2))
print(sum)"
1538,write a python program to count the number of each vowels,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'
ip_str = ip_str.casefold()
count = {}.fromkeys(vowels,0)
for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
1539,write a python program to print two sets union using operations like in mathematic,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Union of E and N is"",E | N)"
1540,write a python program to print two sets intersection using operations like in mathematic,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Intersection of E and N is"",E & N)"
1541,write a python program to print two sets differences using operations like in mathematic,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Difference of E and N is"",E - N)"
1542,write a python program to print two sets symmetric differences using operations like in mathematic,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Symmetric difference of E and N is"",E ^ N)"
1543,write a python program to sort alphabetically the words form a string provided by the user,"my_str = ""Hello this Is an Example With cased letters""
words = [word.lower() for word in my_str.split()]
words.sort()
print(""The sorted words are:"")
for word in words:
   print(word)"
1544,write a python program to remove punctuations from a string,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
1545,write a python program to check if a string is palindrome or not,"my_str = 'aIbohPhoBiA'
my_str = my_str.casefold()
rev_str = reversed(my_str)
if list(my_str) == list(rev_str):
   print(""The string is a palindrome."")
else:
   print(""The string is not a palindrome."")"
1546,write a python program to transpose a matrix using a nested loop,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
1547,write a python function to find the factors of a number,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)
num = 63
print_factors(num)"
1548,write a python function to find the L.C.M. of two input number,"def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
num1 = 54
num2 = 24
print(""The L.C.M. is"", compute_lcm(num1, num2))"
1549,write a python function to find H.C.F of two numbers,"def compute_hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
1550,write a python program to print anonymous function to find all the numbers divisible by 13 in the list.,"my_list = [12, 65, 54, 39, 102, 339, 221,]
result = list(filter(lambda x: (x % 13 == 0), my_list))
print(""Numbers divisible by 13 are"",result)"
1551,write a python program to print display the powers of 2 using anonymous function,"terms = 10
result = list(map(lambda x: 2 ** x, range(terms)))
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
1552,write a python program to print sum of natural numbers up to num,"num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
1553,write a python program to print Armstrong numbers in a certain interval,"lower = 100
upper = 2000
for num in range(lower, upper + 1):
   order = len(str(num))
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** order
       temp //= 10
   if num == sum:
       print(num)"
1554,write a python program to check if the number is an Armstrong number or not,"num = 663
sum = 0
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10
if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
1555,"write a python program to print all the prime numbers within an interval
    all prime numbers are greater than 1","lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
1556,write a python program to check if a number is prime or not,"num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
1557,write a python program to convert paragraph string into sentense case,"a = 'hello. i am a sentence.'
a = '. '.join(i.capitalize() for i in a.split('. '))
print(a)"
1558,write a python program to convert raw string integer inputs to integers,"str_input = ""1 2 3 4 5 6""
int_input = map(int, str_input.split())
print(list(int_input))"
1559,write a python program to find index of min element,"lst = [40, 10, 20, 30]
def minIndex(lst):
    return min(range(len(lst)), key=lst.__getitem__)
print(minIndex(lst))"
1560,write a python program to find index of max element,"lst = [40, 10, 20, 30]
def maxIndex(lst):
    return max(range(len(lst)), key=lst.__getitem__)
print(maxIndex(lst))"
1561,write a python program to use maxsplit with arbitrary whitespace,"s = ""foo    bar   foobar foo""
print(s.split(None, 2))"
1562,write a python program to loop over dictionaries that share (some) keys,"dctA = {'a': 1, 'b': 2, 'c': 3}
dctB = {'b': 4, 'c': 3, 'd': 6}
for ky in dctA.keys() & dctB.keys():
    print(ky)"
1563,write a python program to loop over dictionaries that share (some) keys and values,"dctA = {'a': 1, 'b': 2, 'c': 3}
dctB = {'b': 4, 'c': 3, 'd': 6}
for item in dctA.items() & dctB.items():
    print(item)"
1564,write a python program to converts list of mix data to comma separated string,"data = [2, 'hello', 3, 3.4]
print (','.join(map(str, data)))"
1565,write a python program to deep flattens a nested list,"L = [1, 2, [3, 4], [5, 6, [7]]]
def flatten(L):
    for item in L:
        if isinstance(item, list):
            yield from flatten(item)
        else:
            yield item
print(list(flatten(L)))"
1566,"write a python program to swaps keys and values in a dict
 make sure all of dict's values are unique","_dict = {""one"": 1, ""two"": 2}
assert len(_dict) == len(set(_dict.values()))
reversed_dict = {v: k for k, v in _dict.items()}
print(reversed_dict)"
1567,write a python program to add whitespaces both sides of a string,"s = 'The Little Price'
width = 20
s3 = s.center(width)
print(s3)"
1568,write a python program to sort a dictionary by its values and print the sorted dictionary with 'key' argument.,"d = {'apple': 10, 'orange': 20, 'banana': 5, 'rotten tomato': 1}
print(sorted(d.items(), key=lambda x: x[1]))"
1569,write a python program to sort dict keys by value and print the keys,"d = {'apple': 10, 'orange': 20, 'banana': 5, 'rotten tomato': 1}
print(sorted(d, key=d.get))"
1570,write a python program to call different functions based on condition with same arguments,"def product(a, b):
    return a * b
def subtract(a, b):
    return a - b
b = True
print((product if b else subtract)(1, 1))"
1571,write a python program to do chained comparison,"a = 10
print(1 < a < 50)
print(10 == a < 20)"
1572,write a python program to merge two dictionary,"x = {'a': 1, 'b' : 2}
y = {'c': 3, 'd' : 4}
z = {**x, **y}
print(z)"
1573,write a Python program to get the Cumulative sum of a list,"list1=[10,20,30,40,50]
new_list=[] 
j=0
for i in range(0,len(list1)):
    j+=list1[i]
    new_list.append(j) 
print(new_list)"
1574,write a Python program to Break a list into chunks of size N in Python,"l = [1, 2, 3, 4, 5, 6, 7, 8, 9] 
n = 4
x = [l[i:i + n] for i in range(0, len(l), n)] 
print(x)"
1575,write a Python function to check Check if a Substring is Present in a Given String,"def check(string, sub_str): 
    if (string.find(sub_str) == -1): 
        print(""NO"") 
    else: 
        print(""YES"") 
string = ""geeks for geeks""
sub_str =""geek""
check(string, sub_str)"
1576,write a Python program to demonstrate working of Words Frequency in String Shorthands,"test_str = 'Gfg is best . Geeks are good and Geeks like Gfg'
print(""The original string is : "" + str(test_str)) 
res = {key: test_str.count(key) for key in test_str.split()} 
print(""The words frequency : "" + str(res))"
1577,write a Python program to demonstrate working of Convert Snake case to Pascal case,"test_str = 'geeksforgeeks_is_best'
print(""The original string is : "" + test_str) 
res = test_str.replace(""_"", "" "").title().replace("" "", """") 
print(""The String after changing case : "" + str(res))"
1578,write a Python function to print even length words in a string,"def printWords(s): 
    s = s.split(' ') 
    for word in s: 
        if len(word)%2==0: 
            print(word) 
s = ""i am muskan""
printWords(s)"
1579,write a Python function to Remove all duplicates from a given string,"def removeDuplicate(str): 
    s=set(str) 
    s="""".join(s) 
    print(""Without Order:"",s) 
    t="""" 
    for i in str: 
        if(i in t): 
            pass
        else: 
            t=t+i 
    print(""With Order:"",t) 
str1=""geeksforgeeks""
removeDuplicate(str1)"
1580,write a Python program to find Least Frequent Character in String,"test_str = ""GeeksforGeeks""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get) 
print (""The minimum of all characters in GeeksforGeeks is : "" + res)"
1581,write a Python program to find Maximum Frequent Character in String,"test_str = ""GeeksforGeeks""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get) 
print (""The maximum of all characters in GeeksforGeeks is : "" + res)"
1582,write a Python function to find all string which are greater than given length k,"def string_k(k, str): 
    string = [] 
    text = str.split("" "") 
    for x in text: 
        if len(x) > k: 
            string.append(x) 
    return string 
k = 3
str1 =""geek for geeks""
print(string_k(k, str1))"
1583,write a Python function to check if a string is binary or not,"def check2(string) : 
    t = '01'
    count = 0
    for char in string : 
        if char not in t : 
            count = 1
            break
        else : 
            pass
    if count : 
        print(""No, string is not binary"") 
    else : 
        print(""Yes, string is binary"") 
string = ""001021010001010""
check2(string)"
1584,write a Python program to find a list of uncommon words,"def UncommonWords(A, B): 
    count = {} 
    for word in A.split(): 
        count[word] = count.get(word, 0) + 1
    for word in B.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] == 1] 
A = ""Geeks for Geeks""
B = ""Learning from Geeks for Geeks""
print(UncommonWords(A, B))"
1585,write a Python program to demonstrate working of Replace duplicate Occurrence in String,"test_str = 'Gfg is best . Gfg also has Classes now. Classes help understand better . '
print(""The original string is : "" + test_str) 
repl_dict = {'Gfg' : 'It', 'Classes' : 'They' } 
test_list = test_str.split(' ') 
res = ' '.join([repl_dict.get(val) if val in repl_dict.keys() and test_list.index(val) != idx 
                                else val for idx, val in enumerate(test_list)]) 
print(""The string after replacing : "" + res)"
1586,write a Python Function to rotate string left and right by d length,"def rotate(input,d): 
    Lfirst = input[0 : d] 
    Lsecond = input[d :] 
    Rfirst = input[0 : len(input)-d] 
    Rsecond = input[len(input)-d : ] 
    print (""Left Rotation : "", (Lsecond + Lfirst) ) 
    print (""Right Rotation : "", (Rsecond + Rfirst)) 
input = 'GeeksforGeeks'
d=4
rotate(input,d)"
1587,write a Python program to demonstrate working of Swap Binary substring,"test_str = ""geeksforgeeks""
print(""The original string is : "" + test_str) 
temp = str.maketrans(""geek"", ""abcd"") 
test_str = test_str.translate(temp) 
print(""The string after swap : "" + test_str)"
1588,write a Python program to demonstrate working of Extract Unique values dictionary values,"test_dict = {'gfg' : [5, 6, 7, 8], 
            'is' : [10, 11, 7, 5], 
            'best' : [6, 12, 10, 8], 
            'for' : [1, 2, 5]} 
print(f""The original dictionary is : {test_dict}"")
res = sorted({ele for val in test_dict.values() for ele in val})
print(f""The unique values list is : {res}"")"
1589,write a Python function to find sum of all items in a Dictionary,"def returnSum(dict): 
    sum = 0
    for i in dict.values(): 
        sum = sum + i 
    return sum
dict = {'a': 100, 'b':200, 'c':300} 
print(""Sum :"", returnSum(dict))"
1590,write a Python program to demonstrate removal of dictionary pair,"test_dict = {""Arushi"" : 22, ""Anuradha"" : 21, ""Mani"" : 21, ""Haritha"" : 21} 
print (f""The dictionary before performing remove is : {test_dict}"") 
del test_dict['Mani'] 
print (f""The dictionary after remove is : {test_dict}"")"
1591,write a Python program for Handling missing keys in dictionaries,"country_code = {'India' : '0091', 
                'Australia' : '0025', 
                'Nepal' : '00977'} 
print(country_code.get('India', 'Not Found')) 
print(country_code.get('Japan', 'Not Found'))"
1592,write a Python Recursive function to solve the tower of hanoi,"def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print(""Move disk 1 from source"",source,""to destination"",destination)
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print(""Move disk"",n,""from source"",source,""to destination"",destination)
    TowerOfHanoi(n-1, auxiliary, destination, source) 
n = 4
TowerOfHanoi(n,'A','B','C')"
1593,write a Python program to find the minute at which the minute hand and hour hand coincide,"def find_time(h1): 
    theta = 30 * h1 
    print(""("", end = """") 
    print((theta * 2),""/ 11) minutes"") 
h1 = 3
find_time(h1)"
1594,write a Python function to convert Fraction to Mixed Number,"def reduce_frac(n, d):
    for i in range(min(n, d), 0, -1):
        if not n%i and not d%i:
            return '{}/{}'.format(n//i, d//i)
def mixed_number(frac):
    n, d = map(int, frac.lstrip('-').split('/'))
    sign = '-' if frac.startswith('-') else ''
    if not n%d:
        return sign + str(n//d)
    n, r = divmod(n, d)
    return sign + '{} {}'.format(n, reduce_frac(r, d)).lstrip('0 ')
print(mixed_number(""5/4""))"
1595,write a Python function to print First n Digits of Pi,"def pi(n):
  i = 1
  p = x = 3 * 10 ** (n + 10)
  while x:
    x = x * i // ((i + 1) * 4)
    i += 2
    p += x // i
  return '3.' + f""{p // 10 ** 10}""[1:]
print(pi(7))"
1596,write a Python function to Non-Repeating Integers,"def non_repeats(radix):
    count = 0
    for num_digits in range(1, radix + 1):
        product = radix - 1
        for i in range(1, num_digits):
            product *= (radix - i)
        count += product
    return count
print(non_repeats(6))"
1597,write a Python function that returns the determinant of a given square matrix,"def determinant(A):
    if len(A) == 1:
        return A[0][0]
    elif len(A) == 2:
        return A[0][0]*A[1][1] - A[0][1]*A[1][0]
    else:
        s = 0
        for i in range(len(A)):
            B = [[A[row][col] for col in range(1,len(A))] for row in range(len(A)) if row!=i ]
            s += ((-1)**i)*A[i][0]*determinant(B)
        return s
print(determinant([[3, 0], [2, 2]]))"
1598,write a Python function that finds a root of a polynomial curve using the Newton-Raphson method.,"def newton_raphson(c, x=0):
    for _ in range(20):
        polynomial = c[0]*x**3 + c[1]*x**2 + c[2]*x + c[3]
        derivative = 3*c[0]*x**2 + 2*c[1]*x + c[2]
        x -= polynomial/derivative
    return round(x, 3)
print(newton_raphson([-0.1, 0.4, 0.1, -0.8]))"
1599,write a Python function to find area of an Ellipse.,"def findArea(a, b): 
    Area = 3.142 * a * b ; 
    print(""Area:"", round(Area, 2)); 
a = 5; 
b = 4; 
findArea(a, b)"
1600,write a Python function to find the area of the triangle inscribed within the rectangle which in turn is inscribed in an ellipse,"def area(a, b): 
    if (a < 0 or b < 0): 
        return -1
    A = a * b 
    return A 
a = 5
b = 2
print(area(a, b))"
1601,write a Python function To Calculate Volume OF Cylinder,"pi = 22/7
def volume(r, h): 
    vol = pi * r * r * h 
    return vol 
r = 5
h = 8
print(""Volume Of Cylinder = "",volume(r, h))"
1602,write a Python function To Calculate Total Surface Area of Cylinder,"def totalsurfacearea(r, h): 
    tsurf_ar = (2 * pi * r * h) + (2 * pi * r * r) 
    return tsurf_ar 
r = 5
h = 8
print(""Total Surface Area Of Cylinder = "",totalsurfacearea(r,h))"
1603,write a Python function to Calculate Curved Surface Area of Cylinder,"def curvedsurfacearea(r, h): 
    cursurf_ar = (2 * pi * r * h) 
    return cursurf_ar 
r = 5
h = 8
print(""Curved Surface Area Of Cylinder = "",curvedsurfacearea(r,h))"
1604,write a Python function to find the Area of Icosahedron,"def findArea(a): 
    area = 5 * 3 ** 0.5 * a * a 
    return area 
a = 5
print(""Area: "" , findArea(a))"
1605,write a Python function to find the volume of Icosahedron,"def findVolume(a): 
    volume = ((5 / 12) * 
              (3 + 5 ** 0.5) * 
               a * a * a) 
    return volume 
a = 5
print(""Volume: "" , findVolume(a))"
1606,write a Python function to find surface area of the Pentagonal Prism,"def surfaceArea(a, b, h): 
    return 5 * a * b + 5 * b * h 
a = 5
b = 3
h = 7
print(""surface area ="", surfaceArea(a, b, h))"
1607,write a Python function to find volume of the Pentagonal Prism,"def volume(b, h): 
    return (5 * b * h) / 2
a = 5
b = 3
h = 7
print(""volume ="", volume(b, h))"
1608,write a Python function to return the volume of the rectangular right wedge,"def volumeRec(a, b, e, h) : 
    return (((b * h) / 6) * (2 * a + e))
a = 2; b = 5; e = 5; h = 6; 
print(""Volume = "",volumeRec(a, b, e, h))"
1609,write a Python program to calculate volume of Torus,"r = 3
R = 7
pi = 3.14159
Volume = (float)(2 * pi * pi * R * r * r)
print(""Volume: "", Volume)"
1610,write a Python program to calculate surface area of Torus,"r = 3
R = 7
Surface = (float)(4 * pi * pi * R * r)
print(""Surface: "", Surface)"
1611,write a Python program to demonstrate to convert list of string to list of list,"test_list = [ '[1, 4, 5]', '[4, 6, 8]' ] 
print (f""The original list is : {test_list}"") 
res = [i.strip(""[]"").split("", "") for i in test_list] 
print (f""The list after conversion is : {res}"")"
1612,write a Python program to demonstrate working of Convert String to tuple list,"test_str = ""(1, 3, 4), (5, 6, 4), (1, 3, 6)""
print(""The original string is : "" + test_str) 
res = [] 
temp = [] 
for token in test_str.split("", ""): 
    num = int(token.replace(""("", """").replace("")"", """")) 
    temp.append(num) 
    if "")"" in token: 
        res.append(tuple(temp)) 
        temp = [] 
print(f""List after conversion from string : {res}"")"
1613,write a Python program to demonstrate working of Convert List to Single valued Lists in Tuple,"test_list = [6, 8, 4, 9, 10, 2] 
print(f""The original list is : {test_list}"") 
res = tuple([ele] for ele in test_list)  
print(f""Tuple after conversion : {res}"")"
1614,write Python program to find key with Maximum value in Dictionary,"Tv = {'BreakingBad':100, 'GameOfThrones':1292, 'TMKUC' : 88} 
Keymax = max(Tv, key=Tv.get) 
print(Keymax)"
1615,write Python program to demonstrate working of Get next key in Dictionary,"test_dict = {'gfg' : 1, 'is' : 2, 'best' : 3} 
print(f""The original dictionary is : {test_dict}"") 
test_key = 'is'
temp = list(test_dict)
try: 
    res = temp[temp.index(test_key) + 1] 
except (ValueError, IndexError): 
    res = None
print(f""The next key is : {res}"")"
1616,write Python program to demonstrate check if list are identical,"test_list1 = [1, 2, 4, 3, 5] 
test_list2 = [1, 2, 4, 3, 5] 
print (""The first list is : "" + str(test_list1)) 
print (""The second list is : "" + str(test_list2)) 
test_list1.sort() 
test_list2.sort() 
if test_list1 == test_list2: 
    print (""The lists are identical"") 
else : 
    print (""The lists are not identical"")"
1617,write Python program to find Mathematical Median of Cumulative Records,"test_list = [(1, 4, 5), (7, 8), (2, 4, 10)] 
print(""The original list : "" + str(test_list)) 
res = [] 
for sub in test_list : 
    for ele in sub : 
        res.append(ele) 
res.sort() 
mid = len(res) // 2
res = (res[mid] + res[~mid]) / 2
print(""Median of Records is : "" + str(res))"
1618,write Python program to demonstrate working of Cummulative Records Product,"def prod(val) : 
    res = 1
    for ele in val: 
        res *= ele 
    return res 
test_list = [(2, 4), (6, 7), (5, 1), (6, 10), (8, 7)] 
print(""The original list : "" + str(test_list)) 
res = prod(int(j) for i in test_list for j in i) 
print(""The Cummulative product of list is : "" + str(res))"
1619,Calculate difference in days between two dates,"def days_between(d1, d2):
    from datetime import datetime as dt
    f_date = dt.strptime(d1, ""%d/%m/%Y"").date()
    l_date = dt.strptime(d2, ""%d/%m/%Y"").date()
    delta = l_date - f_date
    print(delta.days)"
1620,Program to find the number if it is within 100 of 1000 or 2000,"def near_thousand(n):
    return (abs(1000 - n) <= 100) or (abs(2000 - n) <= 100)
print(near_thousand(1000))
print(near_thousand(900))
print(near_thousand(800))
print(near_thousand(2200))"
1621,"Calculate the sum of three given numbers, if the values are equal then return thrice of their sum","def sum_thrice(x, y, z):
    sum1 = x + y + z
    if x == y == z:
        sum1 = sum1 * 3
    return sum1
print(sum_thrice(1, 2, 3))
print(sum_thrice(3, 3, 3))"
1622,Python program to get a string which is n (non-negative integer) copies of a given string.,"def larger_string(string1, n):
    result = """"
    for i in range(n):
        result = result + string1
    return result
print(larger_string('abc', 2))
print(larger_string('.py', 3))"
1623,"Python program to find whether a given number (accept from the user) is even or odd, print out an appropriate
 message to the user.","def check_number(num):
    mod = num % 2
    if mod > 0:
        return ""This is an odd number.""
    else:
        return ""This is an even number.""
print(check_number(5))"
1624,"Given an integer, , and  space-separated integers as input, create a tuple, , of those  integers. Then compute and
 print the result of .","def hashing(num):
    T = tuple([int(i) for i in num.split()])
    return hash(T)
print(hashing(23456))"
1625,"You are given a string. Split the string on a "" "" (space) delimiter and join using a - hyphen.","def word_join(s):
    words = s.split(' ')
    return '-'.join(words)
print(word_join(""This is 17B Assignment""))"
1626,Python program to compute the greatest common divisor (GCD) of two positive integers.,"def gcd(x, y):
    gcd1 = 1
    if x % y == 0:
        return y
    for k in range(int(y / 2), 0, -1):
        if x % k == 0 and y % k == 0:
            gcd1 = k
            break
    return gcd1
print(gcd(12, 17))
print(gcd(4, 6))"
1627,Python program to calculate area of a circle,"def area(a):
    from math import pi
    r = float(input(""Input the radius of the circle : ""))
    return ""The area of the circle with radius "" + str(r) + "" is: "" + str(pi * a ** 2)
print(area(5))"
1628,Python program that accepts an integer (n) and computes the value of n+nn+nnn.,"def custom(n):
    a = n
    n1 = int(""%s"" % a)
    n2 = int(""%s%s"" % (a, a))
    n3 = int(""%s%s%s"" % (a, a, a))
    return n1 + n2 + n3
print(custom(20))"
1629,Python program to count number 4 in the given list,"def list_count_4(nums):
    count = 0
    for num in nums:
        if num == 4:
            count = count + 1
    return count
print(list_count_4([1, 4, 6, 7, 4]))
print(list_count_4([1, 4, 6, 4, 7, 4]))"
1630,"Python program to get the n (non-negative integer) copies of the first 2 characters of a given string. Return the n
 copies of the whole string if the length is less than 2.","def substring_copy(str, n):
    flen = 2
    if flen > len(str):
        flen = len(str)
    substr = str[:flen]
    result = """"
    for i in range(n):
        result = result + substr
    return result
print(substring_copy('abcdef', 2))
print(substring_copy('p', 3))"
1631,Python program to test whether passed letter is vowel or not,"def is_vowel(char):
    all_vowels = 'aeiou'
    return char in all_vowels
print(is_vowel('c'))
print(is_vowel('e'))"
1632,Python program to create histogram from given list,"def histogram(items):
    for n in items:
        output = ''
        times = n
        while times > 0:
            output += '*'
            times = times - 1
        print(output)
histogram([2, 3, 6, 5])"
1633,"Python program to print out all even numbers from a given numbers list in the same order and stop the printing if
 any numbers that come after 237 in the sequence.","numbers = [
    386, 462, 47, 418, 907, 344, 236, 375, 823, 566, 597, 978, 328, 615, 953, 345,
    399, 162, 758, 219, 918, 237, 412, 566, 826, 248, 866, 950, 626, 949, 687, 217,
    815, 67, 104, 58, 512, 24, 892, 894, 767, 553, 81, 379, 843, 831, 445, 742, 717,
    958, 743, 527
]
for x in numbers:
    if x == 237:
        print(x)
        break;
    elif x % 2 == 0:
        print(x)"
1634,Python program to add two objects if both objects are of type integer,"def add_numbers(a, b):
    if not (isinstance(a, int) and isinstance(b, int)):
        raise TypeError(""Inputs must be integers"")
    return a + b
print(add_numbers(10, 20))"
1635,Python program to compute distance between two points,"def points(x1, x2):
    import math
    p1 = list(x1)
    p2 = list(x2)
    distance = math.sqrt(((p1[0] - p2[0]) ** 2) + ((p1[1] - p2[1]) ** 2))
    print(distance)
points((2, 3), (4, 5))"
1636,Python program to print sum of digits of a 4 digit number,"def sumofdigits(num):
    x = num // 1000
    x1 = (num - x * 1000) // 100
    x2 = (num - x * 1000 - x1 * 100) // 10
    x3 = num - x * 1000 - x1 * 100 - x2 * 10
    print(""The sum of digits in the number is"", x + x1 + x2 + x3)
sumofdigits(3456)"
1637,python program to multiply all the numbers in given list,"def multiply(numbers):
    total = 1
    for x in numbers:
        total *= x
    return total
print(multiply((8, 2, 3, -1, 7)))"
1638,Python program to reverse the string,"def string_reverse(str1):
    rstr1 = ''
    index = len(str1)
    while index > 0:
        rstr1 += str1[index - 1]
        index = index - 1
    return rstr1
print(string_reverse('1234abcd'))"
1639,Python program to calculate the factorial of a number,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)
n = 45
print(factorial(n))"
1640,Python program to accept string and calculate number of upper and lower case string,"def string_test(s):
    d = {""UPPER_CASE"": 0, ""LOWER_CASE"": 0}
    for c in s:
        if c.isupper():
            d[""UPPER_CASE""] += 1
        elif c.islower():
            d[""LOWER_CASE""] += 1
        else:
            pass
    print(""Original String : "", s)
    print(""No. of Upper case characters : "", d[""UPPER_CASE""])
    print(""No. of Lower case Characters : "", d[""LOWER_CASE""])
string_test('The quick Brown Fox')"
1641,python program to return unique element from a list,"def unique_list(l):
    x1 = []
    for a in l:
        if a not in x1:
            x1.append(a)
    return x1
print(unique_list([1, 2, 3, 3, 3, 3, 4, 5]))"
1642,Python program to check for palindrom,"def isPalindrome(string):
    left_pos = 0
    right_pos = len(string) - 1
    while right_pos >= left_pos:
        if not string[left_pos] == string[right_pos]:
            return False
        left_pos += 1
        right_pos -= 1
    return True
print(isPalindrome('aza'))"
1643,"Python program to make a chain of function decorators (bold, italic, underline etc.","def make_bold(fn):
    def wrapped():
        return ""<b>"" + fn() + ""</b>""
    return wrapped
def make_italic(fn):
    def wrapped():
        return ""<i>"" + fn() + ""</i>""
    return wrapped
def make_underline(fn):
    def wrapped():
        return ""<u>"" + fn() + ""</u>""
    return wrapped
@make_bold
@make_italic
@make_underline
def hello():
    return ""hello world""
print(hello())"
1644,Python program to execute a string containing Python code.,"mycode = 'print(""hello world"")'
code = """"""
def multiply(x,y):
    return x*y
print('Multiply of 2 and 3 is: ',multiply(2,3))
""""""
exec(mycode)
exec(code)"
1645,Python program to access function iside function,"def test(a):
    def add(b):
        nonlocal a
        a += 1
        return a + b
    return add
func = test(4)
print(func(4))"
1646,python program to detect number of local variables defined in a program,"def abc():
    x = 1
    y = 2
    str1 = ""w3resource""
    print(""Python Exercises"")
print(abc.__code__.co_nlocals)"
1647,python program to add three list,"def add_list(num1, num2, num3):
    result = map(lambda x, y, z: x + y + z, num1, num2, num3)
    print(""\nNew list after adding above three lists:"")
    print(list(result))
nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
nums3 = [7, 8, 9]
add_list(nums1, nums2, nums3)"
1648,"Python program to create a list containing the power of said number in bases raised to the corresponding number in
 the index using Python map","bases_num = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
def power_base(num1, index1):
    print(""Base numbers abd index: "")
    print(bases_num)
    print(index)
    result = list(map(pow, num1, index1))
    print(""\nPower of said number in bases raised to the corresponding number in the index:"")
    print(result)
power_base(bases_num, index)"
1649,Python function to find a distinct pair of numbers whose product is odd from a sequence of integer values.,"def odd_product(nums):
    for i in range(len(nums)):
        for j in range(len(nums)):
            if i != j:
                product = nums[i] * nums[j]
                if product & 1:
                    return True
                    return False
dt1 = [2, 4, 6, 8]
dt2 = [1, 6, 4, 7, 8]
print(dt1, odd_product(dt1))
print(dt2, odd_product(dt2))"
1650,"Python function that takes a positive integer and returns the sum of the cube of all the positive integers smaller
 than the specified number.","def sum_of_cubes(n):
    n -= 1
    total = 0
    while n > 0:
        total += n * n * n
        n -= 1
    return total
print(""Sum of cubes: "", sum_of_cubes(3))"
1651,Python function to check whether a number is divisible by another number,"def multiple(m, n):
    return True if m % n == 0 else False
print(multiple(20, 5))
print(multiple(7, 2))"
1652,Python program to validate a Gregorian date,"def check_date(m, d, y):
    import datetime
    try:
        m, d, y = map(int, (m, d, y))
        datetime.date(y, m, d)
        return True
    except ValueError:
        return False
print(check_date(11, 11, 2002))
print(check_date('11', '11', '2002'))
print(check_date(13, 11, 2002))"
1653,Python program to create all possible permutations from a given collection of distinct numbers.,"def permute(nums):
    result_perms = [[]]
    for n in nums:
        new_perms = []
        for perm in result_perms:
            for i in range(len(perm) + 1):
                new_perms.append(perm[:i] + [n] + perm[i:])
                result_perms = new_perms
    return result_perms
my_nums = [1, 2, 3]
print(""Original Collection: "", my_nums)
print(""Collection of distinct numbers:\n"", permute(my_nums))"
1654,Python program to find the digits which are absent in a given mobile number.,"def absent_digits(n):
    all_nums = set([0, 1, 2, 3, 4, 5, 6, 7, 8, 9])
    n = set([int(i) for i in n])
    n = n.symmetric_difference(all_nums)
    n = sorted(n)
    return n
print(absent_digits([9, 8, 3, 2, 2, 0, 9, 7, 6, 3]))"
1655,Write a python function to generate random number between 2 integers,"def random_number(a, b):
    import random
    return random.randint(a, b)"
1656,"Write a function to get n elements of the fibonacci series
             update values","def fibonacci(n):
    n1, n2 = 0, 1
    count = 0
    if n <= 0:
        print('Please enter a positive integer')
    elif n == 1:
        print(""Fibonacci sequence:"")
        print(n1)
    else:
        print(""Fibonacci sequence:"")
        while count < n:
            print(n1)
            nth = n1 + n2
            n1, n2 = n2, nth
            count += 1"
1657,Write a function to get nth element of the fibonacci series,"def fibonacci_nth(n):
    a = 0
    b = 1
    if n <= 0: 
        print(""Incorrect input"")
    elif n==1: 
        return a
    elif n==1: 
        return 1
    else: 
        for i in range(2, n):
            c = a + b
            a, b = b, c
        return b"
1658,Write a function to count the number of digits in a number,"def count_digits(n):
    return len(str(n))"
1659,Write a function to return the nth prime number,"def nth_prime_number(n):
    prime_list = [2]
    num = 3
    while len(prime_list) < n:
        for p in prime_list:
            if num % p == 0:
                break
        else:
            prime_list.append(num)
            num += 2
    return prime_list[-1]"
1660,1. write a python program to add two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 + num2
print(f'Sum: {sum}')"
1661,2. write a python program to subtract two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 - num2
print(f'Sub: {sum}')"
1662,3. write a python Program to calculate the square root,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
1663,4. write a python function to add two user provided numbers and return the sum,"def add_two_numbers(num1, num2):
    sum = num1 + num2
    return sum"
1664,5. write a program to find and print the largest among three numbers,"num1 = 10
num2 = 12
num3 = 14
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(f'largest:{largest}')"
1665,"6. Write a python program to swap two variables, Using a temporary variable","x = 5
y = 10
temp = x
x = y
y = temp
print('The value of x after swapping: {}'.format(x))
print('The value of y after swapping: {}'.format(y))"
1666,"7. Write a python program to swap two variables, Without Using Temporary Variable","x = 5
y = 10
x, y = y, x
print(""x ="", x)
print(""y ="", y)"
1667,8. Python Program to Convert Kilometers to Miles,"kilometers = 5.0
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
1668,9. Python Program to Convert Celsius To Fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
1669,"10. Python Program to Check if a Number is Positive, Negative or 0
 11. Python Program to Check if a Number is Odd or Even","num = float(input(""Enter a number: ""))
if num > 0:
   print(""Positive number"")
elif num == 0:
   print(""Zero"")
else:
   print(""Negative number"")
 num = int(input(""Enter a number: ""))
if (num % 2) == 0:
   print(""{0} is Even"".format(num))
else:
   print(""{0} is Odd"".format(num))"
1670,12. Python Program to Check Leap Year,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(""{0} is a leap year"".format(year))
       else:
           print(""{0} is not a leap year"".format(year))
   else:
       print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
1671,13. Python Program to Find the Largest Among Three Numbers,"num1 = 10
num2 = 14
num3 = 12
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(""The largest number is"", largest)"
1672,"14.Write a Python Program to check if a number is prime or not
    check for factors","num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
1673,"15.Python program to display all the prime numbers within an interval
    all prime numbers are greater than 1","lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
1674,16. Python program to find the factorial of a number.,"num = 7
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
1675,17. Python Program to Display the multiplication Table,"num = 12
for i in range(1, 11):
   print(num, 'x', i, '=', num*i)"
1676,18. Python Program to Print the Fibonacci sequence,"nterms = int(input(""How many terms? ""))"
1677,first two terms,"n1, n2 = 0, 1
count = 0"
1678,"check if the number of terms is valid
        update values
19. Python Program to Check Armstrong Number (for 3 digits)","if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
num = int(input(""Enter a number: ""))"
1679,initialize sum,sum = 0
1680,find the sum of the cube of each digit,"temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10"
1681,display the result,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
1682,20. Python Program to Check Armstrong Number (for 3 digits),num = 1634
1683,"Changed num variable to string, 
 and calculated the length (number of digits)",order = len(str(num))
1684,initialize sum,sum = 0
1685,find the sum of the cube of each digit,"temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** order
   temp //= 10"
1686,display the result,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
1687,"21. Python Program to Find Armstrong Number in an Interval
    order of number
    initialize sum
22.  Python Program to Find the Sum of Natural Numbers
    use while loop to iterate until zero","lower = 100
upper = 2000
for num in range(lower, upper + 1):
   order = len(str(num))
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** order
       temp //= 10
   if num == sum:
       print(num)
num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
1688,"23. Python Program To Display Powers of 2 Using Anonymous Function
 Display the powers of 2 using anonymous function",terms = 10
1689,"Uncomment code below to take input from the user
 terms = int(input(""How many terms? ""))
 use anonymous function","result = list(map(lambda x: 2 ** x, range(terms)))
print(""The total terms are:"",terms)
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
1690,"24. Python Program to Find Numbers Divisible by Another Number
 Take a list of numbers","my_list = [12, 65, 54, 39, 102, 339, 221,]"
1691,use anonymous function to filter,"result = list(filter(lambda x: (x % 13 == 0), my_list))"
1692,display the result,"print(""Numbers divisible by 13 are"",result)"
1693,25. Python Program to Convert Decimal to Binary,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(bin(dec), ""in binary."")"
1694,26. Python Program to Convert Decimal to Octal,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(oct(dec), ""in octal."")"
1695,27. Python Program to Convert Decimal to Hexadecimal,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(hex(dec), ""in hexadecimal."")"
1696,28. Python Program to Find ASCII Value of Character,"c = 'p'
print(""The ASCII value of '"" + c + ""' is"", ord(c))"
1697,29. Python Program to Find HCF or GCD,"def compute_hcf(x, y):"
1698,choose the smaller number,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
1699,30. Write a python function to find HCf or GCD and return the value,"def compute_hcf(x, y):"
1700,choose the smaller number,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf"
1701,31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
1702,32. Write a python program to find HCf or GCD using euclidian Algorithm,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
1703,"33. Python Program to Find LCM
    choose the greater number","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
num1 = 54
num2 = 24
print(""The L.C.M. is"", compute_lcm(num1, num2))"
1704,"34. write a Python function to Find LCM and returb the value
    choose the greater number","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
1705,"35. Python Program to Compute LCM Using GCD
 This function computes GCD","def compute_gcd(x, y):
   while(y):
       x, y = y, x % y
   return x"
1706,This function computes LCM,"def compute_lcm(x, y):
   lcm = (x*y)//compute_gcd(x,y)
   return lcm
num1 = 54
num2 = 24 
print(""The L.C.M. is"", compute_lcm(num1, num2))"
1707,36. Python funcction to Find the Factors of a Number,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
1708,"37. Python Program to Make a Simple Calculator
 This function adds two numbers","def add(x, y):
    return x + y"
1709,This function subtracts two numbers,"def subtract(x, y):
    return x - y"
1710,This function multiplies two numbers,"def multiply(x, y):
    return x * y"
1711,37. Python Program to Display Fibonacci Sequence Using Recursion,"def recur_fibo(n):
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))
nterms = 10"
1712,check if the number of terms is valid,"if nterms <= 0:
   print(""Plese enter a positive integer"")
else:
   print(""Fibonacci sequence:"")
   for i in range(nterms):
       print(recur_fibo(i))"
1713,38. Python Program to Find Sum of Natural Numbers Using Recursion,"def recur_sum(n):
   if n <= 1:
       return n
   else:
       return n + recur_sum(n-1)"
1714,change this value for a different result,"num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   print(""The sum is"",recur_sum(num))"
1715,39. Python Program to Find Factorial of Number Using Recursion,"def recur_factorial(n):
   if n == 1:
       return n
   else:
       return n*recur_factorial(n-1)
num = 7"
1716,check if the number is negative,"if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   print(""The factorial of"", num, ""is"", recur_factorial(num))"
1717,40. Python Program to Add Two Matrices,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]"
1718,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
1719,41. Python Program to Add Two Matrices using Nested List Comprehension,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]
for r in result:
   print(r)"
1720,42. Python Program to Transpose a Matrix using Nested Loop,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]"
1721,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
1722,43. Python Program to Transpose a Matrix using Nested List Comprehension,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]
for r in result:
   print(r)"
1723,"44. Python Program to Multiply Two Matrices using Nested Loop
 3x4 matrix
 result is 3x4","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
1724,"iterate through rows of X
    iterate through columns of Y
        iterate through rows of Y","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
1725,44. Python Program to Multiply Two Matrices using Nested List Comprehension,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]"
1726,3x4 matrix,"Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]"
1727,result is 3x4,"result = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]
for r in result:
   print(r)"
1728,45. Python Program to Check Whether a String is Palindrome or Not,my_str = 'aIbohPhoBiA'
1729,make it suitable for caseless comparison,my_str = my_str.casefold()
1730,reverse the string,rev_str = reversed(my_str)
1731,check if the string is equal to its reverse,"if list(my_str) == list(rev_str):
   print(""The string is a palindrome."")
else:
   print(""The string is not a palindrome."")"
1732,46. Python Program to Remove Punctuations From a String,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went."""
1733,"To take input from the user
 my_str = input(""Enter a string: "")
 remove punctuation from the string","no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char"
1734,display the unpunctuated string,print(no_punct)
1735,47. Python Program to Sort Words in Alphabetic Order,"my_str = ""Hello this Is an Example With cased letters"""
1736,"To take input from the user
my_str = input(""Enter a string: "")
 breakdown the string into a list of words",words = [word.lower() for word in my_str.split()]
1737,sort the list,words.sort()
1738,display the sorted words,"print(""The sorted words are:"")
for word in words:
   print(word)"
1739,"48. Python Program to Illustrate Different Set Operations
 define three sets","E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};"
1740,set union,"print(""Union of E and N is"",E | N)"
1741,set intersection,"print(""Intersection of E and N is"",E & N)"
1742,set difference,"print(""Difference of E and N is"",E - N)"
1743,set symmetric difference,"print(""Symmetric difference of E and N is"",E ^ N)"
1744,49. Python Program to Count the Number of Each Vowel,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'"
1745,make it suitable for caseless comparisions,ip_str = ip_str.casefold()
1746,make a dictionary with each vowel a key and value 0,"count = {}.fromkeys(vowels,0)"
1747,count the vowels,"for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
1748,50. Python Program to Count the Number of Each Vowel Using a list and a dictionary comprehension,"ip_str = 'Hello, have you tried our tutorial section yet?'"
1749,make it suitable for caseless comparisions,ip_str = ip_str.casefold()
1750,count the vowels,"count = {x:sum([1 for char in ip_str if char == x]) for x in 'aeiou'}
print(count)"
1751,"Write a python function to derive slope given 2 points (x1,y1) and (x2, y2)","def get_slope(x1,y1, x2,y2):
    if (x1 == x2 ):
        return ValueError
    return -((y2-y1)/(x2-x1))"
1752,"Write a python function to rotate a point (x,y) around a given origix (ox,oy) by an angle","def rotate(origin, point, angle):
    ox, oy = origin
    px, py = point
    radian_angle = math.radians(angle)
    qx = ox + math.cos(radian_angle) * (px - ox) - math.sin(radian_angle) * (py - oy)
    qy = oy + math.sin(radian_angle) * (px - ox) + math.cos(radian_angle) * (py - oy)
    return qx, qy"
1753,Write a python function to copy the sign bit from one variable to another,"def copysign(dst, src) :
    return math.copysign(dst, src)"
1754,Write a python function Split a given file path into filename and parent directory,"def split_filename(input_file_name):
    if( isinstance(input_file_name,str) ==False ):
        raise TypeError
    tokens = input_file_name.split(""/"")
    return ""/"".join(tokens[:-1]),tokens[-1]"
1755,Write a python function to join directory names to create a path,"def join_filename(base_dir, *args):
    file_path_args = [base_dir ,*args]
    for file_name in file_path_args:
        if( isinstance(file_name,str) ==False ):
            raise TypeError
    return ""/"".join(file_path_args)"
1756,Write a python function to find linear interpolation between two points x and y given a variable t,"def linear_interpolate(x, y, t ):
    if( t >=1 or t <= 0):
        raise ValueError
    return t*x + (1-t)*y"
1757,Write a python function to raise error when an input is not a string type,"def check_string(new_str):
    return isinstance(new_str,str)"
1758,Write a python function to extract only alphabets from a given string and also exclude spaces,"def extract_alpha(my_string):
    return """".join([ c for c in my_string if c.isalpha()])"
1759,Write a python function to extract only alphabets from a given string and also include spaces,"def extract_alpha(my_string):
    return """".join([ c for c in my_string if (c.isalpha() or c.isspace())])"
1760,"Write a python function to remove all non-alphabets except space from a given string using re library
    result = re.findall(r'[^a-zA-Z]+',my_string)
    return """".join(result)","import re
def extract_not_alpha(my_string):
    return re.sub('[^a-zA-Z\s]+', """", my_string)"
1761,Write a python function to remove all digits and underscores from a Unicode strings,"import re
def extract_unicode(my_string):
    regex = re.compile(r'[^\W\d_]+', re.UNICODE)    
    return regex.findall(my_string)"
1762,Write a python function to find all email-id patterns in a given string and write to a user input file,"import re
def extract_mailid(my_string, outfile):
    regex = re.compile(r'[\w]+@[\w]+\.[\w]+', re.UNICODE)    
    mailids = regex.findall(my_string)
    if(len(mailids) > 0):
        with open(outfile, 'w') as mailfile:
            for mailid in mailids:
                mailfile.write(mailid+""\n"")
        mailfile.close()"
1763,"Write a python function to generate a random hexadecimal key of length n
    limit string to 64 characters","import random
def rand_run_name(n):
    ran = random.randrange(10**80)
    myhex = ""%064x"" % ran
    myhex = myhex[:n]
    return myhex"
1764,"Write a python function to create an argument parser that takes inputs as program name and description of program and filename as inputs for variable length of args
    args = parser.parse_args()","import argparse
def create_parser(prog_name, prog_description, arg_name):
    parser = argparse.ArgumentParser(prog = prog_name, description = prog_description)
    parser.add_argument(arg_name, nargs='+')
    return parser"
1765,Write a python function check if a given directory exists and has any files,"import os
def check_dir_files(src_dir_path):
    if(os.path.exists(src_dir_path) == False):
        print(""Destination Path doesn't exist"")
        return False
    files_in_dir = glob.glob(src_dir_path+""/*.*"")
    if (len(files_in_dir) <= 0):
        print(""No files present in:"",src_dir_path)
        return False
    print(""The directory "", src_dir_path, "" has "",len(files_in_dir), "" files."")
    return True"
1766,Write a python function to return the content of a directory sorted by last modified date,"import glob
import os
import datetime
def retrieve_files_sort_bydate(src_dir_path):
    if(os.path.exists(src_dir_path) == False):
        print(""Destination Path doesn't exist"")
        return
    files_in_dir = glob.glob(src_dir_path+""/*.*"")
    if (len(files_in_dir) <= 0):
        print(""No files present in:"",src_dir_path)
        return
    files_in_dir.sort(key=os.path.getmtime)    
    return files_in_dir"
1767,"Write a python function to print the size of all the files in a directory only at topmost level
        (mode, ino, dev, nlink, uid, gid, size, atime, mtime, ctime) = os.stat(file)","import os
def get_filesize_for_dir(src_dir_path):
    if(os.path.exists(src_dir_path) == False):
        print(""Destination Path doesn't exist"")
        return
    files_in_dir = glob.glob(src_dir_path+""/*.*"")
    if (len(files_in_dir) <= 0):
        print(""No files present in:"",src_dir_path)
        return
    total_size = 0
    for filename in files_in_dir:
        total_size += os.stat(filename)[6]
    return total_size"
1768,Write a python function to read a user specified csv file and a delimiter and return the number of rows and number of columns in the first row.,"import csv
def read_csv_length(csv_file_name, delimiter_pattern):
    if(os.path.exists(csv_file_name) == False):
        print(""Destination File doesn't exist"")
        return
    with open(csv_file_name, newline='') as csvfile:
        csv_reader = csv.reader(csvfile, delimiter=delimiter_pattern)
        csv_list = list(csv_reader)
        return len(csv_list), len(csv_list[0])"
1769,Write a python function to convert a list of strings to equivalent character array using itertools,"import itertools
def extract_characters(input_list):
    return [ char_val for char_val in itertools.chain.from_iterable(input_list) ]"
1770,Write a python function to generate a random combination from user provided list and user specified length.,"import itertools
def get_random_combination(input_list, combination_length):
    if(len(input_list) < combination_length):
        print(""Requested combination length less than length of list"")
        return
    combination_list = list(itertools.combinations(input_list, combination_length))
    return random.sample(combination_list, 1)"
1771,"Write a python function to accept user defined file, user-defined loglevel and create a file-based and invoke the user-defined function with this logger.","import logging
def create_logging_level(user_func, user_filename, user_loglevel):
    logger = logging.getLogger('simple_example')
    logger.setLevel(user_loglevel)
    ch = logging.FileHandler(user_filename)
    ch.setLevel(user_loglevel)
    logger.addHandler(ch)
    if callable(user_func):
        user_func(logger)"
1772,Write a python function to simulate an exception and log the error using logger provided by the user.,"def exception_simulator(logger):
    try:
        raise ValueError
    except ValueError:
        logger.exception(""ValueError occured in the function"")"
1773,Write a python function to call a user-input function with default exception handling and re-raise the exception again.,"def default_exception_simulator(user_func):
    try:
        if callable(user_func):
            user_func()
    except:
        print(""An exception occured"")
        raise"
1774,1. write a python program to add two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 + num2
print(f'Sum: {sum}')"
1775,2. write a python program to subtract two numbers,"num1 = 1.5
num2 = 6.3
sum = num1 - num2
print(f'Sub: {sum}')"
1776,3. write a python Program to calculate the square root,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
1777,4. write a python function to add two user provided numbers and return the sum,"def add_two_numbers(num1, num2):
    sum = num1 + num2
    return sum"
1778,5. write a program to find and print the largest among three numbers,"num1 = 10
num2 = 12
num3 = 14
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(f'largest:{largest}')"
1779,"6. Write a python program to swap two variables, Using a temporary variable","x = 5
y = 10
temp = x
x = y
y = temp
print('The value of x after swapping: {}'.format(x))
print('The value of y after swapping: {}'.format(y))"
1780,"7. Write a python program to swap two variables, Without Using Temporary Variable","x = 5
y = 10
x, y = y, x
print(""x ="", x)
print(""y ="", y)"
1781,8. Python Program to Convert Kilometers to Miles,"kilometers = 5.0
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
1782,9. Python Program to Convert Celsius To Fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
1783,"10. Python Program to Check if a Number is Positive, Negative or 0
 11. Python Program to Check if a Number is Odd or Even","num = float(input(""Enter a number: ""))
if num > 0:
   print(""Positive number"")
elif num == 0:
   print(""Zero"")
else:
   print(""Negative number"")
 num = int(input(""Enter a number: ""))
if (num % 2) == 0:
   print(""{0} is Even"".format(num))
else:
   print(""{0} is Odd"".format(num))"
1784,12. Python Program to Check Leap Year,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(""{0} is a leap year"".format(year))
       else:
           print(""{0} is not a leap year"".format(year))
   else:
       print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
1785,13. Python Program to Find the Largest Among Three Numbers,"num1 = 10
num2 = 14
num3 = 12
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(""The largest number is"", largest)"
1786,"14.Write a Python Program to check if a number is prime or not
    check for factors","num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
1787,"15.Python program to display all the prime numbers within an interval
    all prime numbers are greater than 1","lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
1788,16. Python program to find the factorial of a number.,"num = 7
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
1789,17. Python Program to Display the multiplication Table,"num = 12
for i in range(1, 11):
   print(num, 'x', i, '=', num*i)"
1790,18. Python Program to Print the Fibonacci sequence,"nterms = int(input(""How many terms? ""))"
1791,first two terms,"n1, n2 = 0, 1
count = 0"
1792,"check if the number of terms is valid
        update values
19. Python Program to Check Armstrong Number (for 3 digits)","if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
num = int(input(""Enter a number: ""))"
1793,initialize sum,sum = 0
1794,find the sum of the cube of each digit,"temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10"
1795,display the result,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
1796,20. Python Program to Check Armstrong Number (for 3 digits),num = 1634
1797,"Changed num variable to string, 
 and calculated the length (number of digits)",order = len(str(num))
1798,initialize sum,sum = 0
1799,find the sum of the cube of each digit,"temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** order
   temp //= 10"
1800,display the result,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
1801,"21. Python Program to Find Armstrong Number in an Interval
    order of number
    initialize sum
22.  Python Program to Find the Sum of Natural Numbers
    use while loop to iterate until zero","lower = 100
upper = 2000
for num in range(lower, upper + 1):
   order = len(str(num))
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** order
       temp //= 10
   if num == sum:
       print(num)
num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
1802,"23. Python Program To Display Powers of 2 Using Anonymous Function
 Display the powers of 2 using anonymous function",terms = 10
1803,"Uncomment code below to take input from the user
 terms = int(input(""How many terms? ""))
 use anonymous function","result = list(map(lambda x: 2 ** x, range(terms)))
print(""The total terms are:"",terms)
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
1804,"24. Python Program to Find Numbers Divisible by Another Number
 Take a list of numbers","my_list = [12, 65, 54, 39, 102, 339, 221,]"
1805,use anonymous function to filter,"result = list(filter(lambda x: (x % 13 == 0), my_list))"
1806,display the result,"print(""Numbers divisible by 13 are"",result)"
1807,25. Python Program to Convert Decimal to Binary,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(bin(dec), ""in binary."")"
1808,26. Python Program to Convert Decimal to Octal,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(oct(dec), ""in octal."")"
1809,27. Python Program to Convert Decimal to Hexadecimal,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(hex(dec), ""in hexadecimal."")"
1810,28. Python Program to Find ASCII Value of Character,"c = 'p'
print(""The ASCII value of '"" + c + ""' is"", ord(c))"
1811,29. Python Program to Find HCF or GCD,"def compute_hcf(x, y):"
1812,choose the smaller number,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
1813,30. Write a python function to find HCf or GCD and return the value,"def compute_hcf(x, y):"
1814,choose the smaller number,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf"
1815,31. Write a python function to find HCf or GCD and return the value using euclidian Algorithm,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
1816,32. Write a python program to find HCf or GCD using euclidian Algorithm,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
1817,"33. Python Program to Find LCM
    choose the greater number","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
num1 = 54
num2 = 24
print(""The L.C.M. is"", compute_lcm(num1, num2))"
1818,"34. write a Python function to Find LCM and returb the value
    choose the greater number","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
1819,"35. Python Program to Compute LCM Using GCD
 This function computes GCD","def compute_gcd(x, y):
   while(y):
       x, y = y, x % y
   return x"
1820,This function computes LCM,"def compute_lcm(x, y):
   lcm = (x*y)//compute_gcd(x,y)
   return lcm
num1 = 54
num2 = 24 
print(""The L.C.M. is"", compute_lcm(num1, num2))"
1821,36. Python funcction to Find the Factors of a Number,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
1822,"37. Python Program to Make a Simple Calculator
 This function adds two numbers","def add(x, y):
    return x + y"
1823,This function subtracts two numbers,"def subtract(x, y):
    return x - y"
1824,This function multiplies two numbers,"def multiply(x, y):
    return x * y"
1825,37. Python Program to Display Fibonacci Sequence Using Recursion,"def recur_fibo(n):
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))
nterms = 10"
1826,check if the number of terms is valid,"if nterms <= 0:
   print(""Plese enter a positive integer"")
else:
   print(""Fibonacci sequence:"")
   for i in range(nterms):
       print(recur_fibo(i))"
1827,38. Python Program to Find Sum of Natural Numbers Using Recursion,"def recur_sum(n):
   if n <= 1:
       return n
   else:
       return n + recur_sum(n-1)"
1828,change this value for a different result,"num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   print(""The sum is"",recur_sum(num))"
1829,39. Python Program to Find Factorial of Number Using Recursion,"def recur_factorial(n):
   if n == 1:
       return n
   else:
       return n*recur_factorial(n-1)
num = 7"
1830,check if the number is negative,"if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   print(""The factorial of"", num, ""is"", recur_factorial(num))"
1831,40. Python Program to Add Two Matrices,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]"
1832,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
1833,41. Python Program to Add Two Matrices using Nested List Comprehension,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]
for r in result:
   print(r)"
1834,42. Python Program to Transpose a Matrix using Nested Loop,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]"
1835,"iterate through rows
    iterate through columns","for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
1836,43. Python Program to Transpose a Matrix using Nested List Comprehension,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]
for r in result:
   print(r)"
1837,"44. Python Program to Multiply Two Matrices using Nested Loop
 3x4 matrix
 result is 3x4","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
1838,"iterate through rows of X
    iterate through columns of Y
        iterate through rows of Y","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
1839,44. Python Program to Multiply Two Matrices using Nested List Comprehension,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]"
1840,3x4 matrix,"Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]"
1841,result is 3x4,"result = [[sum(a*b for a,b in zip(X_row,Y_col)) for Y_col in zip(*Y)] for X_row in X]
for r in result:
   print(r)"
1842,45. Python Program to Check Whether a String is Palindrome or Not,my_str = 'aIbohPhoBiA'
1843,make it suitable for caseless comparison,my_str = my_str.casefold()
1844,reverse the string,rev_str = reversed(my_str)
1845,check if the string is equal to its reverse,"if list(my_str) == list(rev_str):
   print(""The string is a palindrome."")
else:
   print(""The string is not a palindrome."")"
1846,46. Python Program to Remove Punctuations From a String,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went."""
1847,"To take input from the user
 my_str = input(""Enter a string: "")
 remove punctuation from the string","no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char"
1848,display the unpunctuated string,print(no_punct)
1849,47. Python Program to Sort Words in Alphabetic Order,"my_str = ""Hello this Is an Example With cased letters"""
1850,"To take input from the user
my_str = input(""Enter a string: "")
 breakdown the string into a list of words",words = [word.lower() for word in my_str.split()]
1851,sort the list,words.sort()
1852,display the sorted words,"print(""The sorted words are:"")
for word in words:
   print(word)"
1853,"48. Python Program to Illustrate Different Set Operations
 define three sets","E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};"
1854,set union,"print(""Union of E and N is"",E | N)"
1855,set intersection,"print(""Intersection of E and N is"",E & N)"
1856,set difference,"print(""Difference of E and N is"",E - N)"
1857,set symmetric difference,"print(""Symmetric difference of E and N is"",E ^ N)"
1858,49. Python Program to Count the Number of Each Vowel,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'"
1859,make it suitable for caseless comparisions,ip_str = ip_str.casefold()
1860,make a dictionary with each vowel a key and value 0,"count = {}.fromkeys(vowels,0)"
1861,count the vowels,"for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
1862,50. Python Program to Count the Number of Each Vowel Using a list and a dictionary comprehension,"ip_str = 'Hello, have you tried our tutorial section yet?'"
1863,make it suitable for caseless comparisions,ip_str = ip_str.casefold()
1864,count the vowels,"count = {x:sum([1 for char in ip_str if char == x]) for x in 'aeiou'}
print(count)"
1865,-*- coding: utf-8 -*-,"""""""PythonGeneration.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/10cXGL8ix2PbFMLcNlTpHdAA7GBJkQzRe
"""""""
1866,"Given an array of integers, return indices of the two numbers such that they add up to a specific target.","input_array = [2, 7, 11, 15]
target = 26
result = []
for i, num in enumerate(input_array):
    for j in range(i+1, len(input_array)):
        print(i,j)"
1867,"Given a sorted integer array without duplicates, return the summary of its ranges.","input_array = [0,1,2,4,5,7]
start=0
result = []
while start < len(input_array):
    end = start 
    while end+1<len(input_array) and ((input_array[end+1] - input_array[end]) == 1):
        end = end + 1
    if end!=start:
        result.append(""{0}-->{1}"".format(input_array[start], input_array[end]))
        print(result)
    else:
        result.append(""{0}"".format(input_array[start]))
        print(result)
    start = end+1
print(result)"
1868,Rotate an array of n elements to the right by k steps.,"org = [1,2,3,4,5,6,7]
result = org[:]
steps = 3
for idx,num in enumerate(org):
    if idx+steps < len(org):
        result[idx+steps] = org[idx]
    else:
        result[idx+steps-len(org)] = org[idx]
print(result)"
1869,"Consider an array of non-negative integers. A second array is formed by shuffling the elements of the first array and deleting a random element. Given these two arrays, find which element is missing in the second array.","first_array = [1,2,3,4,5,6,7]
second_array = [3,7,2,1,4,6]
def finder(first_array, second_array):
    return(sum(first_array) - sum(second_array))
missing_number = finder(first_array, second_array)
print(missing_number)"
1870,"Given a collection of intervals which are already sorted by start number, merge all overlapping intervals.","org_intervals = [[1,3],[2,6],[5,10],[11,16],[15,18],[19,22]]
i = 0
while i < len(org_intervals)-1:
    if org_intervals[i+1][0] < org_intervals[i][1]:
        org_intervals[i][1]=org_intervals[i+1][1]
        del org_intervals[i+1]
        i = i - 1
    i = i + 1
print(org_intervals)"
1871,Given a list slice it into a 3 equal chunks and revert each list,"sampleList = [11, 45, 8, 23, 14, 12, 78, 45, 89]
length = len(sampleList)
chunkSize  = int(length/3)
start = 0
end = chunkSize
for i in range(1, 4, 1):
  indexes = slice(start, end, 1)
  listChunk = sampleList[indexes]
  mylist = [i for i in listChunk]
  print(""After reversing it "", mylist)
  start = end
  if(i != 2):
    end +=chunkSize
  else:
    end += length - chunkSize"
1872,write a program to calculate exponents of an input,"input = 9
exponent = 2
final = pow(input, exponent)
print(f'Exponent Value is:{final}')"
1873,"write a program to multiply two Matrix 
 3x3 matrix
 3x4 matrix
 result is 3x4","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
1874,"iterate through rows of X
    iterate through columns of Y
        iterate through rows of Y","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
print(f""Final Result is{result}"")"
1875,write a program to find and print the remainder of two number,"num1 = 12
num2 = 10
ratio = num1 % num2
print(f'remainder:{ratio}')"
1876,reverse a number in Python,"number = 1367891
revs_number = 0  
while (number > 0):
  remainder = number % 10
  revs_number = (revs_number * 10) + remainder
  number = number // 10
print(""The reverse number is : {}"".format(revs_number))"
1877,Python program to compute sum of digits in number,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
1878,Find the middle element of a random number list,"my_list = [4,3,2,9,10,44,1]
print(""mid value is "",my_list[int(len(my_list)/2)])"
1879,Sort the list in ascending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort()
print(f""Ascending Order list:,{my_list}"")"
1880,Sort the list in descending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort(reverse=True)
print(f""Descending Order list:,{my_list}"")"
1881,Concatenation of two List,"my_list1 = [4,3,2,9,10,44,1]
my_list2 = [5,6,2,8,15,14,12]
print(f""Sum of two list:,{my_list1+my_list2}"")"
1882,Removes the item at the given index from the list and returns the removed item,"my_list1 = [4,3,2,9,10,44,1,9,12]
index = 4
print(f""Sum of two list:,{my_list1.pop(index)}"")"
1883,Adding Element to a List,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
1884,Returns the number of times the specified element appears in the list,"vowels = ['a', 'e', 'i', 'o', 'i', 'u']
count = vowels.count('i')
print('The count of i is:', count)"
1885,Count Tuple Elements Inside List,"random = ['a', ('a', 'b'), ('a', 'b'), [3, 4]]
count = random.count(('a', 'b'))
print(""The count of ('a', 'b') is:"", count)"
1886,Removes all items from the list,"list = [{1, 2}, ('a'), ['1.1', '2.2']]
list.clear()
print('List:', list)"
1887,access first characters in a string,"word = ""Hello World""
letter=word[0]
print(f""First Charecter in String:{letter}"")"
1888,access Last characters in a string,"word = ""Hello World""
letter=word[-1]
print(f""First Charecter in String:{letter}"")"
1889,Generate a list by list comprehension,"list = [x for x in range(10)]
print(f""List Generated by list comprehension:{list}"")"
1890,Set the values in the new list to upper case,"list = ""AMITKAYAL""
newlist = [x.upper() for x in list]
print(f""New list to upper case:{newlist}"")"
1891,Sort the string list alphabetically,"thislist = [""orange"", ""mango"", ""kiwi"", ""pineapple"", ""banana""]
thislist.sort()
print(f""Sorted List:{thislist}"")"
1892,Join Two Sets,"set1 = {""a"", ""b"" , ""c""}
set2 = {1, 2, 3}
set3 = set2.union(set1)
print(f""Joined Set:{set3}"")"
1893,keep only the items that are present in both sets,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.intersection_update(y)
print(f""Duplicate Value in Two set:{x}"")"
1894,Keep All items from List But NOT the Duplicates,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.symmetric_difference_update(y)
print(f""Duplicate Value in Two set:{x}"")"
1895,Create and print a dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Sample Dictionary:{thisdict}"")"
1896,Calculate the length of dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Length of Dictionary:{len(thisdict)}"")"
1897,Evaluate a string and a number,"print(bool(""Hello""))
print(bool(15))"
1898,Calculate length of a string,"word = ""Hello World""
print(f""Length of string: {len(word)}"")"
1899,Count the number of spaces in a sring,"s = ""Count, the number of spaces""
lenx = s.count(' ')
print(f""number of spaces in sring: {lenx}"")"
1900,Split Strings,"word = ""Hello World""
ksplit = word.split(' ') 
print(f""Splited Strings: {ksplit}"")"
1901,Prints ten dots,"ten = ""."" * 10
print(f""Ten dots: {ten}"")"
1902,Replacing a string with another string,"word = ""Hello World""
replace = ""Bye""
input = ""Hello""
after_replace = word.replace(input, replace)
print(f""String ater replacement: {after_replace}"")"
1903,removes leading characters,"word = "" xyz ""
lstrip = word.lstrip()
print(f""String ater removal of leading characters:{lstrip}"")"
1904,removes trailing characters,"word = "" xyz ""
rstrip = word.rstrip()
print(f""String ater removal of trailing characters:{rstrip}"")"
1905,check if all char are alphanumeric,"word = ""Hello World""
check = word.isalnum()
print(f""All char are alphanumeric?:{check}"")"
1906,check if all char in the string are alphabetic,"word = ""Hello World""
check = word.isalpha()
print(f""All char are alphabetic?:{check}"")"
1907,test if string contains digits,"word = ""Hello World""
check = word.isdigit()
print(f""String contains digits?:{check}"")"
1908,Test if string contains upper case,"word = ""Hello World""
check = word.isupper()
print(f""String contains upper case?:{check}"")"
1909,Test if string starts with H,"word = ""Hello World""
check = word.startswith('H')
print(f""String starts with H?:{check}"")"
1910,Returns an integer value for the given character,"str = ""A""
val = ord(str)
print(f""Integer value for the given character?:{val}"")"
1911,Fibonacci series up to 100,"n = 100
result = []
a, b = 0 , 1
while b < n:
  result. append( b)
  a, b = b, a + b
final = result
print(f""Fibonacci series up to 100:{final}"")"
1912,Counting total Digits in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isdigit()):
    digitCount += 1
print('Number of digits: ',digitCount)"
1913,Counting total alphanumeric in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isalpha()):
    digitCount += 1
print('Number of alphanumeric: ',digitCount)"
1914,Counting total Upper Case in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.upper()):
    digitCount += 1
print('Number total Upper Case: ',digitCount)"
1915,Counting total lower Case in a string,"str1 = ""abc4234AFdeaa""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.lower()):
    digitCount += 1
print('Number total lower Case: ',digitCount)"
1916,Bubble sort in python,"list1 = [1, 5, 3, 4]
for i in range(len(list1)-1):
  for j in range(i+1,len(list1)):
    if(list1[i] > list1[j]):
      temp = list1[i]
      list1[i] = list1[j]
      list1[j] = temp
print(""Bubble Sorted list: "",list1)"
1917,Compute the product of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
1918,Calculate the sum of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a+b for a in list1 for b in list2]
print(f""sum of every pair of numbers from two lists:{final}"")"
1919,Calculate the pair-wise product of two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [list1[i]*list2[i] for i in range(len(list1))]
print(f""pair-wise product of two lists:{final}"")"
1920,Remove the last element from the stack,"s = [1,2,3,4]
print(f""last element from the stack:{s.pop()}"")"
1921,Insert a number at the beginning of the queue,"q = [1,2,3,4]
q.insert(0,5)
print(f""Revised List:{q}"")"
1922,Addition of two vector,"v1 = [1,2,3]
v2 = [1,2,3]
s1 = [0,0,0]
for i in range(len(v1)):
  s1[i] = v1[i] + v2[i]
print(f""New Vector:{s1}"")"
1923,Replace negative prices with 0 and leave the positive values unchanged in a list,"original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
prices = [i if i > 0 else 0 for i in original_prices]
print(f""Final List:{prices}"")"
1924,Convert dictionary to JSON,"import json
person_dict = {'name': 'Bob',
'age': 12,
'children': None
}
person_json = json.dumps(person_dict)
print(person_json)"
1925,Writing JSON to a file,"import json
person_dict = {""name"": ""Bob"",
""languages"": [""English"", ""Fench""],
""married"": True,
""age"": 32
}
with open('person.txt', 'w') as json_file:
  json.dump(person_dict, json_file)"
1926,Pretty print JSON,"import json
person_string = '{""name"": ""Bob"", ""languages"": ""English"", ""numbers"": [2, 1.6, null]}'
person_dict = json.loads(person_string)
print(json.dumps(person_dict, indent = 4, sort_keys=True))"
1927,Check if the key exists or not in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""john wick"",
   ""class"": 8,
   ""percentage"": 75,
   ""email"": ""jhon@pynative.com""
}""""""
print(""Checking if percentage key exists in JSON"")
student = json.loads(studentJson)
if ""percentage"" in student:
    print(""Key exist in JSON data"")
    print(student[""name""], ""marks is: "", student[""percentage""])
else:
    print(""Key doesn't exist in JSON data"")"
1928,Check if there is a value for a key in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Ishwar Venugopal"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""ishwarraja@gmail.com""
}""""""
student = json.loads(studentJson)
if not (student.get('email') is None):
     print(""value is present for given JSON key"")
     print(student.get('email'))
else:
    print(""value is not present for given JSON key"")"
1929,Sort JSON keys in Python and write it into a file,"import json
sampleJson = {""id"" : 1, ""name"" : ""value2"", ""age"" : 29}
with open(""sampleJson.json"", ""w"") as write_file:
    json.dump(sampleJson, write_file, indent=4, sort_keys=True)
print(""Done writing JSON data into a file"")"
1930,Given a Python list. Turn every item of a list into its square,"aList = [1, 2, 3, 4, 5, 6, 7]
aList =  [x * x for x in aList]
print(aList)"
1931,Remove empty strings from the list of strings,"list1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]
resList = [i for i in (filter(None, list1))]
print(resList)"
1932,"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, 20)
print(resList)"
1933,Generate 3 random integers between 100 and 999 which is divisible by 5,"import random
print(""Generating 3 random integer number between 100 and 999 divisible by 5"")
for num in range(3):
    print(random.randrange(100, 999, 5), end=', ')"
1934,Pick a random character from a given String,"import random
name = 'pynative'
char = random.choice(name)
print(""random char is "", char)"
1935,Generate  random String of length 5,"import random
import string
def randomString(stringLength):
    """"""Generate a random string of 5 charcters""""""
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(stringLength))
print (""Random String is "", randomString(5) )"
1936,"Write a program which will create a new string by appending s2 in the middle of s1 given two strings, s1 and s2","def appendMiddle(s1, s2):
  middleIndex = int(len(s1) /2)
  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
  print(""After appending new string in middle"", middleThree)
appendMiddle(""Ault"", ""Kelly"")"
1937,Arrange string characters such that lowercase letters should come first,"str1 = ""PyNaTive""
lower = []
upper = []
for char in str1:
    if char.islower():
        lower.append(char)
    else:
        upper.append(char)
sorted_string = ''.join(lower + upper)
print(sorted_string)"
1938,"Given a string, return the sum and average of the digits that appear in the string, ignoring all other characters","import re
inputStr = ""English = 78 Science = 83 Math = 68 History = 65""
markList = [int(num) for num in re.findall(r'\b\d+\b', inputStr)]
totalMarks = 0
for mark in markList:
  totalMarks+=mark
percentage = totalMarks/len(markList)  
print(""Total Marks is:"", totalMarks, ""Percentage is "", percentage)"
1939,"Given an input string, count occurrences of all characters within a string","str1 = ""Apple""
countDict = dict()
for char in str1:
  count = str1.count(char)
  countDict[char]=count
print(countDict)"
1940,Reverse a given string,"str1 = ""PYnative""
print(""Original String is:"", str1)
str1 = str1[::-1]
print(""Reversed String is:"", str1)"
1941,Remove special symbols/Punctuation from a given string,"import string
str1 = ""/*Jon is @developer & musician""
new_str = str1.translate(str.maketrans('', '', string.punctuation))
print(""New string is "", new_str)"
1942,Removal all the characters other than integers from string,"str1 = 'I am 25 years and 10 months old'
res = """".join([item for item in str1 if item.isdigit()])
print(res)"
1943,From given string replace each punctuation with,"from string import punctuation
str1 = '/*Jon is @developer & musician!!'
replace_char = '#'
for char in punctuation:
    str1 = str1.replace(char, replace_char)
print(""The strings after replacement : "", str1)"
1944,Given a list iterate it and count the occurrence of each element and create a dictionary to show the count of each elemen,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
1945,Given a two list of equal size create a set such that it shows the element from both lists in the pair,"firstList = [2, 3, 4, 5, 6, 7, 8]
secondList = [4, 9, 16, 25, 36, 49, 64]
result = zip(firstList, secondList)
resultSet = set(result)
print(resultSet)"
1946,Given a two sets find the intersection and remove those elements from the first set,"firstSet  = {23, 42, 65, 57, 78, 83, 29}
secondSet = {57, 83, 29, 67, 73, 43, 48}
intersection = firstSet.intersection(secondSet)
for item in intersection:
  firstSet.remove(item)
print(""First Set after removing common element "", firstSet)"
1947,Given a dictionary get all values from the dictionary and add it in a list but don’t add duplicates,"speed  ={'jan':47, 'feb':52, 'march':47, 'April':44, 'May':52, 'June':53,
          'july':54, 'Aug':44, 'Sept':54} 
speedList = []
for item in speed.values():
  if item not in speedList:
    speedList.append(item)
print(""unique list"", speedList)"
1948,Convert decimal number to octal,"print('%o,' % (8))"
1949,Convert string into a datetime object,"from datetime import datetime
date_string = ""Feb 25 2020  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
1950,Subtract a week from a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
1951,Find the day of week of a given date?,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
1952,Add week (7 days) and 12 hours to a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
1953,Calculate number of days between two given dates,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
1954,Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
1955,Generate a Python list of all the even numbers between two given numbers,"num1 = 4
num2 = 30
myval = [i for i in range(num1, num2, 2)]
print(myval)"
1956,Return the largest item from the given list,"aList = [4, 6, 8, 24, 12, 2]
print(max(aList))"
1957,"Write a program to extract each digit from an integer, in the reverse order","number = 7536
while (number > 0):
    digit = number % 10
    number = number // 10
    print(digit, end="" "")"
1958,"Given a Python list, remove all occurrence of a given number from the list","num1 = 20
list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, num1)
print(resList)"
1959,Shuffle a list randomly,"import random
list = [2,5,8,9,12]
random.shuffle(list)
print (""Printing shuffled list "", list)"
1960,Generate a random n-dimensional array of float numbers,"import numpy
random_float_array = numpy.random.rand(2, 2)
print(""2 X 2 random float array in [0.0, 1.0] \n"", random_float_array,""\n"")"
1961,Generate random Universally unique IDs,"import uuid
safeId = uuid.uuid4()
print(""safe unique id is "", safeId)"
1962,Choose given number of elements from the list with different probability,"import random
num1 =5
numberList = [111, 222, 333, 444, 555]
print(random.choices(numberList, weights=(10, 20, 30, 40, 50), k=num1))"
1963,Generate weighted random numbers,"import random
randomList = random.choices(range(10, 40, 5), cum_weights=(5, 15, 10, 25, 40, 65), k=6)
print(randomList)"
1964,generating a reliable secure random number,"import secrets
print(""Random integer number generated using secrets module is "")
number = secrets.randbelow(30)
print(number)"
1965,Calculate memory is being used by an list in Python,"import sys
list1 = ['Scott', 'Eric', 'Kelly', 'Emma', 'Smith']
print(""size of list = "",sys.getsizeof(list1))"
1966,Find if all elements in a list are identical,"listOne = [20, 20, 20, 20]
print(""All element are duplicate in listOne:"", listOne.count(listOne[0]) == len(listOne))"
1967,Merge two dictionaries in a single expression,"currentEmployee = {1: 'Scott', 2: ""Eric"", 3:""Kelly""}
formerEmployee  = {2: 'Eric', 4: ""Emma""}
allEmployee = {**currentEmployee, **formerEmployee}
print(allEmployee)"
1968,Convert two lists into a dictionary,"ItemId = [54, 65, 76]
names = [""Hard Disk"", ""Laptop"", ""RAM""]
itemDictionary = dict(zip(ItemId, names))
print(itemDictionary)"
1969,Alternate cases in String,"test_str = ""geeksforgeeks""
res = """" 
for idx in range(len(test_str)): 
    if not idx % 2 : 
       res = res + test_str[idx].upper() 
    else: 
       res = res + test_str[idx].lower() 
print(res)"
1970,Write a Python program to validate an Email,"import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
def check(email):
  if(re.search(regex,email)):
    print(""Valid Email"")
  else:
    print(""Invalid Email"")
email = ""ishwarraja@gmail.com""
check(email)"
1971,1. python function to return the nth fibonacci number,"def fib(n):
   if n <= 1:
      return n
   else:
      return (fib(n-1) + fib(n-2))"
1972,2. python function to return the factorial of a number,"def fact(n):
   if n == 1:
      return n
   else:
      return n * fact(n-1)"
1973,3. python function to return the squares of a list of numbers,"def sq(n):
   return [i**2 for i in range(n)]"
1974,3. python function to return the squareroot of a list of numbers,"def sqrt(n):
   return [i**0.5 for i in range(n)]"
1975,4. python function to add even number from 1st list and odd number from 2nd list,"def even_odd(l1, l2):
    return[x + y for x, y in zip(l1, l2) if x % 2 ==0 and y % 2 != 0]"
1976,5. python function to strip vowels from a string,"def strip_vowel_str(str):
    vowels = ['a', 'e', 'i', 'o', 'u']
    return """".join([x for x in str if x not in vowels])"
1977,6. python ReLu function,"def relu_like_activation(l):
    return[0 if x < 0 else x for x in l]"
1978,7. python sigmoid function,"def sigmoid_activation(l):
    return[round(1/(1+math.exp(-x)),2) for x in l]"
1979,8. python function to identify profane words,"def profane_filter(str):
    profane_word_url = ""https://raw.githubusercontent.com/RobertJGabriel/Google-profanity-words/master/list.txt""
    file = urllib.request.urlopen(profane_word_url)
    for line in file:
        decoded_line = line.decode(""utf-8"")
    return decoded_line
    str = re.findall(r'\w+', str)
    return [i for i in str if i in decoded_line]"
1980,9. python function to add even mubers in a list,"def add_even_num(l):
    sum = reduce(lambda a, b: a + b, filter(lambda a: (a % 2 == 0), l))
    return sum"
1981,10. python function to find the area of a circle,"def circle_area(r):
    return 22/7 * r**2"
1982,11. python program to find whether a number is prime,"def test_prime(n):
    if (n==1):
        return False
    elif (n==2):
        return True;
    else:
        for x in range(2,n):
            if(n % x==0):
                return False
        return True"
1983,12. python function to return the cubes of a list of numbers,"def cube(n):
   return [i*i*i for i in range(n)]"
1984,13. python function to find the average of given numbers,"def average():
    numbers = []
    def add(number):
        numbers.append(number)
        total = sum(numbers)
        count = len(numbers)
        return total/count
    return add
a = average()
a(10)
a(20)
a(45)"
1985,14. python function to create adders,"def create_adders():
    adders = []
    for n in range(1, 4):
        adders.append(lambda x, y=n: x + y)
    return adders
adders = create_adders()"
1986,15. python function for datetime,"from datetime import datetime
datetime.utcnow()
def log(msg, *, dt = datetime.utcnow()):
    print(f'Message at {dt} was {msg}')"
1987,16. python function for count of address reference,"import ctypes
def ref_count(address : int): #what is int doing here? Annotations
    return ctypes.c_long.from_address(address).value"
1988,17. python function to modify a tuple,"def modify_tuple(t):
    print(f'Initial t mem-add = {id(t)}')
    t[0].append(100)
    print(f'Final t mem-add = {id(t)}')"
1989,18. python program to compare strings,"def compare_using_equals(n):
    a = 'a long string that is not intered' * 200
    b = 'a long string that is not intered' * 200
    for i in range(n):
        if a == b:
            pass"
1990,19. python program to compare strings using interning,"import sys
def compare_using_interning(n):
    a = sys.intern('a long string that is not intered' * 200)
    b = sys.intern('a long string that is not intered' * 200)
    for i in range(n):
        if a is b:
            pass"
1991,20. python program to calculate the time taken to create a float and decimal,"import time
def run_float(n = 1):
    for i in range(n):
        a = 3.1415
def run_decimal(n = 1):
    for i in range(n):
        a = Decimal('3.1415')
n = 10000000
start = time.perf_counter()
run_float(n)
end = time.perf_counter()
print ('float: ', end - start)
start = time.perf_counter()
run_decimal(n)
end = time.perf_counter()
print ('decimal: ', end - start)"
1992,21. python function for factorial using reduce,"def fact(n):
    from operator import mul
    from functools import reduce
    return reduce(mul, range(1, n+1))
fact(10)"
1993,22. python program to find if given co-ordinates are inside circle,"from random import uniform
from math import sqrt
def random_shot(rad):
    r_x = uniform(-rad, rad)
    r_y = uniform(-rad, rad)
    if sqrt(r_x**2 + r_y**2) <= rad:
        is_in_circle = True
    else:
        is_in_circle = False
    return r_x, r_y, is_in_circle"
1994,23. python function to find the area of a circle,"def square_area(x):
    return x ** 2"
1995,24. python program for the sum of first n numbers.,"def sum_n_num(n):
    return n * (n + 1)/2"
1996,28. Python Program to Swap Two Numbers,"a = float(input("" Please Enter the First Value a: ""))
b = float(input("" Please Enter the Second Value b: ""))
print(""Before Swapping two Number: a = {0} and b = {1}"".format(a, b))
temp = a
a = b
b = temp
print(""After Swapping two Number: a = {0} and b = {1}"".format(a, b))"
1997,29. Python Program to Concatenate Strings,"str1 = input(""Please Enter the First  String : "")
str2 = input(""Please Enter the Second String : "")
concat1 = str1 + str2
print(""The Final String After Python String Concatenation = "", concat1)
concat2 = str1 + ' ' + str2
print(""The Final After String Concatenation with Space = "", concat2)"
1998,32. Python Program to Convert String to Uppercase,"string = input(""Please Enter your Own String : "")
string1 = string.upper()
print(""\nOriginal String in Lowercase  =  "", string)
print(""The Given String in Uppercase =  "", string1)"
1999,33. Python Program to Calculate Simple Interest,"princ_amount = float(input("" Please Enter the Principal Amount : ""))
rate_of_int = float(input("" Please Enter the Rate Of Interest   : ""))
time_period = float(input("" Please Enter Time period in Years   : ""))
simple_interest = (princ_amount * rate_of_int * time_period) / 100
print(""\nSimple Interest for Principal Amount {0} = {1}"".format(princ_amount, simple_interest))"
2000,34. Python Program to Map two lists into a Dictionary,"keys = ['name', 'age', 'job']
values = ['John', 25, 'Developer']
myDict = {k: v for k, v in zip(keys, values)}
print(""Dictionary Items  :  "",  myDict)"
2001,35. write a Python function To Calculate Volume OF Cylinder,"def volume(r, h): 
    vol = 22/7 * r * r * h 
    return vol"
2002,"36. Recursive Python function to solve the tower of hanoi  
 given angle.","def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print ""Move disk 1 from source"",source,""to destination"",destination 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print ""Move disk"",n,""from source"",source,""to destination"",destination 
    TowerOfHanoi(n-1, auxiliary, destination, source) 
n = 4
TowerOfHanoi(n,'A','B','C') 
Python 3 program to find time for a"
2003,"37. python function to find angle between hour hand and minute hand 
     Calculate the angles moved by 
     hour and minute hands with  
     reference to 12:00 
     Find the difference between 
     two angles 
     Return the smaller angle of two 
     possible angles","def calcAngle(hh, mm): 
    hour_angle = 0.5 * (hh * 60 + mm) 
    minute_angle = 6 * mm 
    angle = abs(hour_angle - minute_angle) 
    angle = min(360 - angle, angle) 
    return angle"
2004,"38. python function to print all time when angle between hour hand and minute 
 hand is theta","def printTime(theta): 
    for hh in range(0, 12): 
        for mm in range(0, 60): 
            if (calcAngle(hh, mm)==theta): 
                print(hh, "":"", mm, sep = """") 
                return
    print(""Input angle not valid."") 
    return"
2005,41. python function for finding cosine angle,"def cosine(angle):
    """""" returns the cosine value for an angle mentioned in radians""""""
    return math.cos(angle)"
2006,42. python function for finding the derivative of cosine angle,"def dcosine(angle):
    """""" returns the cosine value for an angle mentioned in radians""""""
    return -math.sin(angle)"
2007,43. python function for finding sine angle,"def sine(angle):
    """""" returns the sine value for an angle mentioned in radians""""""
    return math.sin(angle)"
2008,44. python function for finding the derivative of sine angle,"def dsine(angle):
    """""" returns the sine value for an angle mentioned in radians""""""
    return math.cos(angle)"
2009,45. python function for finding tangent angle,"def tangent(angle):
  """""" returns the tangent value for an angle mentioned in radians""""""
  return math.tan(angle)"
2010,46. python function for finding the derivative of tangent angle,"def dtangent(angle):
  """""" returns the tangent value for an angle mentioned in radians""""""
  return 1/(math.cos(angle)**2)"
2011,47. python function for finding the exponent of a number,"def exp(x):
  """"""returns e^x of a number""""""
  return math.exp(x)"
2012,48. python function for finding the derivative of exponent of a number,"def dexp(x):
    return math.exp(x)"
2013,49. python function for finding the logarithmic value of a number,"def log(x):
  """"""returns the logarithmic value of a number""""""
  return math.log(x)"
2014,50. python function for finding the derivative of logarithmic value of a number,"def dlog(x):
    return 1/x"
2015,51. python function for finding softmax output of a vector,"def softmax(x):
  """"""returns the softmax output of a vector""""""
  if(type(x) == int or type(x) == float):
    return 1
  denom = 0
  for i in x:
    denom+=math.exp(i)
  new_vec = []
  for i in x:
    new_vec.append(math.exp(i)/denom)
  return new_vec"
2016,52. python function for finding the hyperbolic tangent value of a number,"def tanh(x):
  """""" returns the hyperbolic tangent value of a number""""""
  return math.tanh(x)"
2017,53. python function for finding the derivative of hyperbolic tangent value of a number,"def dtanh(x):
  """""" returns the hyperbolic tangent value of a number""""""
  return 1 - (math.tanh(x)**2)"
2018,write a python function to check if a given string is a palindrome,"def isPalindrome(s):
    return s == s[::-1]"
2019,write a python function to check if a given string is symmetrical,"def symmetry(a): 
    n = len(a) 
    flag = 0
    if n%2: 
        mid = n//2 +1
    else: 
        mid = n//2
    start1 = 0
    start2 = mid 
    while(start1 < mid and start2 < n): 
        if (a[start1]== a[start2]): 
            start1 = start1 + 1
            start2 = start2 + 1
        else: 
            flag = 1
            break
    return flag"
2020,write a function to reverse words of string,"def rev_sentence(sentence):  
    words = sentence.split(' ')  
    reverse_sentence = ' '.join(reversed(words))  
    return reverse_sentence"
2021,write a program to check if a substring is present in a given string,"string = ""how are you?""
substring = ""are""
if (string.find(substring) == -1): 
    print(""NO"") 
else: 
    print(""YES"")"
2022,write a program to print length of a string,"str1 = ""great way to learn!""
print(len(str1))"
2023,write a program to print words frequncy in a given string,"test_str = ""It is a great meal at a great restaurant on a great day""
print(""Original String: "" + str(test_str))
res = {key: test_str.count(key) for key in test_str.split()} 
print(""The words frequency: "" + str(res))"
2024,write a program to print even length words in a string,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
2025,write a program to accept the strings which contains all vowels,"str1 = ""__main__""
if len(set(str1).intersection(""AEIOUaeiou""))>=5: 
  print('accepted') 
else: 
  print(""not accepted"")"
2026,write a program to print count of number of unique matching characters in a pair of strings,"str1=""ababccd12@""
str2=""bb123cca1@""
matched_chars = set(str1) & set(str2) 
print(""No. of matching characters are : "" + str(len(matched_chars)) )"
2027,write a program to remove all duplicate characters from a string,"str1 = ""what a great day!""
print("""".join(set(str1)))"
2028,write a program to print least frequent character in a string,"str1=""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get)
print(""Minimum of all characters is: "" + str(res))"
2029,write a program to print maximum frequency character in a string,"str1 = ""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)
print(""Maximum of all characters is: "" + str(res))"
2030,write a program to find and print all words which are less than a given length in a string,"str1 = ""It is wonderful and sunny day for a picnic in the park""
str_len = 5
res_str = [] 
text = str1.split("" "") 
for x in text: 
    if len(x) < str_len: 
        res_str.append(x) 
print(""Words that are less than "" + str(str_len) + "": "" + str(res_str))"
2031,write a program to split and join a string with a hyphen delimiter,"str1 = ""part of speech""
delimiter = ""-""
list_str = str1.split("" "")
new_str = delimiter.join(list_str)
print(""Delimited String is: "" + new_str)"
2032,write a program to check if a string is binary or not,"str1=""01110011 a""
set1 = set(str1)
if set1 == {'0','1'} or set1 == {'0'} or set1 == {'1'}:
    print(""string is binary"")
else:
    print(""string is not binary"")"
2033,write a function to remove i-th indexed character in a given string,"def remove_char(string, i):
    str1 = string[ : i]  
    str2 = string[i + 1: ] 
    return str1 + str2"
2034,write a function to find all urls in a given string,"import re 
def find_urls(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
2035,write a function to find uncommon words from two strings,"def UncommonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] == 1]"
2036,write a function to find common words from two strings,"def commonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] > 1]"
2037,write a program to replace multiple words with a single word,"str1 = 'CoffeeDay is best for coffee and having long conversations'
word_list = [""best"", 'long'] 
repl_word = 'good'
res = ' '.join([repl_word if idx in word_list else idx for idx in str1.split()]) 
print(""String after multiple replace : "" + str(res))"
2038,write a function to rotate string left by a given length,"def rotate_left(input,d):  
    Lfirst = input[0 : d]  
    Lsecond = input[d :]  
    return (Lsecond + Lfirst)"
2039,write a function to rotate string right by a given length,"def rotate_right(input,d):  
    Rfirst = input[0 : len(input)-d]  
    Rsecond = input[len(input)-d : ]  
    return (Rsecond + Rfirst)"
2040,write a function to replace all occurances of a substring in a string,"str1 = ""Hello! It is a Good thing""
substr1 = ""Good""
substr2 = ""bad""
replaced_str = str1.replace(substr1, substr2)
print(""String after replace :"" + str(replaced_str))"
2041,write a program to move numbers to the end of a string,"str1 = 'hi 123 how are you doing? 567 is with you. Take care of 89'
res = '' 
dig = '' 
for ele in str1: 
    if ele.isdigit(): 
        dig += ele 
    else: 
        res += ele 
res += dig 
print(""Strings after digits at end : "" + str(res))"
2042,write a program to count characters surrounding vowels,"str1 = 'week after week the numbers are increasing'
res = 0
vow_list = ['a', 'e', 'i', 'o', 'u']
for idx in range(1, len(str1) - 1): 
    if str1[idx] not in vow_list and (str1[idx - 1] in vow_list or str1[idx + 1] in vow_list): 
        res += 1
if str1[0] not in vow_list and str1[1] in vow_list: 
    res += 1
if str1[-1] not in vow_list and str1[-2] in vow_list: 
    res += 1
print(""Characters around vowels count : "" + str(res))"
2043,write a function that return space count,"def count_space(str1): 
    count = 0
    for i in range(0, len(str1)): 
        if str1[i] == "" "": 
            count += 1
    return count"
2044,write a program to break up string into individual elements,"str1 = ""whatisthis""
split_string = list(''.join(str1)) 
print(split_string)"
2045,write a program to extract string of N size and having K distict characters,"str1 = 'GoodisalwaysGoood'
N = 3
K = 2
res = [] 
for idx in range(0, len(str1) - N + 1): 
    if (len(set(str1[idx: idx + N])) == K): 
        res.append(str1[idx: idx + N]) 
print(""Extracted Strings : "" + str(res))"
2046,write a program to increment number which is at end of string,"import re 
str1 = 'count001'
res = re.sub(r'[0-9]+$', 
             lambda x: f""{str(int(x.group())+1).zfill(len(x.group()))}"",  
             str1) 
print(""Incremented numeric String : "" + str(res))"
2047,write a program to calculate and print number of letters and digits in a string,"str1 = ""python1234""
total_digits = 0
total_letters = 0
for s in str1: 
    if s.isnumeric(): 
        total_digits += 1
    else: 
        total_letters += 1
print(""Total letters found : "", total_letters) 
print(""Total digits found : "", total_digits)"
2048,write a function to check if a lower case letter exists in a given string,"def check_lower(str1):
    for char in str1: 
        k = char.islower()   
        if k == True: 
            return True 
    if(k != 1): 
        return False"
2049,write a function to check if a upper case letter exists in a given string,"def check_upper(str1):
    for char in str1: 
        k = char.isupper()   
        if k == True: 
            return True
    if(k != 1): 
        return False"
2050,write a program to print number of words in a string,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
2051,write a program to print number of characters in a string,"str1 = 'It is a glorious day'
res = len(str1) 
print(""The number of characters in string are : "", str(res))"
2052,write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list_to_dict(list1, list2):
  return dict(zip(list1, list2))"
2053,write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort_dict_list(dict_list, sort_key):
  dict_list.sort(key=lambda item: item.get(sort_key))"
2054,write a program to print the longest key in a dictioinary,"dict_1 = {""key1"": 10, ""keeeey2"": 2, ""ky3"": 30}
max_key=''
for key in dict_1:
  if len(key)>len(max_key):
    max_key=key
print(max_key)"
2055,write a program to capitalize the first and last character of each key in a dictionary,"input_dict = {'key_a': 10, 'kEy': 2, 'Key_B': 13}
for key in list(input_dict.keys()):
  new_key = key[0].upper() + key[1:-1] + key[-1].upper()
  input_dict[new_key] = input_dict[key]
  if key != new_key:
    del input_dict[key]"
2056,"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","key_val_map = {""key1"": ""length1"", ""key2"": ""len2"", ""Hello"": ""hi"", ""bingo"": ""print bingo""}
for key, val in key_val_map.items():
  if len(val) > len(key):
    print(""Bingo!"")
  else:
    print(""no bingo"")"
2057,write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert_dict(input_dict):
  my_inverted_dict = {value: key for key, value in input_dict.items()}
  return my_inverted_dict"
2058,write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"def invert_dict_non_unique(my_dict):
  my_inverted_dict = dict()
  for key, value in my_dict.items():
      my_inverted_dict.setdefault(value, list()).append(key)
  return my_inverted_dict"
2059,write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"input = [{""foo"": ""bar"", ""Hello"": ""World""},
         {""key1"": ""val1"", ""key2"": ""val2""},
         {""sample_key"": ""sample_val""}]
merged_dict = {key: value for d in input for key, value in d.items()}"
2060,write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean_key_val_diff(input_dict):
  sum_diff = 0
  for key, val in input_dict.items():
    sum_diff += abs(len(val) - len(key))
  return sum_diff/len(input_dict)"
2061,write a program that prints the number of unique keys in a list of dictionaries.,"list_of_dicts = [{""key1"": ""val1"", ""Country"": ""India""}, 
                 {""Country"": ""USA"", ""foo"": ""bar""},
                 {""foo"": ""bar"", ""foo2"":""bar2""}]
unique_keys = []
for d in list_of_dicts:
  for key in d:
    if key not in unique_keys:
      unique_keys.append(key)
print(f""Number of unique keys: {len(unique_keys)}"")"
2062,write a Python program to replace the value of a particular key with nth index of value if the value of the key is list.,"test_list = [{'tsai': [5, 3, 9, 1], 'is': 8, 'good': 10}, 
             {'tsai': 1, 'for': 10, 'geeks': 9}, 
             {'love': 4, 'tsai': [7, 3, 22, 1]}]   
N = 2
key = ""tsai""  
for sub in test_list: 
    if isinstance(sub[key], list): 
        sub[key] = sub[key][N]"
2063,write a program to convert a dictionary value list to dictionary list and prints it.,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
2064,write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] 
res = {} 
for i, j in test_list: 
     res.setdefault(j, []).append(i) 
print(""The dictionary converted from tuple list : "" + str(res))"
2065,write a Python3 program that prints a index wise product of a Dictionary of Tuple Values,"test_dict = {'END Program' : (5, 6, 1), 'is' : (8, 3, 2), 'best' : (1, 4, 9)}
prod_list=[]
for x in zip(*test_dict.values()):
  res = 1 
  for ele in x: 
      res *= ele
  prod_list.append(res)
res = tuple(prod_list) 
print(""The product from each index is : "" + str(res))"
2066,write a program to Pretty Print a dictionary with dictionary values.,"test_dict = {'tsai' : {'rate' : 5, 'remark' : 'good'}, 'cs' : {'rate' : 3}} 
print(""The Pretty Print dictionary is : "") 
for sub in test_dict: 
    print(f""\n{sub}"") 
    for sub_nest in test_dict[sub]: 
        print(sub_nest, ':', test_dict[sub][sub_nest])"
2067,write a program to sort a nested dictionary by a key and print the sorted dictionary,"test_dict = {'Nikhil' : { 'roll' : 24, 'marks' : 17}, 
             'Akshat' : {'roll' : 54, 'marks' : 12},  
             'Akash' : { 'roll' : 12, 'marks' : 15}} 
sort_key = 'marks'
res = sorted(test_dict.items(), key = lambda x: x[1][sort_key]) 
print(""The sorted dictionary by marks is : "" + str(res))"
2068,write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists_to_dict(test_list1, test_list2, test_list3):
  res = [{a: {b: c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] 
  return res"
2069,write a program to print keys in a dictionary whose values are greater than a given input.,"test_dict = {'tsai' : 4, 'random_key' : 2, 'foo' : 3, 'bar' : 'END'} 
K = 3
res = {key : val for key, val in test_dict.items() 
                   if type(val) != int or val > K} 
print(""Values greater than K : "", res.keys())"
2070,write a function that converts a integer dictionary into a list of tuples.,"def dict_to_tuple(input_dict):
  out_tuple = [(a, b) for a,b in input_dict.items()]
  return out_tuple"
2071,write a python function to return a flattened dictionary from a nested dictionary input,"def flatten_dict(dd, separator ='_', prefix =''): 
    flattened =  { prefix + separator + k if prefix else k : v 
             for kk, vv in dd.items() 
             for k, v in flatten_dict(vv, separator, kk).items() 
             } if isinstance(dd, dict) else { prefix : dd } 
    return flattened"
2072,write a program that prints dictionaries having key of the first dictionary and value of the second dictionary,"test_dict1 = {""tsai"" : 20, ""is"" : 36, ""best"" : 100} 
test_dict2 = {""tsai2"" : 26, ""is2"" : 19, ""best2"" : 70} 
keys1 = list(test_dict1.keys()) 
vals2 = list(test_dict2.values()) 
res = dict() 
for idx in range(len(keys1)): 
	res[keys1[idx]] = vals2[idx] 
print(""Mapped dictionary : "" + str(res))"
2073,write a program to combine two dictionaries using a priority dictionary and print the new combined dictionary.,"test_dict1 = {'Gfg' : 1, 'is' : 2, 'best' : 3} 
test_dict2 = {'Gfg' : 4, 'is' : 10, 'for' : 7, 'geeks' : 12} 
prio_dict = {1 : test_dict2, 2: test_dict1} 
res = prio_dict[2].copy() 
for key, val in prio_dict[1].items(): 
    res[key] = val 
print(""The dictionary after combination : "" + str(res))"
2074,write a Python program to combine two dictionary by adding values for common keys,"dict1 = {'a': 12, 'for': 25, 'c': 9} 
dict2 = {'Geeks': 100, 'geek': 200, 'for': 300} 
for key in dict2: 
    if key in dict1: 
        dict2[key] = dict2[key] + dict1[key] 
    else: 
        pass"
2075,write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test_dict = {'Geeks' : 2, 'for' : 1, 'CS' : 3} 
res = list(sum(sorted(test_dict.items(), key = lambda x:x[1]), ())) 
print(""List after conversion from dictionary : "", res)"
2076,write a python program to print the top N largest keys in an integer dictionary.,"test_dict = {6 : 2, 8: 9, 3: 9, 10: 8}  
N = 4
res = []   
for key, val in sorted(test_dict.items(), key = lambda x: x[0], reverse = True)[:N]: 
    res.append(key) 
print(""Top N keys are: "" + str(res))"
2077,write a program to print the values of a given extraction key from a list of dictionaries.,"test_list = [{""Gfg"" : 3, ""b"" : 7},  
             {""is"" : 5, 'a' : 10},  
             {""Best"" : 9, 'c' : 11}]  
K = 'Best'
res = [sub[K] for sub in test_list if K in sub][0]   
print(""The extracted value : "" + str(res))"
2078,write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1 = ""20/01/2020""
element = datetime.datetime.strptime(str1,""%d/%m/%Y"") 
timestamp = datetime.datetime.timestamp(element) 
print(timestamp)"
2079,write a program to print the product of integers in a mixed list of string and numbers,"test_list = [5, 8, ""gfg"", 8, (5, 7), 'is', 2] 
res = 1
for ele in test_list: 
    try: 
        res *= int(ele) 
    except : 
        pass
print(""Product of integers in list : "" + str(res))"
2080,write a python program to add an element to a list. Print the final list.,"lst = [""Jon"", ""Kelly"", ""Jessa""]
lst.append(""Scott"")
print(lst)"
2081,write a python function to append all elements of one list to another,"def extend_list(list1, list2):
    list1 = [1, 2]
    list2 = [3, 4]
    return list1.extend(list2)"
2082,write a python function to add elements of two lists,"def add_two_lists(list1, list2):
   list1 = [1, 2, 3]
   list2 = [4, 5, 6]
   sum_list = []
   for (item1, item2) in zip(list1, list2):
      sum_list.append(item1+item2)
   return sum_list"
2083,Write a  python program to print the last element of a list,"list1 = ['p','r','o','b','e']
print(list1[-1])"
2084,Write a python program to print positive Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num >= 0: 
       print(num, end = "" "")"
2085,Write a python function to multiply all values in a list,"def multiplyList(myList) :
    result = 1
    for x in myList:
         result = result * x 
    return result"
2086,Write a python program to print the smallest number in a list,"list1 = [10, 20, 1, 45, 99] 
print(""Smallest element is:"", min(list1))"
2087,Write a python program to remove even numbers from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
for ele in list1: 
    if ele % 2 == 0: 
        list1.remove(ele) 
print(""New list after removing all even numbers: "", list1)"
2088,Write a python program to print a list after removing elements from index 1 to 4,"list1 = [11, 5, 17, 18, 23, 50]  
del list1[1:5] 
print(*list1)"
2089,Write a python program to remove 11 and 18 from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
unwanted_num = {11, 18} 
list1 = [ele for ele in list1 if ele not in unwanted_num] 
print(""New list after removing unwanted numbers: "", list1)"
2090,Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"test_list = ['gfg', '   ', ' ', 'is', '            ', 'best'] 
print(""The original list is : "" + str(test_list)) 
res = [ele for ele in test_list if ele.strip()] 
print(""List after filtering non-empty strings : "" + str(res))"
2091,"Write a python function to get the Cumulative sum of a list 
  Write a python program to print if a string ""hello"" is present in the list","def Cumulative(lists): 
    cu_list = [] 
    length = len(lists) 
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] 
    return cu_list[1:]
l = [1, 2.0, 'hello','have', 'a', 'good', 'day'] 
s = 'hello'  
if s in l: 
    print(f'{s} is present in the list') 
else: 
    print(f'{s} is not present in the list')"
2092,Write a python program to print the distance between first and last occurrence of even element.,"test_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] 
indices_list = [idx for idx in range( 
    len(test_list)) if test_list[idx] % 2 == 0] 
res = indices_list[-1] - indices_list[0] 
print(""Even elements distance : "" + str(res))"
2093,Write a python fuction to create an empty list,"def emptylist():
   return list()"
2094,Write a python program to print a list with all elements as 5 and of length 10,"list1 = [5] * 10
print(list1)"
2095,Write a python program to reverse a list and print it.,"def Reverse(lst): 
    return [ele for ele in reversed(lst)] 
lst = [10, 11, 12, 13, 14, 15] 
print(Reverse(lst))"
2096,Write a python program to print odd numbers in a List,"list1 = [10, 21, 4, 45, 66, 93, 11]  
odd_nos = list(filter(lambda x: (x % 2 != 0), list1)) 
print(""Odd numbers in the list: "", odd_nos)"
2097,Write a python program to print negative Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
2098,Write a python program print the the number of occurrences of 8 in a list,"def countX(lst, x): 
    count = 0
    for ele in lst: 
        if (ele == x): 
            count = count + 1
    return count 
lst = [8, 6, 8, 10, 8, 20, 10, 8, 8] 
x = 8
print('{} has occurred {} times'.format(x, countX(lst, x)))"
2099,"Write a python program to swap first and last element of a list . Print the final list
     Swapping","def swapList(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
2100,Write a python program to convert each list element to key-value pair. Print the final dictionary,"test_list = [2323, 82, 129388, 234, 95] 
print(""The original list is : "" + str(test_list)) 
res = dict() 
for ele in test_list: 
    mid_idx = len(str(ele)) // 2
    key = int(str(ele)[:mid_idx]) 
    val = int(str(ele)[mid_idx:]) 
    res[key] = val 
print(""Constructed Dictionary : "" + str(res))"
2101,Write a python program for print all elements with digit 7.,"test_list = [56, 72, 875, 9, 173]  
K = 7
res = [ele for ele in test_list if str(K) in str(ele)] 
print(""Elements with digit K : "" + str(res))"
2102,Write a python program for printing number of unique elements in a list,"input_list = [1, 2, 2, 5, 8, 4, 4, 8] 
l1 = [] 
count = 0
for item in input_list: 
    if item not in l1: 
        count += 1
        l1.append(item) 
print(""No of unique items are:"", count)"
2103,Write a python program to find the sum and average of the list. Print the sum and average,"L = [4, 5, 1, 2, 9, 7, 10, 8] 
count = 0
for i in L: 
    count += i 
avg = count/len(L) 
print(""sum = "", count) 
print(""average = "", avg)"
2104,Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
2105,Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1 = [1, 2, 5, 6] 
res = [(val, pow(val, 3)) for val in list1] 
print(res)"
2106,Write a python program to print the combination of tuples in list of tuples,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')]
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
2107,Write a python program to swap tuple elements in list of tuples. Print the output.,"test_list = [(3, 4), (6, 5), (7, 8)] 
res = [(sub[1], sub[0]) for sub in test_list] 
print(""The swapped tuple list is : "" + str(res))"
2108,Write a python function to sort a list of tuples by the second Item,"def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
2109,Write a python program to print all pair combinations of 2 tuples.,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8) 
res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] 
print(""The filtered tuple : "" + str(res))"
2110,Write a python program to print positive Tuples in List.,"test_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] 
print(""The original list is : "" + str(test_list)) 
res = [sub for sub in test_list if all(ele >= 0 for ele in sub)] 
print(""Positive elements Tuples : "" + str(res))"
2111,Write a python program to join Tuples from a list of tupels if they have similar initial element. Print out the output,"test_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] 
print(""The original list is : "" + str(test_list)) 
res = [] 
for sub in test_list:                                            
    if res and res[-1][0] == sub[0]:               
        res[-1].extend(sub[1:])                         
    else: 
        res.append([ele for ele in sub])      
res = list(map(tuple, res)) 
print(""The extracted elements : "" + str(res))"
2112,Write a python program to print the uncommon elements in List,"test_list1 = [ [1, 2], [3, 4], [5, 6] ] 
test_list2 = [ [3, 4], [5, 7], [1, 2] ] 
res_list = [] 
for i in test_list1: 
    if i not in test_list2: 
        res_list.append(i) 
for i in test_list2: 
    if i not in test_list1: 
        res_list.append(i) 
print (""The uncommon of two lists is : "" + str(res_list))"
2113,write a Function to convert the time from 12 hour format to 24 hour format,"def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
2114,write a python program to multiply three numbers,"num1 = 1.5
num2 = 6.3
num3 = -2.3
product = num1 * num2 * num3
print(f'Product: {product}')"
2115,"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide_first_number_by_second(num1, num2):
    return (num1 // num2), (num1 % num2)"
2116,write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest_and_smallest(list_of_nums):
    if list_of_nums:
        return max(list_of_nums), min(list_of_nums)
    else:
        return"
2117,write a python function that would read the given input file path and print its contents,"def read_and_print_file(filepath):
    with open(filepath, ""r"") as infile:
        print( infile.read() )"
2118,write a python program that would print the first n positive integers using a for loop,"n = 62
for num in range(n):
    print(num)"
2119,write a python function that returns the input list sorted in ascending order,"def sort_ascending(list_to_be_sorted):
    return sorted(list_to_be_sorted)"
2120,write a python function that returns the input list sorted in descending order,"def sort_descending(list_to_be_sorted):
    return sorted(list_to_be_sorted, reverse=True)"
2121,"write a python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n(n):
    return ( n * (n+1) ) // 2"
2122,"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n_recursive(n):
    if n == 0:
        return 0
    return sum_first_n_recursive(n-1) + n"
2123,"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter_with_key_value(list_of_dicts, key, value):
    return list( filter( lambda x: x.get(key) == value, list_of_dicts ) )"
2124,write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,"def reverse(seq):
    SeqType = type(seq)
    emptySeq = SeqType()
    if seq == emptySeq:
        return emptySeq
    restrev = reverse(seq[1:])
    first = seq[0:1]
    result = restrev + first
    return result"
2125,write a python function that returns the square of a given input number,"def square(x):
    return x**2"
2126,write a python program that asks for user input and prints the given input,"a = input(""User Input"")
print(a)"
2127,write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift_and_scale(list_of_nums, mean, std):
    return [ (x-mean) / std for x in list_of_nums ]"
2128,write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip_(list_of_seq):
    return list(zip(*list_of_seq))"
2129,write python program that would merge two dictionaries by adding the second one into the first,"a = {""a"": 1, ""b"": 3}
b = {""c"": 1, ""d"": 3}
a.update(b)"
2130,write a python function that would reverse the given string,"def reverse_string(str_to_be_reversed):
    return str_to_be_reversed[::-1]"
2131,"write a python program that would print ""Hello World""","print(""Hello World"")"
2132,write a python program that would swap variable values,"a = 10
b = 15
a, b = b, a"
2133,write a python program that iterates over a dictionary and prints its keys and values,"a = {""a"":1, ""b"":2, ""c"":3, ""d"":4}
for k, v in a.items():
    print(k, v)"
2134,write a python function that would print the ASCII value of a given character,"def print_ascii(char):
    print(ord(char))"
2135,write a python function that takes in two numbers and returns their HCF,"def hcf(num1, num2):
    smaller = num1 if num1 < num2 else num2
    for i in range(1, smaller+1):
        if (num1 % i == 0) and (num2 % i == 0):
            hcf = i
    return hcf"
2136,write a python function that takes in two numbers and returns their LCM,"def lcm(num1, num2):
    bigger = num1 if num1 > num2 else num2
    while True:
        if (bigger % num1 == 0) and (bigger % num2 == 0):
            break
        bigger += 1
    return bigger"
2137,"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive_sum(n):
    if n <= 1:
        return n
    else:
        return n + recursive_sum(n-1)"
2138,write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete_last_element(list_to_be_processed):
    deleted_element = list_to_be_processed.pop()
    return list_to_be_processed, deleted_element"
2139,write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square_list_elements(list_to_be_squared):
    return list( map(lambda x: x**2, list_to_be_squared) )"
2140,"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","def find_integer_square_roots(num):
    found = False
    for k in range(1, (num//2)+1):
        if ((k**2)==num):
            found = True
            break
    if not found:
        return ""Error - the square root is not an integer""
    return -k, k"
2141,write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input_num = 27
while input_num:
    print(input_num)
    input_num -= 1"
2142,"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
2143,write a python program uses else with for loop,"seq = ""abcde""
for k in seq:
    if k == ""f"":
        break
else:
    print(""f Not Found!"")"
2144,Write a function to return the mean of numbers in a list,"def cal_mean(num_list:list)->float:
    if num_list:
        return sum(num_list)/len(num_list)
    else:
        return None"
2145,Write a function to return the median of numbers in a list,"def cal_median(num_list:list)->float:
    if num_list:
        if len(num_list)%2 != 0:
            return sorted(num_list)[int(len(num_list)/2) - 1]
        else:
            return (sorted(num_list)[int(len(num_list)/2) - 1] + sorted(num_list)[int(len(num_list)/2)])/2
    else:
        return None"
2146,Write a function to return the area of triangle by heros formula,"def cal_triangle_area(a:float,b:float,c:float)->float:
    if a or b or c:
        s = (a+b+c)/2
        if s>a and s>b and s>c:
            area = (s*(s-a)*(s-b)*(s-c))**(1/2)
            return round(area,2)
        else:
            return None
    return None"
2147,Write a function to return the area of a equilateral triangle,"def cal_eq_triangle_area(a:float)->float:
    if a:
        return (3**(1/2))*(a**2)/4
    else:
        return None"
2148,Write a function to return the area of a right angle triangle,"def cal_rt_triangle_area(base:float,height:float)->float:
    if base and height:
        return (base*height)/2
    else:
        return None"
2149,Write a function to return the cartisian distance of a point from origin,"def cal_dist_from_orign(x:float,y:float)->float:
    return (x**2+y**2)**(1/2)"
2150,Write a function to return the cartisian distance between two points,"def cal_cart_distance(x1:float,y1:float,x2:float,y2:float)->float:
    return ((x1-x2)**2+(y1-y2)**2)**(1/2)"
2151,Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root_type(a:float,b:float,c:float):
    if b**2-4*a*c >= 0:
        return 'real'
    else:
        return 'imaginary'"
2152,Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum_of_roots(a:float,c:float):
    if a:
        return c/a
    else:
        return None"
2153,Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod_of_roots(a:float,b:float):
    if a:
        return -b/a
    else:
        return None"
2154,Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"def roots_of_qad_eq(a:float,b:float,c:float):
    d = b**2-4*a*c
    if d >= 0:
        return (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a
    else:
        return None"
2155,Write a function to return the profit or loss based on cost price and selling price,"def find_profit_or_loss(cp,sp):
    if cp > sp:
        return 'loss', cp-sp
    elif cp < sp:
        return 'profit', sp-cp
    else:
        return 'no profit or loss', 0"
2156,Write a function to return the area of a rectangle,"def cal_area_rect(length, breadth):
    return length*breadth"
2157,Write a function to return the area of a square,"def cal_area_square(side):
    return side**2"
2158,Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal_area_rhombus(q1,q2):
    return (q1*q2)/2"
2159,Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal_area_trapezium(a,b,h):
    return h*(a+b)/2"
2160,Write a function to return the area of a circle of raidus r,"def cal_area_circle(r):
    pi = 3.14
    return pi*r**2"
2161,Write a function to return the circumference of a circle,"def cal_circumference(r):
    pi = 3.14
    return 2*pi*r"
2162,Write a function to return the perimeter of a rectangle,"def cal_perimeter_rect(length, bredth):
    return 2*(length+bredth)"
2163,Write a function to return the perimeter of a triangle,"def cal_perimeter_triangle(s1,s2,s3):
    return s1+s2+s3"
2164,Write a function to return the perimeter of a square,"def cal_perimeter_square(side):
    return 4*side"
2165,Write a function to return the perimeter of an equilateral triangle,"def cal_perimeter_eq_triangle(a):
    return 3*a"
2166,Write a function to return the perimeter of a isoscales triangle,"def cal_perimeter_iso_triangle(s1,s2):
    return 2*s1+s2"
2167,Write a function to return the area of an ellipse,"def cal_area_ellipse(minor, major):
    pi = 3.14
    return pi*(minor*major)"
2168,Write a function to return the lateral surface area of a cylinder,"def cal_cylinder_lat_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius*height"
2169,Write a function to return the curved surface area of a cone,"def cal_cone_curved_surf_area(slant_height,radius):
    pi=3.14
    return pi*radius*slant_height"
2170,Write a function to return the total surface area of a cube of side a,"def cal_surface_area_cube(a):
    return 6*(a**2)"
2171,"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal_surface_area_cuboid(l,b,h):
    return 2*(l*b+b*h+h*l)"
2172,Write a function to return the surface area of a sphere,"def cal_area_sphere(radius):
    pi = 3.14
    return 4*pi*(radius**2)"
2173,Write a function to return the surface area of a hemi-sphere,"def cal_area_hemisphere(radius):
    pi = 3.14
    return 2*pi*(radius**2)"
2174,Write a function to return the total surface area of a cylinder,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
2175,Write a function to return the lateral surface area of a cone,"def cal_cone_lateral_surf_area(height,radius):
    pi=3.14
    return pi*radius*(((height**2)+(radius**2))**(1/2))"
2176,Write a function to return the volume of a cylinder,"def cal_cylinder_volume(height, radius):
    pi=3.14
    return pi*(radius**2)*height"
2177,Write a function to return the volume of a cone,"def cal_cone_volume(height,radius):
    pi=3.14
    return pi*(radius**2)*height/3"
2178,Write a function to return the volume of a hemi sphere,"def cal_hemisphere_volume(radius:float)->float:
    pi=3.14
    return (2/3)*pi*(radius**3)"
2179,Write a function to return the volume of a sphere,"def cal_sphere_volume(radius:float)->float:
    pi=3.14
    return (4/3)*pi*(radius**3)"
2180,Write a function to return the volume of a cuboid,"def cal_cuboid_volume(length:float, breadth:float, height:float)->float:
    return length*breadth*height"
2181,Write a function to return the volume of a cube,"def cal_cube_volume(side:float)->float:
    return side**3"
2182,Write a function to return the speed of moving object based of distance travelled in given time,"def cal_speed(distance:float,time:float)->float:
    return distance/time"
2183,Write a function to return the distance covered by a moving object based on speend and given time,"def cal_distance(time:float,speed:float)->float:
    return time*speed"
2184,Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal_time(distance:float,speed:float)->float:
    return distance/speed"
2185,Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal_torque(force:float,theta:float,r:float)->float:
    import math
    return force*r*math.sin(theta)"
2186,Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal_angular_velocity(angular_dist:float,time:float)->float:
    return angular_dist/time"
2187,Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal_focal_length_of_lense(u:float,v:float)->float:
    return (u*v)/(u+v)"
2188,Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal_gforce(mass1:float,mass2:float, distance:float)->float:
    g = 6.674*(10)**(-11)
    return (g*mass1*mass2)/(distance**2)"
2189,Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal_current(resistance:float, voltage:float)->float:
    return voltage/resistance"
2190,Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal_total_cap_in_parallel(cap_list:list)->float:
    return sum(cap_list)"
2191,Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal_total_res_in_parallel(res_list:list)->float:
    return sum([1/r for r in res_list])"
2192,Write a function to calculate the total resistance of resistances in series in a given list,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
2193,Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal_mi_ring(mass:float,radius:float)->float:
    return mass*(radius**2)"
2194,Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
2195,"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find_pressure_of_ideal_gas(volume:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/volume"
2196,Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/pressure"
2197,Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find_temp_of_ideal_gas(pressure:float, volume:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (pressure*volume)/n*r"
2198,"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal_final_velocity(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity + accelration*time"
2199,"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
2200,Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal_half_life(initail_quatity:float, time_elapsed:float, half_life:float)->float:
    return initail_quatity*((1/2)**(time_elapsed/half_life))"
2201,Write a function to calculate the new selling price based on discount percentage,"def cal_sp_after_discount(sp:float,discount:float)->float:
    return sp*(1 - discount/100)"
2202,"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get_si(p:float, r:float, t:float)->float:
    return (p*r*t)/100"
2203,"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get_ci(p:float, r:float, t:float, n:float)->float:
    return round(p*((1+(r/(n*100)))**(n*t)) - p,2)"
2204,Write a function to calculate the energy released by converting mass m in kg to energy,"def cal_energy_by_mass(mass:float)->float:
    c = 300000
    return mass * (c**2)"
2205,Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal_ke(mass:float,velocity:float)->float:
    return (mass*(velocity)**2)/2"
2206,Write a function to calculate the potential energy of an object of mass m at height h,"def cal_pe(mass:float,height:float)->float:
    g = 9.8
    return (mass*g*height)"
2207,Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal_electrostatic_force(q1,q2,d):
    k = 9*(10**9)
    return (k*q1*q2)/(d**2)"
2208,Write a function to calculate the density given mass and volume,"def cal_density(mass,volume):
    return (mass/volume)"
2209,"Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius
     Return the converted temprature","def temp_converter(temp,temp_given_in = 'f'):
    if temp_given_in.lower() == 'f': # Convert to C
        return (temp - 32) * (5/9)
    else: # Convert to F
        return (temp * 9/5) + 32"
2210,Write a function to Get Kth Column of Matrix,"def kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2):
    print(""The original list is : "" + str(test_list))
    K =k
    res = list(zip(*test_list))[K]
    print(""The Kth column of matrix is : "" + str(res))"
2211,Write a function to print all possible subarrays using recursion,"def printSubArrays(arr, start, end):
    if end == len(arr):
        return
    elif start > end:
        return printSubArrays(arr, 0, end + 1)
    else:
        print(arr[start:end + 1])
        return printSubArrays(arr, start + 1, end)
arr = [1, 2, 3]
printSubArrays(arr, 0, 0)"
2212,Write a function to find sum of nested list using Recursion,"total = 0
def sum_nestedlist(l):
    global total
    for j in range(len(l)):
        if type(l[j]) == list:
            sum_nestedlist(l[j])
        else:
            total += l[j]
sum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])
print(total)"
2213,Write a function to find power of number using recursion,"def power(N, P):
    if (P == 0 or P == 1):
        return N
    else:
        return (N * power(N, P - 1))
print(power(5, 2))"
2214,Write a function to Filter String with substring at specific position,"def f_substring():
    test_list = ['program ', 'to', 'filter', 'for', 'substring']
    print(""The original list is : "" + str(test_list))
    sub_str = 'geeks'
    i, j = 0, 5
    res = list(filter(lambda ele: ele[i: j] == sub_str, test_list))
    print(""Filtered list : "" + str(res))"
2215,Write a function to remove punctuation from the string,"def r_punc():
    test_str = ""end, is best : for ! Nlp ;""
    print(""The original string is : "" + test_str)
    punc = r'!()-[]{};:\, <>./?@#$%^&*_~'
    for ele in test_str:
        if ele in punc:
            test_str = test_str.replace(ele, """")
    print(""The string after punctuation filter : "" + test_str)"
2216,Write a function to implement Gnome Sort,"def gnomeSort(arr, n):
    index = 0
    while index < n:
        if index == 0:
            index = index + 1
        if arr[index] >= arr[index - 1]:
            index = index + 1
        else:
            arr[index], arr[index - 1] = arr[index - 1], arr[index]
            index = index - 1
    return arr
arr = [34, 2, 10, -9]
n = len(arr)
arr = gnomeSort(arr, n)
print(""Sorted seqquence after applying Gnome Sort :"")
for i in arr:
    print(i)"
2217,Write a function to implement stooge sort,"def stoogesort(arr, l, h):
    if l >= h:
        return
    if arr[l] > arr[h]:
        t = arr[l]
        arr[l] = arr[h]
        arr[h] = t
    if h - l + 1 > 2:
        t = (int)((h - l + 1) / 3)
        stoogesort(arr, l, (h - t))
        stoogesort(arr, l + t, (h))
        stoogesort(arr, l, (h - t))
arr = [2, 4, 5, 3, 1]
n = len(arr)
stoogesort(arr, 0, n - 1)
for i in range(0, n):
    print(arr[i], end = '')"
2218,Write a function to find the  difference between two times,"def difference(h1, m1, h2, m2):
    t1 = h1 * 60 + m1
    t2 = h2 * 60 + m2
    if (t1 == t2):
        print(""Both are same times"")
        return
    else:
        diff = t2 - t1
    h = (int(diff / 60)) % 24
    m = diff % 60
    print(h, "":"", m)
difference(7, 20, 9, 45)
difference(15, 23, 18, 54)
difference(16, 20, 16, 20)"
2219,Write a function to convert time from 12 hour to 24 hour format,"def convert24(str1):
    if str1[-2:] == ""AM"" and str1[:2] == ""12"":
        return ""00"" + str1[2:-2]
    elif str1[-2:] == ""AM"":
        return str1[:-2]
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"":
        return str1[:-2]
    else:
        return str(int(str1[:2]) + 12) + str1[2:8]
print(convert24(""08:05:45 PM""))"
2220,Write a function to find time for a given angle.,"def calcAngle(hh, mm):
    hour_angle = 0.5 * (hh * 60 + mm)
    minute_angle = 6 * mm
    angle = abs(hour_angle - minute_angle)
    angle = min(360 - angle, angle)
    return angle"
2221,Write a function to print all time when angle between hour hand and minute,"def printTime(theta):
    for hh in range(0, 12):
        for mm in range(0, 60):
            if (calcAngle(hh, mm) == theta):
                print(hh, "":"", mm, sep="""")
                return
    print(""Input angle not valid."")
    return
theta = 90.0
printTime(theta)"
2222,write a python program to read and print contents of a file,"filepath = 'data.txt'
with open(filepath, 'r') as file:
    data = file.read()
    print(f'Data: {data}')"
2223,write a python function to add numbers in a list,"def add(list):
    sum = 0
    for i in range(0, len(list)):
        sum += list[i]
    return sum"
2224,write a function to check if a number is positive or not,"def check(num):
    if num > 0:
        return True
    return False"
2225,write a python function to that performs as ReLU,"def ReLU(num):
    if num > 0:
        return num
    return 0"
2226,write a boolean python function to check if a given string matches a given pattern,"import re
def match(pattern, string):
    if re.match(pattern, string):
        return True
    return False"
2227,write a python program to swap two numbers and print them,"num1 = 2
num2 = 4
num1, num2 = num2, num1
print(num1, num2)"
2228,write a python function to get the maximum element in a list,"def max(list):
    return max(list)"
2229,write a python program list comprehension to make a list of size n of random integers in ranges a and b,"import random
n = 10
a = 1
b = 100
rand = [random.randint(a, b) for i in range(n)]
print(f'list : {rand}')"
2230,write a python program to tokenise a string into words and print them,"string = 'the sun is shining'
words = string.split()
print(words)"
2231,write a python program to print the command line arguements given to a file,"import sys
args = sys.argv 
print(args)"
2232,write a python program to print a string in lowercase,"string = 'SFG';
print(string.lower())"
2233,write a python function to return the absolute difference between two numbers,"def abs_diff(num1, num2):
    return abs(num1 - num2)"
2234,write a program to terminate the program execution,"import sys
sys.exit()"
2235,write a python program to print the datatype of a variable,"x = 2
print(type(x))"
2236,write a python program to sort a list in descending order and print it,"list = [3, 1, 5, 6]
result = sorted(list, reverse = True)
print(result)"
2237,write a python function to check if a string contains a vowel or not,"def check_vowel(string):
    vowels = ['a', 'e', 'i', 'o', 'u']
    for vowel in vowels:
        if vowel in string:
            return True
    return False"
2238,write a python program to filter a list and return words with alphabets only and print it,"list = ['sadgas1', 'sasg.as3$', 'hsd', '^atg', 'gaf']
result = [item for item in list if item.isalpha()]
print(result)"
2239,write a python program to trim whitespace characters from a string and print it,"string = ' asdga \t\r'
print(string.strip())"
2240,write a python program to typecast an integer to string and print it,"x = 2
y = str(x)
print(y)"
2241,write a python program to round up a number and print it,"import math
x = 2.3
y = math.ceil(x)
print(y)"
2242,write a function to accept a simple iterable and print the elements,"def print_iter(iter):
    for item in iter:
        print(item)"
2243,write a function to reverse a string,"def reverse_string(string):
    return string[::-1]"
2244,write a function to check if a string is a palindrome or not,"def reverse_string(string):
    return string[::-1]
def ispalin(string):
    if string == reverse_string(string):
        return True
    return False"
2245,write a python function to return the largest value in a dictionary,"def dic_largest(dic):
    return max(dic.values())"
2246,write a python print to return the first n fibonacci numbers,"def fibonacci(n):
    a, b = 0, 1
    print(a)
    print(b)
    for i in range(n - 2):
        print(a + b)
        a, b = b, a + b"
2247,write a python function to return the number of whitespace separated tokens,"def tokenise(string):
    return len(string.split())"
2248,write a python function to return the cube of a number,"def cube(num)
    return num * num * num"
2249,write a python function to return the area of a circle with given radius,"import math
def area_circle(radius):
    return math.pi * radius * radius"
2250,write a python function to calculate age given date of birth,"from datetime import date 
def calculateAge(birthDate): 
    today = date.today() 
    age = today.year - birthDate.year - 
         ((today.month, today.day) < 
         (birthDate.month, birthDate.day)) 
    return age"
2251,"write a python function to calculate simple interest given principal , rate and time","def simpleIntereset(principal, rate, time):
    return principal * rate * time / 100"
2252,write a function to calculate the frequency of a number in a list,"def frequency(list, num):
    count = 0
    for item in list:
        if item == num:
            count = count + 1
    return count"
2253,write a program to print ascii code of a character,"x = '5'
print(ord(x))"
2254,write a function to calculate factorial of number,"def factorial(num):
    if num == 0:
        return 1
    return num * factorial(num - 1)"
2255,write a function to print if a number is even or odd,"def oddeven(num):
    if num % 2 == 0:
        print('even')
    else:
        print('odd')"
2256,write a python program to accept username and print hello along with the username,"name = input()
print('Hello ' + name)"
2257,write a python program to print current datetime,"from datetime import datetime
now = datetime.now()
print(now)"
2258,write a python function to convert from Celcius to fahrenhiet,"def cel_to_fah(celcius):
    return 9 * celcius / 5 + 32"
2259,write a python program to delete an element from a list,"list = ['a', 'bc', 'd', 'e']
element = 'bc'
list.remove(element)"
2260,Write a program to print the union of two sets,"Set1 = {""1"",""2"",""3""}
Set2 = {""a"",""b"",""c""}
Set = Set1.union(Set2)
print(Set)"
2261,write a program to remove common element between two sets,"s1 = {""apple"", ""banana"", ""cherry""}
s2 = {""google"", ""microsoft"", ""apple""}
s1.difference_update(s2)
print(s1)"
2262,write a program to find a given character in a string and print its position,"a= ""Hello World""
x= a.find(""r"")
print(x)"
2263,write a program to print logrithmic values of any number,"import math
x = 100
base = 5
print(math.log(x,base))"
2264,write a program to join two lists,"list1 = [""a"", ""b"", ""c""]
list2 = [1, 2, 3]
list3 = list1 + list2
print(list3)"
2265,write a function to check a valid email id,"import re 
def check(email):    
    regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
    if(re.search(regex,email)):  
        print(""Valid Email"")            
    else:  
        print(""Invalid Email"")"
2266,write a program to print difference in between today and given date,"import datetime
dd = int(input(""date: ""))
mm = int(input(""month: ""))
yy = int(input(""year: ""))
a = datetime.date(yy,mm,dd)
x = date.today()
print(x-a)"
2267,write a program to check if year is a leap year or not,"year = int(input(""Year: ""))
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(""{0} is a leap year"".format(year))
       else:
           print(""{0} is not a leap year"".format(year))
   else:
       print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
2268,write a function to replace vowels with a specific character K,"def replacewith_K(test_str, K): 
    vowels = 'AEIOUaeiou'
    for ele in vowels: 
        test_str = test_str.replace(ele, K) 
    return test_str"
2269,write a python function to return mean of a list of numbers,"def mean(list):
    sum = 0
    for num in list:
        sum += num
    return sum / len(list)"
2270,write a python class named complex with constructor accepting real and imaginary parts,"class Complex:
    def __init__(self, realpart, imagpart):
        self.r = realpart
        self.i = imagpart"
2271,write a program to convert key-values list to flat dictionary and print it,"from itertools import product 
test_dict = {'month' : [1, 2, 3], 
             'name' : ['Jan', 'Feb', 'March']} 
print(""The original dictionary is : "" + str(test_dict)) 
res = dict(zip(test_dict['month'], test_dict['name'])) 
print(""Flattened dictionary : "" + str(res))"
2272,write a program to remove duplicate elements in a list and print the list,"test_list = [1, 3, 5, 6, 3, 5, 6, 1] 
print (""The original list is : "" +  str(test_list)) 
res = [] 
for i in test_list: 
    if i not in res: 
        res.append(i) 
print (""The list after removing duplicates : "" + str(res))"
2273,write a program to print sum of all even numbers in a list,"ls = [1,2,3,4,5,6,7,8,10,22]
sum = 0
for i in ls:
    if i % 2 == 0:
        sum += i
print(sum)"
2274,write a program to write a string in a file,"filename = 'file1.txt'
string = ""programming in \n python""
f1 = open(filename,'w')
f1.write(string)
f1.close()"
2275,write a function to check weather a number is prime or not,"def isprime(num):
    for i in range(2, num):
        if num % i == 0:
            return False
    return True"
2276,write a program to print binary of a decimal number n,"binaryNum = [0] * n; 
i = 0; 
while (n > 0):  
    binaryNum[i] = n % 2; 
    n = int(n / 2); 
    i += 1; 
for j in range(i - 1, -1, -1): 
    print(binaryNum[j], end = """")"
2277,write a function to check if a number is perfect square or not,"import math
def checksquare(num):
    x = int(math.sqrt(num))
    if x * x == num:
        return True
    return False"
2278,write a program to print the sine value of a number,"import math
num = 3
print(math.sin(num))"
2279,write a function to calculate the hypotenuse of a triangle give base and height,"import math
def calc_hypotenuse(base, height):
    return math.sqrt(base * base + height * height)"
2280,write a function to calculate the sum of digits of a number,"def sum_of_digits(num):
    sum = 0
    while(num > 0):
        sum += num % 10
        num = num // 10
    return sum"
2281,write a python function to find URLs in a string,"import re 
def Find(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
2282,write a python function to calculate the dot product of two lists,"def dot(l1, l2):
    return sum(x*y for x,y in zip(l1, l2))"
2283,write a function to accept input as feet and inches into centimeters,"def height_into_cms(feet, inches):
    ininches = feet * 12 + inches
    return ininches * 2.54"
2284,write a python function to convert temperature from celcius to kelvin,"def cel_to_kel(celcius):
    return celcius + 273"
2285,write a python program to find difference between elements of two lists and print it,"l1 = [1, 2, 3, 4]
l2 = [5, 8, 7, 0]
res = []
for i in range(len(l1)):
    res.append(l1[i] - l2[i])
print(res)"
2286,write a function to calculate BMI given height in meters and weights in kgs,"def bmi(height, weight):
    return weight / (height * height)"
2287,write a function to calculate area of a triangle given height and base,"def area_triangle(base, height):
    return 0.5 * base * height"
2288,write a program to print the bitwise OR of two numbers,"num1 = 5
num2 = 10
print(num1 | num2)"
2289,write a function to convert weight from kgs to pounds,"def kgs_to_pounds(weight_kg):
    return weight_kg * 2.2"
2290,write a function to convert miles to kilometers,"def miles_to_kms(dist):
    return dist * 1.609"
2291,write a function to calculate speed given distance covered and time taken,"def calspeed(dist, time):
    return dist / time"
2292,write a python function to return count of number of vowels in a sentence,"def count_vowels(sentence):
   count = 0
   for letter in sentence:
      if letter in ""aeiouAEIOU"":
         count += 1
   return count"
2293,write a python function to check if a given string is a palindrome,"def is_palindrome(string):
   return string == string[::-1]"
2294,write a program to print the nth fibonacci number,"n1 = 1
n2 = 1
n = 5
for _ in range(n):
   n1, n2 = n2, n1 + n2
print(n2)"
2295,write a function to return the square of first N numbers,"def get_squares(n):
   return [i*i for i in range(n)]"
2296,write a python function to return only even numbers in a list,"def filter_even(nums):
   return list(filter(lambda num: num % 2 == 0, nums))"
2297,write a python function to return only odd numbers in a list,"def filter_odd(nums):
   return list(filter(lambda num: num % 2 == 1, nums))"
2298,write a python program to calculate the sum of numbers using reduce and print it,"from functools import reduce
nums = [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]
total_sum = reduce(lambda a, b: a + b, nums)
print(f'Sum: {total_sum}')"
2299,write a python program to print unique numbers in a list,"numbers = [1, 2, 2, 3, 4, 4, 5, 6]
unique = set(numbers)
print(f'Unique numbers: {list(unique)}')"
2300,write a python program to count how many times each letter occurs in a string,"string = 'The quick brown fox jumps over the lazy dog'
countmap = {}
for letter in string:
   if letter in countmap:
      countmap[letter] += 1
   else:
      countmap[letter] = 1
print(f'Count of letters: {countmap}')"
2301,write a python function to repeat a given string n times,"def repeat_string(string, frequency):
   return string * frequency"
2302,write a program to capitalize the first letter of every word in a string and print it,"string = 'The quick brown fox jumps over the lazy dog'
print(string.title())"
2303,write a function that merges two dictionaries,"def merge_dictionaries(dict1, dict2):
   return {**dict1, **dict2}"
2304,write a program to merge two lists into a dictionary,"keys = [1, 2, 3]
values = ['aye', 'bee', 'sea']
dictionary = dict(zip(keys, values))"
2305,write a python function that inverts the key and values in a dict and returns it,"def invert_dict(dictionary):
   inverted_dict = {value: key for key, value in dictionary.items()}
   return inverted_dict"
2306,write a python program to print the difference in days between two dates,"from datetime import date
date1 = date(2020, 10, 25)
date2 = date(2020, 12, 25)
print(f'Difference between dates: {(date2 - date1).days}')"
2307,write a python function that returns the weighted average of numbers,"def get_weighted_average(numbers, weightage):
   return sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)"
2308,write a python program to print if year is a leap year or not,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
      if (year % 400) == 0:
         print(""{0} is a leap year"".format(year))
      else:
         print(""{0} is not a leap year"".format(year))
   else:
      print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
2309,write a python program to check and print if a number is prime,"num = 407
if num > 1:
   for i in range(2,num):
      if (num % i) == 0:
         print(num,""is not a prime number"")
         break
   else:
      print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
2310,write a python program to print all prime numbers in a given interval,"lower = 900
upper = 1000
for num in range(lower, upper + 1):
   if num > 1:
      for i in range(2, num):
         if (num % i) == 0:
               break
      else:
         print(num)"
2311,write a python function to return words in a sentence in sorted order,"def get_sorted_words(sentence):
   words = [word for word in sentence.split()]
   words.sort()
   return words"
2312,write a python function to remove all punctuation from a string,"def remove_punctuations(sentence):
   punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
   no_punct = ''
   for char in sentence:
      if char not in punctuations:
         no_punct = no_punct + char
   return no_punct"
2313,write a python function to return the nth fibonacci number,"def fib(n):
   if n <= 1:
      return n
   else:
      return (fib(n-1) + fib(n-2))"
2314,write a python function to return the sum of first n numbers,"def sum_of_nums(n):
   if n <= 1:
      return n
   else:
      return n + sum_of_nums(n-1)"
2315,write a python function to return the factorial of a number,"def fact(n):
   if n == 1:
      return n
   else:
      return n * fact(n-1)"
2316,write a python program to print the factors of a number,"num = 320
for i in range(1, num + 1):
   if num % i == 0:
      print(i)"
2317,write a python function that returns the lcm of two numbers,"def lcm(x, y):
   if x > y:
      greater = x
   else:
      greater = y
   while(True):
      if((greater % x == 0) and (greater % y == 0)):
         lcm = greater
         break
      greater += 1
   return lcm"
2318,write a python function that returns the gcd of two numbers,"def gcd(x, y):
   if x > y:
      smaller = y
   else:
      smaller = x
   for i in range(1, smaller + 1):
      if((x % i == 0) and (y % i == 0)):
         gcd = i
   return gcd"
2319,write a python program to print the ASCII value of a character,"character = 'x'
print(f'The ASCII value of {character} is {ord(character)}')"
2320,write a python program to print the character of an ASCII value,"value = 65
print(f'The ASCII value {value} is of the character {chr(value)}')"
2321,write a python function to print the binary value of a decimal number,"def print_binary(dec):
   print(bin(dec))"
2322,write a python function to print the octal value of a decimal number,"def print_octal(dec):
   print(oct(dec))"
2323,write a python function to print the hexadecimal value of a decimal number,"def print_hexadecimal(dec):
   print(hex(dec))"
2324,write a python program that prints the sum of natural numbers up to a given number,"num = 16
sum = 0
while (num > 0):
   sum += num
   num -= 1
print(f'The sum is {sum}')"
2325,write a python function to return the number of lines in a file,"def count_lines(filename):
   with open(filename, 'r') as f:
      contents = f.read().split('\n')
      return len(contents)"
2326,write a program to print the current date and time,"from datetime import datetime
now = datetime.now()
print(now)"
2327,write a python program to extract the file name and extension of a file,"import os
filename, extension = os.path.splitext('/path/to/some/file.ext')"
2328,write a python program to merge two lists,"odd = [1, 3, 5, 7, 9]
even = [2, 4, 6, 8, 10]
odd.extend(even)"
2329,write a python program to print a random vowel,"import random
vowels = ['a', 'e', 'i', 'o', 'u']
print(random.choice(vowels))"
2330,write a python program to flip a coin 100 times and print number of heads and tails,"import random
heads = 0
tails = 0
for i in range(100):
   if(random.choice([True, False])):
      heads += 1
   else:
      tails += 1
print(f'{heads} heads, {tails} tails')"
2331,write a python program to print common elements in two lists,"list_a = [1, 2, 3, 4, 5, 6, 7]
list_b = [2, 4, 6, 8, 10]
print(f'Common elements: { set(list_a).intersection(set(list_b)) }')"
2332,write a python program to print squares of numbers until 20,"for i in range(20):
   print(i*i)"
2333,write a python program to print the number of uppercase and lowercase letters in a string,"sentence = 'The Quick Brown Fox'
lowercase = 0
uppercase = 0
for c in sentence:
   if c.isupper():
      uppercase += 1
   elif c.islower():
      lowercase += 1
   else:
      pass
print(f'Lowercase: {lowercase}, Uppercase: {uppercase}')"
2334,write a python program to print the number of letters and digits in sentence,"sentence = 'The Quick 123 Fox'
digits = 0
letters = 0
for c in sentence:
   if c.isdigit():
      digits += 1
   elif c.isalpha():
      letters += 1
   else:
      pass
print(f'Digits: {digits}, Letters: {letters}')"
2335,write a python function to print a given string n times,"def printn(string, n):
   print(string * n)"
2336,write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"square_dict = {}
for i in range(1, 11):
   square_dict[i] = i*i"
2337,write a python class called Person that has a name property,"class Person:
   def __init__(self, name):
      self.name = name"
2338,write a python function that takes two strings as a parameter and prints the shorter one,"def print_shorter(str1, str2):
   if (len(str1) > len(str2)):
      print(str2)
   else:
      print(str1)"
2339,write a program to compute the count of each word in a sentence and print it,"word_freq = {}
line = 'how many how words does this many have'
for word in line.split():
   word_freq[word] = word_freq.get(word, 0) + 1
print(word_freq)"
2340,write a python function that squares every number in a list using a list comprehension and returns the result,"def square_numbers(nums):
   return [i*i for i in nums]"
2341,write a python program that converts a binary number to decimal and prints it,"binary_num = '1010101'
decimal_num = int(binary_num, 2)
print(decimal_num)"
2342,write a python program that converts a octal number to octal and prints it,"octal_num = '17'
decimal_num = int(octal_num, 8)
print(decimal_num)"
2343,write a python program that converts a hexadecimal number to hexadecimal and prints it,"hexadecimal_num = 'FF'
decimal_num = int(hexadecimal_num, 16)
print(decimal_num)"
2344,write a python program that alphabetically sorts the words in a sentence and prints it,"sentence = 'the quick brown fox jumps'
sorted_words = sentence.split(' ')
sorted_words.sort()
print(' '.join(sorted_words))"
2345,write a python program that prints the area of a circle,"import math
radius = 5
print(f'Area: {math.pi * radius * radius}')"
2346,write a python function that returns a dictionary with the area and perimeter of a rectangle,"def calculate_rect_properties(width, height):
   return {
      'perimeter': 2 * (width + height),
      'area': width * height
   }"
2347,write a python program that removes all blank spaces in a sentence and prints it,"sentence = 'the quick brown fox'
print(sentence.replace(' ', ''))"
2348,write a python program that prints all characters at even indexes in a sentence,"sentence = 'the quick brown fox'
print(sentence[::2])"
2349,write a python program that prints every third character in a sentence,"sentence = 'the quick brown fox'
print(sentence[::3])"
2350,write a program to remove odd numbers from a list using list comprehensions,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_odd_nums = [i for i in nums if i % 2 == 0]"
2351,write a program to remove even numbers from a list using list comprehensions,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_even_nums = [i for i in nums if i % 2 == 1]"
2352,write a program to print 5 random numbers between 100 and 200,"import random
print(random.sample(range(100, 200), 5))"
2353,write a program to print 5 even random numbers between 10 and 100,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 0], 5))"
2354,write a program to print 5 odd random numbers between 100 and 200,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 1], 5))"
2355,write a program to print 5 random numbers divisible by 4 between 100 and 200,"import random
print(random.sample([i for i in range(10, 100) if i%4 == 0], 5))"
2356,write a program that adds corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
sum_list = [a+b for (a,b) in zip(list1, list2)]
print(sum_list)"
2357,write a program that subtracts corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
diff_list = [a-b for (a,b) in zip(list1, list2)]
print(diff_list)"
2358,write a program that multiplies corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
prod_list = [a*b for (a,b) in zip(list1, list2)]
print(prod_list)"
2359,write a program that divides corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
quot_list = [a/b for (a,b) in zip(list1, list2)]
print(quot_list)"
2360,write a python program to print 5 random vowels,"import random
vowels = ['a', 'e', 'i', 'o', 'u']
print([random.choice(vowels) for _ in range(5)])"
2361,write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"cube_dict = {}
for i in range(1, 11):
   cube_dict[i] = i ** 3"
2362,write a program to create a string variable and print the amount of memory it consumes,"import sys
string_var = 'string variable'
print(sys.getsizeof(string_var))"
2363,write a python function that joins strings in a list and returns the result,"def join_string_parts(str_list):
   return "" "".join(str_list)"
2364,write a python program that reverses an integer and prints it,"num = 12345
reversed = int(str(num)[::-1])
print(reversed)"
2365,write a python program that sorts and prints a comma separated list of values,"values = 'one,two,three,four,five'
items = values.split(',')
items.sort()
print(','.join(items))"
2366,write a python program to print unique words in a sentence,"sentence = 'the king is the one'
unique = set(sentence.split(' '))
print(unique)"
2367,write a python program that multiplies a tuple n times and print the result,"my_tuple = (1, 2, 3)
n = 3
print(my_tuple * 3)"
2368,write a python program to multiply three numbers and print the result,"num1 = 2
num2 = 4
num3 = 6
print(num1 * num2 * num3)"
2369,write a python program to print the sum of first n numbers,"n = 10
sum = 0
while n > 0:
   sum += n
   n -= 1
print(sum)"
2370,write a python program to print the factorial of a number,"num = 5
fact = 1
while num > 0:
   fact *= num
   num -= 1
print(fact)"
2371,write a python function to return the factors of a number,"def get_factors(num):
   factors = []
   for i in range(1, num + 1):
      if num % i == 0:
         factors.append(i)
   return factors"
2372,write a python function that returns True if the product of two provided numbers is even,"def is_prod_even(num1, num2):
   prod = num1 * num2
   return not prod % 2"
2373,write a python function that returns True if the sum of two provided numbers is even,"def is_prod_even(num1, num2):
   sum = num1 + num2
   return not sum % 2"
2374,write a python program to print the first 5 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[:5])"
2375,write a python program to print the last 3 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[-3:])"
2376,write a python program to print the items in a list apart from the first 4,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[4:])"
2377,write a python function that makes all negative values in a list zero and returns it,"def make_negative_zero(items):
   return [0 if item < 0 else item for item in items]"
2378,write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist = [1, 2, 3, 4, 5]
shuffle(mylist)
print(mylist)"
2379,write a python program that adds the elements of a list to a set and prints the set,"my_set = {1, 2, 3}
my_list = [4, 5, 6]
my_set.update(my_list)
print(my_set)"
2380,write a python program that prints the circumference of a circle,"import math
radius = 10
print(f'Area: {2 * math.pi * radius}')"
2381,write a python program that prints the area of a rectangle,"length = 10
width = 5
print(f'Area: {length * width}')"
2382,write a python program that prints the area of a square,"side = 5
print(f'Area: {side * side}')"
2383,write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number_dict = {
   1: 'one',
   2: 'two',
   3: 'three',
   4: 'four',
   5: 'five'
}"
2384,write a python program to remove words less than a specified length from a sentence,"sentence = 'this is my sentence and i will write it my way'
minlength = 3
result = [word for word in sentence.split(' ') if len(word) >= minlength]"
2385,write a python program to keep words less than a specified length in a sentence,"sentence = 'this is my sentence and i will write it my way'
maxlength = 3
result = [word for word in sentence.split(' ') if len(word) <= minlength]"
2386,"93
 write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list","def make_all_positive(nums):
   return [num if num > 0 else -num for num in nums]"
2387,write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make_all_negative(nums):
   return [num if num < 0 else -num for num in nums]"
2388,write a python function to return a set of all punctuation used in a string,"def get_punctuations(sentence):
   punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
   used_punctuation = set()
   for char in sentence:
      if char in punctuations:
         used_punctuation.add(char)
   return used_punctuation"
2389,write a python program to print the words in a sentence in reverse order,"sentence = 'the quick brown fox'
words = sentence.split(' ')
words.reverse()
print(' '.join(words))"
2390,write a python program to replace each word in a sentence with the length of the word and print it,"sentence = 'the quick brown fox jumps over the lazy dog'
words = sentence.split(' ')
lengths = [str(len(word)) for word in words]
print(' '.join(lengths))"
2391,write a python program to convert a set to a list,"myset = {1, 2, 4, 7}
mylist = list(myset)"
2392,write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my_list = [1, 8, 1, 2, 2, 9]
my_dict = {key: value for key, value in enumerate(my_list)}"
2393,Write a function that adds 2 iterables a and b such that a is even and b is odd,"def add_even_odd_list(l1:list,l2:list)-> list:
    return [a+b for a,b in zip(l1,l2) if a%2==0 and b%2!=0]"
2394,Write a function that strips every vowel from a string provided,"def strip_vowels(input_str:str)->str:
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ]
    return ''.join(list(filter(lambda x: x not in vowels, input_str)))"
2395,write a function that acts like a ReLU function for a 1D array,"def relu_list(input_list:list)->list:
    return [(lambda x: x if x >= 0 else 0)(x) for x in input_list]"
2396,Write a function that generates Factorial of number,"def factorial(n):
    if n == 0 or n ==1:
        return 1
    else:
        return n*factorial(n-1)"
2397,Write a function that returns length of the list,"def list_length(l):
    return len(l)"
2398,Write a function that sorts list of numbers and returns top element,"def biggest_no(l:list)->int:
    sorted(l)"
2399,Write a function to print a string by repeating it n times,"def print_repeatnstring(text:str, n:int)-> str:
    return text*n"
2400,Write a function to merge two lists element wise,"def merge_lists(l1:list, l2:list):
    return list(zip(l1,l2))"
2401,Write a function to merge two lists element wise,"def merge_lists(l1:list, l2:list):
    return list(zip(l1,l2))"
2402,Write a function to append two lists,"def append_lists(l1:list, l2:list)->list:
    return l1.extend(l2)"
2403,Write a function to return reverse of a list,"def reverse_list(l1:list)->list:
    return l1[::-1]"
2404,Write a function to adds two lists element wise,"def adds_listelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2)]"
2405,Write a function to Subtracts two lists element wise,"def sub_listelements(l1:list, l2:list):
    return [i-j for i, j in zip(l1,l2)]"
2406,Write a function to adds two lists element wise only if numbers are even,"def adds_listevenelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2) if i*j%2 == 0]"
2407,Write a function to multiplies two lists element wise only if numbers are odd,"def adds_listoddelements(l1:list, l2:list):
    return [i*j for i, j in zip(l1,l2) if i*j%2 == 1]"
2408,Write a function that returns list of elements with n power to elements of list,"def n_power(l1:list, power:int)->list:
    return [i**power for i in l1]"
2409,Write a function that generates fibbonacci series,"def Fibonacci(n:int)-> int:
    if n==1:
        fibonacci = 0
    elif n==2:
        fibonacci = 1
    else:
        fibonacci = Fibonacci(n-1) + Fibonacci(n-2)
    return fibonacci"
2410,Write a function that returns sine value of the input,"def sin(x:float) -> float:
    import math
    return math.sin(x)"
2411,Write a function that returns derivative of sine value of the input,"def derivative_sin(x:float)-> float:
    import math
    return math.cos(x)"
2412,Write a function that returns tan value of the input,"def tan(x:float) -> float:
    import math
    return math.tan(x)"
2413,Write a function that returns derivative of tan value of the input,"def derivative_tan(x:float)-> float:
    import math
    return (1/math.cos(x))**2"
2414,Write a function that returns cosine value of the input,"def cos(x:float) -> float:
    import math
    return math.cos(x)"
2415,Write a function that returns cosine value of the input,"def derivative_cos(x:float)-> float:
    import math
    return -(math.sin(x))"
2416,Write a function that returns the exponential value of the input,"def exp(x) -> float:
    import math
    return math.exp(x)"
2417,Write a function that returns Gets the derivative of exponential of x,"def derivative_exp(x:float) -> float:
    import math
    return math.exp(x)"
2418,Write a function that returns log of a function,"def log(x:float)->float:
    import math
    return math.log(x)"
2419,Write a function that returns derivative of log of a function,"def derivative_log(x:float)->float:
    return (1/x)"
2420,Write a function that returns relu value of the input,"def relu(x:float) -> float:
    x = 0 if x < 0 else x
    return x"
2421,Write a function that returns derivative derivative relu value of the input,"def derivative_relu(x:float) -> float:
    x = 1 if x > 0 else 0
    return x"
2422,Write a function that returns runs a garbage collector,"def clear_memory():
    import gc
    gc.collect()"
2423,Write a function that calculates the average time taken to perform any transaction by  Function fn averaging the total time taken for transaction over Repetations,"def time_it(fn, *args, repetitons= 1, **kwargs):
    import time
    total_time = []
    for _ in range(repetitons):
        start_time = time.perf_counter()
        fn(*args,**kwargs)
        end_time = time.perf_counter()
        ins_time = end_time - start_time
        total_time.append(ins_time)
    return sum(total_time)/len(total_time)"
2424,Write a function to identify if value is present inside a dictionary or not,"def check_value(d:dict, value)->bool:
    return any(v == value for v in dict.values())"
2425,Write a function to identify to count no of instances of a value  inside a dictionary,"def count_value(d:dict, value)->bool:
    return list(v == value for v in dict.values()).count(True)"
2426,Write a function to identify if value is present inside a list or not,"def check_listvalue(l:list, value)->bool:
    return value in l"
2427,Write a function to identify if value is present inside a tuple or not,"def check_tuplevalue(l:tuple, value)->bool:
    return value in l"
2428,Write a function that returns lowercase string,"def str_lowercase(s:str):
    return s.lower()"
2429,Write a function that returns uppercase string,"def str_uppercase(s:str):
    return s.upper()"
2430,Write a function that removes all special characters,"def clean_str(s):
    import re
    return re.sub('[^A-Za-z0-9]+', '', s)"
2431,Write a function that returns a list sorted ascending,"def ascending_sort(l:list):
    sorted(l, reverse=False)"
2432,Write a function that returns a list sorted descending,"def descending_sort(l:list):
    sorted(l, reverse=True)"
2433,Write a function that returns a dictionary sorted descending by its values,"def descending_dict_valuesort(d:dict):
    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[1])}"
2434,Write a function that returns a dictionary sorted ascending by its values,"def ascending_dict_valuesort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[1])}"
2435,Write a function that returns a dictionary sorted descending by its keys,"def descending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[0])}"
2436,Write a function that returns a dictionary sorted ascending by its keys,"def ascending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[0])}"
2437,Write a function that returns a replace values in string with values provided,"def replace_values(s:str, old, new)->str:
    s.replace(old, new)"
2438,Write a function that joins elements of list,"def join_elements(l:list)-> str:
    return (''.join(str(l)))"
2439,Write a function that splits the elements of string,"def split_elements(s:str, seperator)-> list:
    return s.split(seperator)"
2440,Write a function that returns sum of all elements in the list,"def sum_elements(l:list):
    return sum(l)"
2441,Write a function that returns sum of all odd elements in the list,"def sum_even_elements(l:list):
    return sum([i for i in l if i%2==0])"
2442,Write a function that returns sum of all odd elements in the list,"def sum_odd_elements(l:list):
    return sum([i for i in l if i%2==1])"
2443,write a python function to count number of times a function is called,"def counter(fn):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count += 1
        print(f'Function {fn.__name__} was called {count} times.')
        return fn(*""args, **kwargs)    
    return inner"
2444,write a python function to remove duplicate items from the list,"def remove_duplicatesinlist(lst):
    return len(lst) == len(set(lst))"
2445,write a python program to add and print two user defined list using map,"input_string = input(""Enter a list element separated by space "")
list1  = input_string.split()
input_string = input(""Enter a list element separated by space "")
list2  = input_string.split()
list1 = [int(i) for i in list1] 
list2 = [int(i) for i in list2] 
result = map(lambda x, y: x + y, list1, list2) 
print(list(result))"
2446,write a python function to convert list of strings to list of integers,"def stringlist_to_intlist(sList): 
  return(list(map(int, sList)))"
2447,write a python function to map multiple lists using zip,"def map_values(*args):
  return set(zip(*args))"
2448,"write a generator function in python to generate infinite square of numbers using yield
     An Infinite loop to generate squares","def nextSquare(): 
    i = 1;  
    while True: 
        yield i*i                 
        i += 1"
2449,"write a python generator function for generating Fibonacci Numbers 
     Initialize first two Fibonacci Numbers  
     One by one yield next Fibonacci Number","def fib(limit): 
    a, b = 0, 1  
    while a < limit: 
        yield a 
        a, b = b, a + b"
2450,write a python program which takes user input tuple and prints length of each tuple element,"userInput = input(""Enter a tuple:"")
x = map(lambda x:len(x), tuple(x.strip() for x in userInput.split(',')))
print(list(x))"
2451,write a python function using list comprehension to find even numbers in a list,"def find_evennumbers(input_list):
  list_using_comp = [var for var in input_list if var % 2 == 0] 
  return list_using_comp"
2452,write a python function to return dictionary of two lists using zip,"def dict_using_comp(list1, list2):
  dict_using_comp = {key:value for (key, value) in zip(list1, list2)} 
  return dict_using_comp"
2453,Write a function to get list of profanity words from Google profanity URL,"def profanitytextfile():
    url = ""https://github.com/RobertJGabriel/Google-profanity-words/blob/master/list.txt""
    html = urlopen(url).read()
    soup = BeautifulSoup(html, features=""html.parser"")
    textlist = []
    table = soup.find('table')
    trs = table.find_all('tr')
    for tr in trs:
        tds = tr.find_all('td')
        for td in tds:
            textlist.append(td.text)
    return textlist"
2454,write a python program to find the biggest character in a string,"bigChar = lambda word: reduce(lambda x,y: x if ord(x) > ord(y) else y, word)"
2455,write a python function to sort list using heapq,"def heapsort(iterable):
    from heapq import heappush, heappop
    h = []
    for value in iterable:
        heappush(h, value)
    return [heappop(h) for i in range(len(h))]"
2456,write a python function to return first n items of the iterable as a list,"def take(n, iterable):    
    import itertools
    return list(itertools.islice(iterable, n))"
2457,write a python function to prepend a single value in front of an iterator,"def prepend(value, iterator):    
    import itertools
    return itertools.chain([value], iterator)"
2458,write a python function to return an iterator over the last n items,"def tail(n, iterable):    
    from collections import deque
    return iter(deque(iterable, maxlen=n))"
2459,"write a python function to advance the iterator n-steps ahead
     Use functions that consume iterators at C speed.
         feed the entire iterator into a zero-length deque
         advance to the empty slice starting at position n","def consume(iterator, n=None):
    import itertools
    from collections import deque
    ""Advance the iterator n-steps ahead. If n is None, consume entirely.""
    if n is None:
        deque(iterator, maxlen=0)
    else:
        next(itertools.islice(iterator, n, n), None)"
2460,write a python function to return nth item or a default value,"def nth(iterable, n, default=None):
    from itertools import islice
    return next(islice(iterable, n, None), default)"
2461,write a python function to check whether all elements are equal to each other,"def all_equal(iterable):
    from itertools import groupby
    g = groupby(iterable)
    return next(g, True) and not next(g, False)"
2462,write a python function to count how many times the predicate is true,"def quantify(iterable, pred=bool):
    return sum(map(pred, iterable))"
2463,write a python function to emulate the behavior of built-in map() function,"def pad_none(iterable):
    """"""Returns the sequence elements and then returns None indefinitely.
    Useful for emulating the behavior of the built-in map() function.
    """"""
    from itertools import chain, repeat
    return chain(iterable, repeat(None))"
2464,write a python function to return the sequence elements n times,"def ncycles(iterable, n):
    from itertools import chain, repeat
    return chain.from_iterable(repeat(tuple(iterable), n))"
2465,write a python function to return the dot product of two vectors,"def dotproduct(vec1, vec2):
    return sum(map(operator.mul, vec1, vec2))"
2466,write a python function to flatten one level of nesting,"def flatten(list_of_lists):
    from itertools import chain
    return chain.from_iterable(list_of_lists)"
2467,write a python function to repeat calls to function with specified arguments,"def repeatfunc(func, times=None, *args):
    from itertools import starmap, repeat
    if times is None:
        return starmap(func, repeat(args))
    return starmap(func, repeat(args, times))"
2468,write a python function to convert iterable to pairwise iterable,"def pairwise(iterable):
    from itertools import tee
    a, b = tee(iterable)
    next(b, None)
    return zip(a, b)"
2469,"write a python function to collect data into fixed-length chunks or blocks
     grouper('ABCDEFG', 3, 'x') --> ABC DEF Gxx""","def grouper(iterable, n, fillvalue=None):
    from itertools import zip_longest
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)"
2470,"write a python program to create round robin algorithm: ""roundrobin('ABC', 'D', 'EF') --> A D E B F C""
     Recipe credited to George Sakkis
             Remove the iterator we just exhausted from the cycle.","def roundrobin(*iterables):    
    from itertools import islice, cycle
    num_active = len(iterables)
    nexts = cycle(iter(it).__next__ for it in iterables)
    while num_active:
        try:
            for next in nexts:
                yield next()
        except StopIteration:
            num_active -= 1
            nexts = cycle(islice(nexts, num_active))"
2471,"write a python function to use a predicate and return entries particition into false entries and true entries
     partition(is_odd, range(10)) --> 0 2 4 6 8   and  1 3 5 7 9","def partition(pred, iterable):
    from itertools import filterfalse, tee
    t1, t2 = tee(iterable)
    return filterfalse(pred, t1), filter(pred, t2)"
2472,write a python function to return powerset of iterable,"def powerset(iterable):
    ""powerset([1,2,3]) --> () (1,) (2,) (3,) (1,2) (1,3) (2,3) (1,2,3)""
    from itertools import chain, combinations
    s = list(iterable)
    return chain.from_iterable(combinations(s, r) for r in range(len(s)+1))
list(powerset([1,2,3]))"
2473,"write a python function to list all unique elements, preserving order
     unique_everseen('AAAABBBCCDAABBB') --> A B C D
     unique_everseen('ABBCcAD', str.lower) --> A B C D","def unique_everseen(iterable, key=None):
    from itertools import filterfalse
    seen = set()
    seen_add = seen.add
    if key is None:
        for element in filterfalse(seen.__contains__, iterable):
            seen_add(element)
            yield element
    else:
        for element in iterable:
            k = key(element)
            if k not in seen:
                seen_add(k)
                yield element"
2474,"write a python function to list unique elements, preserving order remembering only the element just seen.""
     unique_justseen('AAAABBBCCDAABBB') --> A B C D A B
     unique_justseen('ABBCcAD', str.lower) --> A B C A D","def unique_justseen(iterable, key=None):
    import operator
    from itertools import groupby    
    return map(next, map(operator.itemgetter(1), groupby(iterable, key)))"
2475,"write a python function to return random selection from itertools.product(*args, **kwds)","def random_product(*args, repeat=1):
    import random
    pools = [tuple(pool) for pool in args] * repeat
    return tuple(map(random.choice, pools))"
2476,"write a python function to return random selection from itertools.permutations(iterable, r)","def random_permutation(iterable, r=None):
    import random
    pool = tuple(iterable)
    r = len(pool) if r is None else r
    return tuple(random.sample(pool, r))"
2477,"write a python function to random select from itertools.combinations(iterable, r)","def random_combination(iterable, r):
    import random
    pool = tuple(iterable)
    n = len(pool)
    indices = sorted(random.sample(range(n), r))
    return tuple(pool[i] for i in indices)"
2478,"write a python function to perform random selection from itertools.combinations_with_replacement(iterable, r)","def random_combination_with_replacement(iterable, r):
    import random
    pool = tuple(iterable)
    n = len(pool)
    indices = sorted(random.choices(range(n), k=r))
    return tuple(pool[i] for i in indices)"
2479,write a python function to locate the leftmost value exactly equal to x,"def index(a, x):
    from bisect import bisect_left    
    i = bisect_left(a, x)
    if i != len(a) and a[i] == x:
        return i
    raise ValueError"
2480,write a python function to locate the rightmost value less than x,"def find_lt(a, x):
    from bisect import bisect_left  
    i = bisect_left(a, x)
    if i:
        return a[i-1]
    raise ValueError"
2481,write a python function to find rightmost value less than or equal to x,"def find_le(a, x):
    from bisect import bisect_right  
    i = bisect_right(a, x)
    if i:
        return a[i-1]
    raise ValueError"
2482,write a python function to find leftmost value greater than x,"def find_gt(a, x):
    from bisect import bisect_right 
    i = bisect_right(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
2483,write a python function to find leftmost item greater than or equal to x,"def find_ge(a, x):
    from bisect import bisect_left 
    i = bisect_left(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
2484,write a python function to map a numeric lookup using bisect,"def grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA'):
    from bisect import bisect
    i = bisect(breakpoints, score)
    return grades[i]"
2485,write a regex pattern in python to print all adverbs and their positions in user input text,"import re
text = input(""Enter a string: "")
for m in re.finditer(r""\w+ly"", text):
    print('%02d-%02d: %s' % (m.start(), m.end(), m.group(0)))"
2486,write a python function to read a CSV file and print its content,"def read_csv(filename):
    import csv
    with open(filename, newline='') as f:
        reader = csv.reader(f)
        for row in reader:
            print(row)"
2487,write a python snippet to convert list into indexed tuple,"test_list = [4, 5, 8, 9, 10] 
list(zip(range(len(test_list)), test_list))"
2488,write a python function to split word into chars,"def split(word): 
    return [char for char in word]"
2489,write a python function to pickle data to a file,"def pickle_data(data, pickle_file):
  import pickle
  with open(pickle_file, 'wb') as f:
      pickle.dump(data, f, pickle.HIGHEST_PROTOCOL)
  return None"
2490,write a python function to load pickle data from a file,"def load_pickle_data(pickle_file):
  import pickle
  with open(pickle_file, 'rb') as f:
      data = pickle.load(f)
  return data"
2491,write a python function to check if a given string is a palindrome,"def isPalindrome(s):
    return s == s[::-1]"
2492,write a python function to check if a given string is symmetrical,"def symmetry(a): 
    n = len(a) 
    flag = 0
    if n%2: 
        mid = n//2 +1
    else: 
        mid = n//2
    start1 = 0
    start2 = mid 
    while(start1 < mid and start2 < n): 
        if (a[start1]== a[start2]): 
            start1 = start1 + 1
            start2 = start2 + 1
        else: 
            flag = 1
            break
    return flag"
2493,write a function to reverse words of string,"def rev_sentence(sentence):  
    words = sentence.split(' ')  
    reverse_sentence = ' '.join(reversed(words))  
    return reverse_sentence"
2494,write a program to check if a substring is present in a given string,"string = ""how are you?""
substring = ""are""
if (string.find(substring) == -1): 
    print(""NO"") 
else: 
    print(""YES"")"
2495,write a program to print length of a string,"str1 = ""great way to learn!""
print(len(str1))"
2496,write a program to print words frequncy in a given string,"test_str = ""It is a great meal at a great restaurant on a great day""
print(""Original String: "" + str(test_str))
res = {key: test_str.count(key) for key in test_str.split()} 
print(""The words frequency: "" + str(res))"
2497,write a program to print even length words in a string,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
2498,write a program to accept the strings which contains all vowels,"str1 = ""__main__""
if len(set(str1).intersection(""AEIOUaeiou""))>=5: 
  print('accepted') 
else: 
  print(""not accepted"")"
2499,write a program to print count of number of unique matching characters in a pair of strings,"str1=""ababccd12@""
str2=""bb123cca1@""
matched_chars = set(str1) & set(str2) 
print(""No. of matching characters are : "" + str(len(matched_chars)) )"
2500,write a program to remove all duplicate characters from a string,"str1 = ""what a great day!""
print("""".join(set(str1)))"
2501,write a program to print least frequent character in a string,"str1=""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get)
print(""Minimum of all characters is: "" + str(res))"
2502,write a program to print maximum frequency character in a string,"str1 = ""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)
print(""Maximum of all characters is: "" + str(res))"
2503,write a program to find and print all words which are less than a given length in a string,"str1 = ""It is wonderful and sunny day for a picnic in the park""
str_len = 5
res_str = [] 
text = str1.split("" "") 
for x in text: 
    if len(x) < str_len: 
        res_str.append(x) 
print(""Words that are less than "" + str(str_len) + "": "" + str(res_str))"
2504,write a program to split and join a string with a hyphen delimiter,"str1 = ""part of speech""
delimiter = ""-""
list_str = str1.split("" "")
new_str = delimiter.join(list_str)
print(""Delimited String is: "" + new_str)"
2505,write a program to check if a string is binary or not,"str1=""01110011 a""
set1 = set(str1)
if set1 == {'0','1'} or set1 == {'0'} or set1 == {'1'}:
    print(""string is binary"")
else:
    print(""string is not binary"")"
2506,write a function to remove i-th indexed character in a given string,"def remove_char(string, i):
    str1 = string[ : i]  
    str2 = string[i + 1: ] 
    return str1 + str2"
2507,write a function to find all urls in a given string,"import re 
def find_urls(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
2508,write a function to find uncommon words from two strings,"def UncommonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] == 1]"
2509,write a function to find common words from two strings,"def commonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] > 1]"
2510,write a program to replace multiple words with a single word,"str1 = 'CoffeeDay is best for coffee and having long conversations'
word_list = [""best"", 'long'] 
repl_word = 'good'
res = ' '.join([repl_word if idx in word_list else idx for idx in str1.split()]) 
print(""String after multiple replace : "" + str(res))"
2511,write a function to rotate string left by a given length,"def rotate_left(input,d):  
    Lfirst = input[0 : d]  
    Lsecond = input[d :]  
    return (Lsecond + Lfirst)"
2512,write a function to rotate string right by a given length,"def rotate_right(input,d):  
    Rfirst = input[0 : len(input)-d]  
    Rsecond = input[len(input)-d : ]  
    return (Rsecond + Rfirst)"
2513,write a function to replace all occurances of a substring in a string,"str1 = ""Hello! It is a Good thing""
substr1 = ""Good""
substr2 = ""bad""
replaced_str = str1.replace(substr1, substr2)
print(""String after replace :"" + str(replaced_str))"
2514,write a program to move numbers to the end of a string,"str1 = 'hi 123 how are you doing? 567 is with you. Take care of 89'
res = '' 
dig = '' 
for ele in str1: 
    if ele.isdigit(): 
        dig += ele 
    else: 
        res += ele 
res += dig 
print(""Strings after digits at end : "" + str(res))"
2515,write a program to count characters surrounding vowels,"str1 = 'week after week the numbers are increasing'
res = 0
vow_list = ['a', 'e', 'i', 'o', 'u']
for idx in range(1, len(str1) - 1): 
    if str1[idx] not in vow_list and (str1[idx - 1] in vow_list or str1[idx + 1] in vow_list): 
        res += 1
if str1[0] not in vow_list and str1[1] in vow_list: 
    res += 1
if str1[-1] not in vow_list and str1[-2] in vow_list: 
    res += 1
print(""Characters around vowels count : "" + str(res))"
2516,write a function that return space count,"def count_space(str1): 
    count = 0
    for i in range(0, len(str1)): 
        if str1[i] == "" "": 
            count += 1
    return count"
2517,write a program to break up string into individual elements,"str1 = ""whatisthis""
split_string = list(''.join(str1)) 
print(split_string)"
2518,write a program to extract string of N size and having K distict characters,"str1 = 'GoodisalwaysGoood'
N = 3
K = 2
res = [] 
for idx in range(0, len(str1) - N + 1): 
    if (len(set(str1[idx: idx + N])) == K): 
        res.append(str1[idx: idx + N]) 
print(""Extracted Strings : "" + str(res))"
2519,write a program to increment number which is at end of string,"import re 
str1 = 'count001'
res = re.sub(r'[0-9]+$', 
             lambda x: f""{str(int(x.group())+1).zfill(len(x.group()))}"",  
             str1) 
print(""Incremented numeric String : "" + str(res))"
2520,write a program to calculate and print number of letters and digits in a string,"str1 = ""python1234""
total_digits = 0
total_letters = 0
for s in str1: 
    if s.isnumeric(): 
        total_digits += 1
    else: 
        total_letters += 1
print(""Total letters found : "", total_letters) 
print(""Total digits found : "", total_digits)"
2521,write a function to check if a lower case letter exists in a given string,"def check_lower(str1):
    for char in str1: 
        k = char.islower()   
        if k == True: 
            return True 
    if(k != 1): 
        return False"
2522,write a function to check if a upper case letter exists in a given string,"def check_upper(str1):
    for char in str1: 
        k = char.isupper()   
        if k == True: 
            return True
    if(k != 1): 
        return False"
2523,write a program to print number of words in a string,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
2524,write a program to print number of characters in a string,"str1 = 'It is a glorious day'
res = len(str1) 
print(""The number of characters in string are : "", str(res))"
2525,write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list_to_dict(list1, list2):
  return dict(zip(list1, list2))"
2526,write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort_dict_list(dict_list, sort_key):
  dict_list.sort(key=lambda item: item.get(sort_key))"
2527,write a program to print the longest key in a dictioinary,"dict_1 = {""key1"": 10, ""keeeey2"": 2, ""ky3"": 30}
max_key=''
for key in dict_1:
  if len(key)>len(max_key):
    max_key=key
print(max_key)"
2528,write a program to capitalize the first and last character of each key in a dictionary,"input_dict = {'key_a': 10, 'kEy': 2, 'Key_B': 13}
for key in list(input_dict.keys()):
  new_key = key[0].upper() + key[1:-1] + key[-1].upper()
  input_dict[new_key] = input_dict[key]
  if key != new_key:
    del input_dict[key]"
2529,"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","key_val_map = {""key1"": ""length1"", ""key2"": ""len2"", ""Hello"": ""hi"", ""bingo"": ""print bingo""}
for key, val in key_val_map.items():
  if len(val) > len(key):
    print(""Bingo!"")
  else:
    print(""no bingo"")"
2530,write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert_dict(input_dict):
  my_inverted_dict = {value: key for key, value in input_dict.items()}
  return my_inverted_dict"
2531,write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"def invert_dict_non_unique(my_dict):
  my_inverted_dict = dict()
  for key, value in my_dict.items():
      my_inverted_dict.setdefault(value, list()).append(key)
  return my_inverted_dict"
2532,write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"input = [{""foo"": ""bar"", ""Hello"": ""World""},
         {""key1"": ""val1"", ""key2"": ""val2""},
         {""sample_key"": ""sample_val""}]
merged_dict = {key: value for d in input for key, value in d.items()}"
2533,write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean_key_val_diff(input_dict):
  sum_diff = 0
  for key, val in input_dict.items():
    sum_diff += abs(len(val) - len(key))
  return sum_diff/len(input_dict)"
2534,write a program that prints the number of unique keys in a list of dictionaries.,"list_of_dicts = [{""key1"": ""val1"", ""Country"": ""India""}, 
                 {""Country"": ""USA"", ""foo"": ""bar""},
                 {""foo"": ""bar"", ""foo2"":""bar2""}]
unique_keys = []
for d in list_of_dicts:
  for key in d:
    if key not in unique_keys:
      unique_keys.append(key)
print(f""Number of unique keys: {len(unique_keys)}"")"
2535,write a Python program to replace the value of a particular key with nth index of value if the value of the key is list.,"test_list = [{'tsai': [5, 3, 9, 1], 'is': 8, 'good': 10}, 
             {'tsai': 1, 'for': 10, 'geeks': 9}, 
             {'love': 4, 'tsai': [7, 3, 22, 1]}]   
N = 2
key = ""tsai""  
for sub in test_list: 
    if isinstance(sub[key], list): 
        sub[key] = sub[key][N]"
2536,write a program to convert a dictionary value list to dictionary list and prints it.,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
2537,write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] 
res = {} 
for i, j in test_list: 
     res.setdefault(j, []).append(i) 
print(""The dictionary converted from tuple list : "" + str(res))"
2538,write a Python3 program that prints a index wise product of a Dictionary of Tuple Values,"test_dict = {'END Program' : (5, 6, 1), 'is' : (8, 3, 2), 'best' : (1, 4, 9)}
prod_list=[]
for x in zip(*test_dict.values()):
  res = 1 
  for ele in x: 
      res *= ele
  prod_list.append(res)
res = tuple(prod_list) 
print(""The product from each index is : "" + str(res))"
2539,write a program to Pretty Print a dictionary with dictionary values.,"test_dict = {'tsai' : {'rate' : 5, 'remark' : 'good'}, 'cs' : {'rate' : 3}} 
print(""The Pretty Print dictionary is : "") 
for sub in test_dict: 
    print(f""\n{sub}"") 
    for sub_nest in test_dict[sub]: 
        print(sub_nest, ':', test_dict[sub][sub_nest])"
2540,write a program to sort a nested dictionary by a key and print the sorted dictionary,"test_dict = {'Nikhil' : { 'roll' : 24, 'marks' : 17}, 
             'Akshat' : {'roll' : 54, 'marks' : 12},  
             'Akash' : { 'roll' : 12, 'marks' : 15}} 
sort_key = 'marks'
res = sorted(test_dict.items(), key = lambda x: x[1][sort_key]) 
print(""The sorted dictionary by marks is : "" + str(res))"
2541,write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists_to_dict(test_list1, test_list2, test_list3):
  res = [{a: {b: c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] 
  return res"
2542,write a program to print keys in a dictionary whose values are greater than a given input.,"test_dict = {'tsai' : 4, 'random_key' : 2, 'foo' : 3, 'bar' : 'END'} 
K = 3
res = {key : val for key, val in test_dict.items() 
                   if type(val) != int or val > K} 
print(""Values greater than K : "", res.keys())"
2543,write a function that converts a integer dictionary into a list of tuples.,"def dict_to_tuple(input_dict):
  out_tuple = [(a, b) for a,b in input_dict.items()]
  return out_tuple"
2544,write a python function to return a flattened dictionary from a nested dictionary input,"def flatten_dict(dd, separator ='_', prefix =''): 
    flattened =  { prefix + separator + k if prefix else k : v 
             for kk, vv in dd.items() 
             for k, v in flatten_dict(vv, separator, kk).items() 
             } if isinstance(dd, dict) else { prefix : dd } 
    return flattened"
2545,write a program that prints dictionaries having key of the first dictionary and value of the second dictionary,"test_dict1 = {""tsai"" : 20, ""is"" : 36, ""best"" : 100} 
test_dict2 = {""tsai2"" : 26, ""is2"" : 19, ""best2"" : 70} 
keys1 = list(test_dict1.keys()) 
vals2 = list(test_dict2.values()) 
res = dict() 
for idx in range(len(keys1)): 
	res[keys1[idx]] = vals2[idx] 
print(""Mapped dictionary : "" + str(res))"
2546,write a program to combine two dictionaries using a priority dictionary and print the new combined dictionary.,"test_dict1 = {'Gfg' : 1, 'is' : 2, 'best' : 3} 
test_dict2 = {'Gfg' : 4, 'is' : 10, 'for' : 7, 'geeks' : 12} 
prio_dict = {1 : test_dict2, 2: test_dict1} 
res = prio_dict[2].copy() 
for key, val in prio_dict[1].items(): 
    res[key] = val 
print(""The dictionary after combination : "" + str(res))"
2547,write a Python program to combine two dictionary by adding values for common keys,"dict1 = {'a': 12, 'for': 25, 'c': 9} 
dict2 = {'Geeks': 100, 'geek': 200, 'for': 300} 
for key in dict2: 
    if key in dict1: 
        dict2[key] = dict2[key] + dict1[key] 
    else: 
        pass"
2548,write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test_dict = {'Geeks' : 2, 'for' : 1, 'CS' : 3} 
res = list(sum(sorted(test_dict.items(), key = lambda x:x[1]), ())) 
print(""List after conversion from dictionary : "", res)"
2549,write a python program to print the top N largest keys in an integer dictionary.,"test_dict = {6 : 2, 8: 9, 3: 9, 10: 8}  
N = 4
res = []   
for key, val in sorted(test_dict.items(), key = lambda x: x[0], reverse = True)[:N]: 
    res.append(key) 
print(""Top N keys are: "" + str(res))"
2550,write a program to print the values of a given extraction key from a list of dictionaries.,"test_list = [{""Gfg"" : 3, ""b"" : 7},  
             {""is"" : 5, 'a' : 10},  
             {""Best"" : 9, 'c' : 11}]  
K = 'Best'
res = [sub[K] for sub in test_list if K in sub][0]   
print(""The extracted value : "" + str(res))"
2551,write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1 = ""20/01/2020""
element = datetime.datetime.strptime(str1,""%d/%m/%Y"") 
timestamp = datetime.datetime.timestamp(element) 
print(timestamp)"
2552,write a program to print the product of integers in a mixed list of string and numbers,"test_list = [5, 8, ""gfg"", 8, (5, 7), 'is', 2] 
res = 1
for ele in test_list: 
    try: 
        res *= int(ele) 
    except : 
        pass
print(""Product of integers in list : "" + str(res))"
2553,write a python program to add an element to a list. Print the final list.,"lst = [""Jon"", ""Kelly"", ""Jessa""]
lst.append(""Scott"")
print(lst)"
2554,write a python function to append all elements of one list to another,"def extend_list(list1, list2):
    list1 = [1, 2]
    list2 = [3, 4]
    return list1.extend(list2)"
2555,write a python function to add elements of two lists,"def add_two_lists(list1, list2):
   list1 = [1, 2, 3]
   list2 = [4, 5, 6]
   sum_list = []
   for (item1, item2) in zip(list1, list2):
      sum_list.append(item1+item2)
   return sum_list"
2556,Write a  python program to print the last element of a list,"list1 = ['p','r','o','b','e']
print(list1[-1])"
2557,Write a python program to print positive Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num >= 0: 
       print(num, end = "" "")"
2558,Write a python function to multiply all values in a list,"def multiplyList(myList) :
    result = 1
    for x in myList:
         result = result * x 
    return result"
2559,Write a python program to print the smallest number in a list,"list1 = [10, 20, 1, 45, 99] 
print(""Smallest element is:"", min(list1))"
2560,Write a python program to remove even numbers from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
for ele in list1: 
    if ele % 2 == 0: 
        list1.remove(ele) 
print(""New list after removing all even numbers: "", list1)"
2561,Write a python program to print a list after removing elements from index 1 to 4,"list1 = [11, 5, 17, 18, 23, 50]  
del list1[1:5] 
print(*list1)"
2562,Write a python program to remove 11 and 18 from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
unwanted_num = {11, 18} 
list1 = [ele for ele in list1 if ele not in unwanted_num] 
print(""New list after removing unwanted numbers: "", list1)"
2563,Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"test_list = ['gfg', '   ', ' ', 'is', '            ', 'best'] 
print(""The original list is : "" + str(test_list)) 
res = [ele for ele in test_list if ele.strip()] 
print(""List after filtering non-empty strings : "" + str(res))"
2564,"Write a python function to get the Cumulative sum of a list 
  Write a python program to print if a string ""hello"" is present in the list","def Cumulative(lists): 
    cu_list = [] 
    length = len(lists) 
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] 
    return cu_list[1:]
l = [1, 2.0, 'hello','have', 'a', 'good', 'day'] 
s = 'hello'  
if s in l: 
    print(f'{s} is present in the list') 
else: 
    print(f'{s} is not present in the list')"
2565,Write a python program to print the distance between first and last occurrence of even element.,"test_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] 
indices_list = [idx for idx in range( 
    len(test_list)) if test_list[idx] % 2 == 0] 
res = indices_list[-1] - indices_list[0] 
print(""Even elements distance : "" + str(res))"
2566,Write a python fuction to create an empty list,"def emptylist():
   return list()"
2567,Write a python program to print a list with all elements as 5 and of length 10,"list1 = [5] * 10
print(list1)"
2568,Write a python program to reverse a list and print it.,"def Reverse(lst): 
    return [ele for ele in reversed(lst)] 
lst = [10, 11, 12, 13, 14, 15] 
print(Reverse(lst))"
2569,Write a python program to print odd numbers in a List,"list1 = [10, 21, 4, 45, 66, 93, 11]  
odd_nos = list(filter(lambda x: (x % 2 != 0), list1)) 
print(""Odd numbers in the list: "", odd_nos)"
2570,Write a python program to print negative Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
2571,Write a python program print the the number of occurrences of 8 in a list,"def countX(lst, x): 
    count = 0
    for ele in lst: 
        if (ele == x): 
            count = count + 1
    return count 
lst = [8, 6, 8, 10, 8, 20, 10, 8, 8] 
x = 8
print('{} has occurred {} times'.format(x, countX(lst, x)))"
2572,"Write a python program to swap first and last element of a list . Print the final list
     Swapping","def swapList(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
2573,Write a python program to convert each list element to key-value pair. Print the final dictionary,"test_list = [2323, 82, 129388, 234, 95] 
print(""The original list is : "" + str(test_list)) 
res = dict() 
for ele in test_list: 
    mid_idx = len(str(ele)) // 2
    key = int(str(ele)[:mid_idx]) 
    val = int(str(ele)[mid_idx:]) 
    res[key] = val 
print(""Constructed Dictionary : "" + str(res))"
2574,Write a python program for print all elements with digit 7.,"test_list = [56, 72, 875, 9, 173]  
K = 7
res = [ele for ele in test_list if str(K) in str(ele)] 
print(""Elements with digit K : "" + str(res))"
2575,Write a python program for printing number of unique elements in a list,"input_list = [1, 2, 2, 5, 8, 4, 4, 8] 
l1 = [] 
count = 0
for item in input_list: 
    if item not in l1: 
        count += 1
        l1.append(item) 
print(""No of unique items are:"", count)"
2576,Write a python program to find the sum and average of the list. Print the sum and average,"L = [4, 5, 1, 2, 9, 7, 10, 8] 
count = 0
for i in L: 
    count += i 
avg = count/len(L) 
print(""sum = "", count) 
print(""average = "", avg)"
2577,Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
2578,Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1 = [1, 2, 5, 6] 
res = [(val, pow(val, 3)) for val in list1] 
print(res)"
2579,Write a python program to print the combination of tuples in list of tuples,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')]
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
2580,Write a python program to swap tuple elements in list of tuples. Print the output.,"test_list = [(3, 4), (6, 5), (7, 8)] 
res = [(sub[1], sub[0]) for sub in test_list] 
print(""The swapped tuple list is : "" + str(res))"
2581,Write a python function to sort a list of tuples by the second Item,"def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
2582,Write a python program to print all pair combinations of 2 tuples.,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8) 
res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] 
print(""The filtered tuple : "" + str(res))"
2583,Write a python program to print positive Tuples in List.,"test_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] 
print(""The original list is : "" + str(test_list)) 
res = [sub for sub in test_list if all(ele >= 0 for ele in sub)] 
print(""Positive elements Tuples : "" + str(res))"
2584,Write a python program to join Tuples from a list of tupels if they have similar initial element. Print out the output,"test_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] 
print(""The original list is : "" + str(test_list)) 
res = [] 
for sub in test_list:                                            
    if res and res[-1][0] == sub[0]:               
        res[-1].extend(sub[1:])                         
    else: 
        res.append([ele for ele in sub])      
res = list(map(tuple, res)) 
print(""The extracted elements : "" + str(res))"
2585,Write a python program to print the uncommon elements in List,"test_list1 = [ [1, 2], [3, 4], [5, 6] ] 
test_list2 = [ [3, 4], [5, 7], [1, 2] ] 
res_list = [] 
for i in test_list1: 
    if i not in test_list2: 
        res_list.append(i) 
for i in test_list2: 
    if i not in test_list1: 
        res_list.append(i) 
print (""The uncommon of two lists is : "" + str(res_list))"
2586,write a Function to convert the time from 12 hour format to 24 hour format,"def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
2587,"!/usr/bin/env python
 coding: utf-8
 In[7]:
 write a python class that defines a Tree and add child","class TreeNode:
    def __init__(self, data):
        self.data = data
        self.parent = None
        self.children =[]
    def add_child(self, child):
        child.parent = self
        self.children.append(child)
t = TreeNode(""Arun"")
t.add_child(TreeNode(""Shruthi""))"
2588,"In[63]:
 write a python function that takes two path strings and return the combined path string","import os
def path_join(PARENT_DIR, DIR):
    joined_path = os.path.join(PARENT_DIR, DIR)
    return joined_path
path_join(""C:/"", ""DATA"")"
2589,"In[78]:
 write a python function to read a text file and return the result","def read_file(filepath='test.txt'):
    with open(filepath, 'r') as file_reader:
        f_read = file_reader.read()
    return f_read
read_file()"
2590,"In[83]:
 write a python function to read a text file, if no filepath is given raise Exception","def read_file(filepath=None):
    if filepath:
        with open(filepath, 'r') as file_reader:
            f_read = file_reader.read()
        return f_read
    else:
        raise Exception(""filepath not found"")
read_file()"
2591,"In[87]:
 write a python program to handle exception when a given value is less than 10","def check(x):
    if x < 10:
        raise ValueError('x should not be less than 10!')
    else:
        return x
check(9)"
2592,"In[104]:
 write a python function to check if the given structure is a instance of list or dictionary","def check_insst(obj):
    if isinstance(obj, list):
        return ""list""
    elif isinstance(obj, dict):
        return ""dict""
    else:
        return ""unknown""
check_insst({})"
2593,"In[102]:
 write a python function to check if the given structure is a instance of tuple or string","def check_inst_tup_str(obj):
    if isinstance(obj, set):
        return ""set""
    elif isinstance(obj, tuple):
        return ""tuple""
    else:
        return ""unknown""
check_inst_tup_str({1})"
2594,"In[110]:
 write a python class to instantiate an object with two string attributes and write a function to return the list of attributes","class Myclass:  
    def __init__(self, attr1, attr2):
        self.attr1 = attr1
        self.attr2 = attr2
    def get_attributes_list(self):  
         return [self.attr1, self.attr2]
dress = Myclass(""pant"",""shirt"")
dress.get_attributes_list()"
2595,"In[114]:
 write a python function that call another function and that function prints ""Inside B""","def A():
    B()
def B():
    print(""Inside B"")
A()"
2596,"In[119]:
 write a python program to return the biggest character in a string (printable ascii characters)","from functools import reduce
input_str = 'tsai'
res = reduce(lambda x, y: x if ord(x) > ord(y) else y, input_str)
print(f""{res}"")"
2597,"In[120]:
 write a python program to adds every 3rd number in a list","from functools import reduce
input_list = [x for x in range(10)]
res = reduce(lambda x, y: x+y, [i for idx, i in enumerate(input_list) if (idx+1)%3==0])
print(f""{res}"")"
2598,"In[111]:
 write a python program which iterates two lists of numbers simultaneously and adds corresponding values, print the result","f_list = [1,2,3,4]
s_list = [2,3,4,5]
res = [f_n +s_n for f_n, s_n in zip(f_list, s_list)]
print(f""{res}"")"
2599,"In[19]:
 write a python function that takes a list of numbers and calculate square of each number and return it in a list","def square_num(mynumbers):
    return list(map(lambda num: num**2,mynumbers))
square_num([1,2,3])"
2600,"In[21]:
 write a python function that takes two lists and combines them without any duplicates and return the list","def combine_lists(L1, L2):
    return L1 + [items for items in L2 if items not in L1]
L1 = [1,2,3]
L2 = [2,4,3]
combine_lists(L1,L2)"
2601,"In[29]:
 write a python function that removes all the vowels from the given list of strings and return the list","def myfunc(listitems):
    final=[]
    for strchar in listitems:
        for letters in strchar:
            if letters in ('a','e','i','o','u', 'A','E','I','O','U'):
                strchar = strchar.replace(letters,"""")            
        final.append(strchar) 
    return final
myfunc([""rohan"", ""END""])"
2602,"In[43]:
 write a python program to print all the keys in the dictionary and store it in a list","sample_dict = {'1':1, '2':2, '3':3}
key_list = list(sample_dict.keys())
print(f""{key_list}"")"
2603,"In[45]:
 write a python program to remove duplicates from a list and print the result in list","input_list = [1,2,3,4,4,33,2,5]
dedup = list(set(input_list))
print(f""{dedup}"")"
2604,"In[46]:
 write a python function that takes a list of elements and n as input, extract and append first n characters and last n characters of each string and return the resultant list","def nchar (list1,no):
    return [items[:no]+items[-no:] for items in list1]
list1 = [""ROHAN"", ""END""]
nchar(list1, 3)"
2605,"In[56]:
 write a python function that takes two parameters, first parameter is a list of dictionary and second is a list of tuples. Append the list of tuples to the list of dictionary","def addentry (listname, addlist):
    for names,ages in addlist:
            listname.append(addlist)
    return listname
addentry([{'1':""A""}], [(""2"", ""B"")])"
2606,"In[57]:
 write a python function that takes a dictionary and a string, appends the string to the list of values","def addnames_in_dict (dictname, name):
    for i in dictname:
        dictname[i].append(name)
    return dictname
addnames_in_dict({""1"":[""A""]}, ""Arun"")"
2607,"In[59]:
 write a python program to iterate through the list and create a dictionary with integers as keys","list_= [1,2,3,4]
dict_comp = {idx:value for idx,value in enumerate(list_)}
print(f""{dict_comp}"")"
2608,"In[60]:
 write a python function to add all even numbers between minimum and maximum value","def add_even_num(min, max):
    return sum([i for i in range(min, max) if i%2==0])
add_even_num(1, 6)"
2609,"In[123]:
 write a python program to iterate through a string using for loop","h_letters = []
for letter in 'human':
    h_letters.append(letter)
print(f""{h_letters}"")"
2610,"In[127]:
 write a python program to iterate through a string using lambda and print the result","letters = list(map(lambda x: x, 'human'))
print(letters)"
2611,"In[129]:
 write a python function to calculate the price after tax for a list of transactions","txns = [1.09, 23.56, 57.84, 4.56, 6.78]
TAX_RATE = .08
def get_price_with_tax(txn):
    return txn * (1 + TAX_RATE)
final_prices = list(map(get_price_with_tax, txns))
print(f""{final_prices}"")"
2612,"In[138]:
 write a python program to print python version using sys","import sys
print(f""{sys.version}"")"
2613,"In[144]:
 write a python program to merge two sorted lists","a = [3, 4, 6, 10, 11, 18]
b = [1, 5, 7, 12, 13, 19, 21]
a.extend(b)
c = sorted(a)
print(f""{c}"")"
2614,"In[146]:
 write a python program to index every 4th character from the below string","code = 'varCjjlopaxntrrgnbXrOPraiiItUuUuzaQlliyaxx*t#rgiffFoce&ntPls87C!'
code[3::4]"
2615,"In[149]:
 write a python program to split a string based on space","strin = ""Hello how are you ?""
res = strin.split()
print(f""{res}"")"
2616,"In[151]:
 write a python program to convert a dictionary to list of tuples","dict_new = {'1':'A', '2':'B'}
tup = dict_new.items()
print(list(tup))"
2617,"In[153]:
 write a python program to remove an element from a list","li = [1, 2, 3, 4]
li.remove(1)
li"
2618,"In[140]:
 write a python program to print system time","import time
print(f""{time.time()}"")"
2619,"In[143]:
 write a python function to inherit a parent class person in a child class Student","class Person:
    def __init__(self, fname, lname):
        self.firstname = fname
        self.lastname = lname
    def printname(self):
        print(self.firstname, self.lastname)
class Student(Person):
    pass"
2620,"In[130]:
 write a python program to replace all the negative values to zero and keep only positive values in the list","original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
prices = [i if i > 0 else 0 for i in original_prices]
print(f""{prices}"")"
2621,"In[133]:
 write a python function to generate random number between a  given range","import random
def get_weather_data(min, max):
    return random.randrange(min, max)
rand_num = get_weather_data(11, 20)
print(f""{rand_num}"")"
2622,"In[135]:
 write a python function which uses generator to sum all the numbers in a range","min_value = 10
max_value = 10000
sum_all = sum(i * i for i in range(min_value, max_value))
print(f""{sum_all}"")"
2623,"In[126]:
 write a python program to transpose Matrix using Nested Loops and print the result","transposed = []
matrix = [[1, 2, 3, 4], [4, 5, 6, 8]]
for i in range(len(matrix[0])):
    transposed_row = []
    for row in matrix:
        transposed_row.append(row[i])
    transposed.append(transposed_row)
print(f""{transposed}"")"
2624,"In[142]:
 write a python function to create two threads and start and join the two threads","import threading 
def print_cube(num): 
    print(""Cube: {}"".format(num * num * num)) 
t1 = threading.Thread(target=print_cube, args=(10,)) 
t2 = threading.Thread(target=print_cube, args=(10,)) 
t1.start() 
t2.start() 
t1.join()
t2.join()"
2625,"In[145]:
 write a python function which is decorated on another function","def myDecorator(func):
    def new_func(n):
        return '$' + func(n)        
    return new_func
@myDecorator
def myFunction(a):
    return(a)"
2626,call the decorated function,print(myFunction('100'))
2627,-*- coding: utf-8 -*-,"""""""Assignment8_part2_python_programs.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/drive/1L3UkCJFHDkuGHoibhSFxZVESxbw0NUrz
"""""""
2628,write a python function to convert given variable to said datatype,"def type_conversion(typ,a):
  if(typ)=='int':
    return(int(a))
  elif(typ)=='float':
    return(float(a))
  else:
    return(str(a))
type_conversion('str',1)"
2629,"Write a python class to welcome 
     Constructor
     Instance method","class Welcome(object):
    def __init__(self, name):
        self.name = name  # Create an instance variable
    def welcome(self, up=False):
        if up:
            print('Hi, %s!' % self.name.upper())
        else:
            print('Hey, %s' % self.name)
w = Welcome('Geeta')           
w.welcome(up=True)"
2630,3. Write a program to reverse dictionary key order,"sample_dict = {1:'Hi',2:'Hello',3:'Hey'}
print(""The original dictionary : "" + str(sample_dict)) 
res = dict(reversed(list(sample_dict.items()))) 
print(""The reversed order dictionary : "" + str(res))"
2631,Write a program to reverse the key and item mapping,"sample_dict = {1:'Seeta',2:'Geeta',3:'Babita'}
print(""The original dictionary : "" + str(sample_dict)) 
sample_dict = {v:k for k, v in sample_dict.items()}
print(""Inverse mapped dictionary : "", str(sample_dict))"
2632,Write a program to generate the Fibonacci sequence up to n-th term,nterms = int(10000)
2633,"first two terms
 check if the number of terms is valid
       print(n1)
        update values","n1, n2 = 0, 1
count = 0
fab_list = []
if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   while count < nterms:
       fab_list.append(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
fn = lambda x: ""FIBONACCI"" if x in fab_list else ""NOT_FIBONACCI""
print(""Given number is"",fn(20))"
2634,Write a python function to add 2 iterables a and b such that a is even and b is odd,"n=10
a = []
b = []
_ = [a.append(i) if i%2==0 else b.append(i) for i in range(n)]
def add(a,b):
    return [a+b for a,b in (zip(a,b))]
add(a,b)"
2635,6. Write a program to strips every vowel from a string provided,"vowels = ('a', 'e', 'i', 'o', 'u')
input_string = ""hello""
print('Vowel in a string',' '.join([x for x in input_string.lower() if x not in vowels]))"
2636,Write a python function that takes a small character string and shifts all characters by 5,"def shift_n_letters(letter, n):
    return chr((ord(letter) - 97 + n % 26) % 26 + 97) if ord(letter)>=97 else chr((ord(letter) - 65 + n % 26) % 26 + 65)
name = ""hello""
res="""".join([shift_n_letters(x,5) for x in name])
print('Resulting string',res)"
2637,Write a python function to  add only even numbers in a list,"from functools import reduce
input_list = [x for x in range(100)]
def sum_even(it):
    return reduce(lambda x, y: x + y if (y % 2)==0 else x, it, 0)
res=sum_even(input_list)
print('Sum of even numbers in the list is ', res)"
2638,write a program to  adds every 5th number in a list,"input_list = [x for x in range(20)]
res=reduce((lambda x, y: x + y), [val for idx, val in enumerate(input_list) if (idx+1)%5==0]) 
print('Sum of every 5th element in the list is', res)"
2639,Write a python function to identify type of given data structure,"def ds_type(ds):
  return(type(ds))
l=[1,2,3,4]
ds_type(l)"
2640,Write a python function to remove duplicates from list,"def remove_duplicates(lista):
    lista2 = []
    if lista: 
        for item in lista:
            if item not in lista2: #is item in lista2 already?
                lista2.append(item)
    else:
        return lista
    return lista2
print(""List with duplicates removed:"",remove_duplicates([1,2,3,3]))"
2641,Write a python function get unique value from tuple,"def unique_values(v):
    return(list(set(v)))
t=[(1,2),(3,4),(4,3),(1,2)]
unique_values(t)"
2642,write a program to convert temperature from Celsius to Fahrenheit,"Cel = 90
Far = 9.0/5.0 * Cel + 32
print(""Temperature:"", Cel, ""Celsius = "", Far, "" F"")"
2643,Write a program to convert kilometers per hour to mile per hour,"kmh = 16
mph =  0.6214 * kmh
print(""Speed:"", kmh, ""KM/H = "", mph, ""MPH"")"
2644,Write a python function to find greatest common divisor,"def greatest_common_divisor(x,y):
    print(""For"", x, ""and"", y,"","" ) 
    r=x%y
    while r>0:
        r=x%y
        if r ==0: 
            print(""the greatest common divisor is"", y,""."")
        else:
            q=y
            x=q
            y=r
greatest_common_divisor(1071,1029)"
2645,Write a program to check your external ip address,"import re
import requests
url = ""http://checkip.dyndns.org""
request = requests.get(url)
clean = request.text.split(': ', 1)[1]
your_ip = clean.split('</body></html>', 1)[0]
print(""your IP Address is: "",  your_ip)"
2646,"Write a python function to get a user name from prompt
get the username from a prompt","username = input(""Login: >> "")"
2647,list of allowed users,"user1 = ""Ram""
user2 = ""Mohan"""
2648,control that the user belongs to the list of allowed users,"if username == user1:
    print(""Access granted"")
elif username == user2:
    print(""Welcome to the system"")
else:
    print(""Access denied"")"
2649,Write python function role a dice,"import random
min = 1
max = 6
roll_again = ""yes""
while roll_again == ""yes"" or roll_again == ""y"":
    print(""Rolling the dices..."")
    print(""The values are...."")
    print(random.randint(min, max))
    print(random.randint(min, max))
    roll_again = input(""Roll the dices again?"")"
2650,Write a program to reverse a number,"n=int(input(""Enter number: ""))
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
2651,Write a program to take an average of given scores,"s1=50
s2=77
s3=87
print('Avg score is',(s1+s2+s3)/3)"
2652,Write a python program to print odd numbers in given range,"lower=int(input(""Enter the lower limit for the range:""))
upper=int(input(""Enter the upper limit for the range:""))
for i in range(lower,upper+1):
    if(i%2!=0):
        print(i)"
2653,Write a python program print all the integers that aren’t divisible by either 2 or 3 and lies between 1 and 25.,"for i in range(0,25):
    if(i%2!=0 and i%3!=0):
        print(i)"
2654,"Write a program to concatinate two strings
 Python String Operations","str1 = 'Good'
str2 ='Morning!'"
2655,using +,"print('str1 + str2 = ', str1 + str2)"
2656,using *,"print('str1 * 3 =', str1 * 3)"
2657,"Write python function to convert a given string to either lower, upper and capitalize","def string_opertaion(st,conversion):
  if(conversion=='lower'):
    return(st.lower())
  elif(conversion=='upper'):
    return(st.upper())
  else:
    return(st.capitalize())
string_opertaion('AwesOME',None)"
2658,Write a program to get 3rd and last character of a given string,"string=""Good Night""
print(""\nSlicing characters between "" +
    ""3rd and last character: "") 
print(string[3:-1])"
2659,Write a program to delete a 3rd character from a given string,"String='welcome'
new_str = """" 
for i in range(len(String)): 
    if i != 2: 
        new_str = new_str + String[i] 
print(new_str)"
2660,Write a program to replace a string by a given string in a sentence,"string = 'This is beautiful picture'
string.replace('beautiful','good')"
2661,Write a program to reverse a string,"string = 'Today is bad day'
string[::-1]"
2662,Write a python function to append or extend two lists,"def list_op(l1,l2,op):
  if(op=='append'):
    return(l1.append(l2))
  else:
    return(l1.extend(l2))
a = ['Hey', 'you', 'there!']
b = [1,2,3]
op='e'
list_op(a,b,op)
print(a)"
2663,"!/usr/bin/env python
 coding: utf-8
 In[28]:
 write python function get the unique number of elements from the user given list","mylist = ['nowplaying', 'PBS', 'PBS', 'nowplaying', 'job', 'debate', 'thenandnow']
def get_unique_elements(list):
    unique = [x for i, x in enumerate(mylist) if i == mylist.index(x)]
    return unique
get_unique_elements(mylist)"
2664,"In[86]:
 write a python function get the maximum number in passed list","def max_check(x):
    max_val = x[0] 
    for check in x: 
        if check > max_val: 
            max_val = check 
    return max_val
print(f'{max_check([2,4,5,7,98])}')"
2665,"In[88]:
 write a python function to get the minimum number in passed list","def min_check(x):
    min_val = x[0] 
    for check in x: 
        if check < min_val: 
            min_val = check 
    return min_val
print(f'{min_check([2,4,5,7,98])}')"
2666,"In[1]:
 write a program to reverse the list elemnets","list_ = [40,0,1,29,3]
rev_list = list_[::-1]
print(f'reversed list: {rev_list}')"
2667,"In[7]:
 write a progarm to sort the list in assending order","data_list = [-5, -23, 5, 0, 23, -6, 23, 67]
new_list = []
while data_list:
    minimum = data_list[0]  # arbitrary number in list 
    for x in data_list: 
        if x < minimum:
            minimum = x
    new_list.append(minimum)
    data_list.remove(minimum)    
print(f'assending_order_list: {new_list}')"
2668,"In[8]:
 write a program to sort the list in desending order","data_list = [-5, -23, 5, 0, 23, -6, 23, 67]
new_list = []
while data_list:
    minimum = data_list[0]  # arbitrary number in list 
    for x in data_list: 
        if x > minimum:
            minimum = x
    new_list.append(minimum)
    data_list.remove(minimum)    
print(f'decending_order_list: {new_list}')"
2669,"In[11]:
 write a python function to sort a list of tuples by the second Item 
     getting length of list of tuples","def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
2670,Driver Code,"tup =[('for', 24), ('is', 10), ('to', 28),  
      ('goal', 1), ('portal', 20), ('a', 15)]  
Sort_Tuple(tup)"
2671,"In[12]:
 write a program to insert elemnet in the list after every nth element","letters = ['a','b','c','d','e','f','g','h','i','j']
i = 3
while i < len(letters):
    letters.insert(i, 'x')
    i += 4
letters"
2672,"In[22]:
 write a program to find sum of elements in list","total = 0
print(f'sum: {sum([total + x for x in [1, 2, 3, 4, 5]])}')"
2673,"In[23]:
 write a  program to get th ematched elemnets from two list","a = [1, 2, 3, 4, 5]
b = [9, 8, 7, 6, 5]
[i for i, j in zip(a, b) if i == j]"
2674,"In[24]:
 write a  program to get the matched elements from two list","a = [1, 2, 3, 4, 5]
b = [9, 8, 7, 6, 5]
[i for i, j in zip(a, b) if i != j]"
2675,"In[31]:
 write a python program to create dictionary from the lists","L1 = ['a','b','c','d']
L2 = [1,2,3,4]
d = dict(zip(L1,L2))
print(f'dictionary:{d}')"
2676,"In[45]:
 write a program to convert given dictonary to list of list key value pairs","d = {'Food':'Fish&Chips','2012':'Olympics','Capital':'London'}
list_key_value = [ [k,v] for k, v in d.items() ]
print(f'lsit_key_value:{list_key_value}')"
2677,"In[53]:
 write program to Compare two dictionaries and check how many (key, value) pairs are equal","x = {""a"":2,""b"":2,""c"":3,""d"":4}
y = {""b"":2,""c"":3, ""d"":4}
shared_items = {k: x[k] for k in x if k in y and x[k] == y[k]}
length = len(shared_items)
print(f'count:{length}')"
2678,"In[63]:
 write a python function get the random number from the given range and square the number","import random 
min_value = 10
max_value = 20
def square(x):
    return x*x
def get_square_of_random_number(min_value,max_value):
    return square(random.randint(min_value,max_value))
get_square_of_random_number(min_value,max_value)"
2679,"In[71]:
  write a python function to find all occurrences of user given substring in user provided input string ignoring the case","def count_word_occurrences(inputstring,substring):
    inputstring = inputstring
    tempString = inputString.lower()
    count = tempString.count(substring.lower())
    return print(f'Given substring count is :{count}')  
inputString = ""Welcome to USA. usa awesome, isn't it?""
substring = ""USA""
count_word_occurrences(inputString,substring)"
2680,"In[74]:
 write a program that prints the sum and average of the digits that appear in the string, ignoring all other characters","import re
inputStr = ""English = 78 Science = 83 Math = 68 History = 65""
markList = [int(num) for num in re.findall(r'\b\d+\b', inputStr)]
totalMarks = 0
for mark in markList:
    totalMarks+=mark
percentage = totalMarks/len(markList)  
print(f'Total Marks is:{totalMarks},Percentage is:{percentage}')"
2681,"In[75]:
 write a python funaction to create a new string by appending second string in the middle of first string","def appendMiddle(s1, s2):
    middleIndex = int(len(s1) /2)
    print(""Original Strings are"", s1, s2)
    middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
    print(""After appending new string in middle"", middleThree)
appendMiddle(""bananna"", ""monkey"")"
2682,"In[81]:
 write a program to find the last position of a given substring in a given string","str1 = ""Emma is a data scientist who knows Python. Emma works at google.""
print(f""Original String is: {str1}"")
index = str1.rfind(""Emma"")
print(f""Last occurrence of Emma starts at {index}"")"
2683,"In[82]:
 write a program to remove the empty list from the given list","str_list = [""Emma"", ""Jon"", """", ""Kelly"", None, ""Eric"", """"]
print(str_list)"
2684,use built-in function filter to filter empty value,"new_str_list = list(filter(None, str_list))
print(""After removing empty strings"")
print(new_str_list)"
2685,"In[85]:
 write a program from given string replace each punctuation with","from string import punctuation
str1 = '/*Jon is @developer & musician!!'
print(f""The original string is :{str1}"")"
2686,Replace punctuations with,"replace_char = '#'
for char in punctuation:
    str1 = str1.replace(char, replace_char)
print(f""The strings after replacement : {str1}"")"
2687,"In[90]:
 write a program to convert all the sentances present in the list to upper","mylis = ['this is test', 'another test']
print(f'{[item.upper() for item in mylis]}')"
2688,"In[96]:
 write a progarm to adds every 3rd number in a list","from functools import reduce
input_list = [x for x in range(10)]
reduce((lambda x, y: x + y), [val for idx, val in enumerate(input_list) if (idx+1)%3==0])"
2689,"In[97]:
 write a program to strips every vowel from a string provided","vowels = ('a', 'e', 'i', 'o', 'u')
input_string = ""awesome""
' '.join([x for x in input_string.lower() if x not in vowels])"
2690,"Given an array of integers, return indices of the two numbers such that they add up to a specific target.","input_array = [2, 7, 11, 15]
target = 26
result = []
for i, num in enumerate(input_array):
    for j in range(i+1, len(input_array)):
        print(i,j)"
2691,"Given a sorted integer array without duplicates, return the summary of its ranges.","input_array = [0,1,2,4,5,7]
start=0
result = []
while start < len(input_array):
    end = start 
    while end+1<len(input_array) and ((input_array[end+1] - input_array[end]) == 1):
        end = end + 1
    if end!=start:
        result.append(""{0}-->{1}"".format(input_array[start], input_array[end]))
        print(result)
    else:
        result.append(""{0}"".format(input_array[start]))
        print(result)
    start = end+1
print(result)"
2692,Rotate an array of n elements to the right by k steps.,"org = [1,2,3,4,5,6,7]
result = org[:]
steps = 3
for idx,num in enumerate(org):
    if idx+steps < len(org):
        result[idx+steps] = org[idx]
    else:
        result[idx+steps-len(org)] = org[idx]
print(result)"
2693,"Consider an array of non-negative integers. A second array is formed by shuffling the elements of the first array and deleting a random element. Given these two arrays, find which element is missing in the second array.","first_array = [1,2,3,4,5,6,7]
second_array = [3,7,2,1,4,6]
def finder(first_array, second_array):
    return(sum(first_array) - sum(second_array))
missing_number = finder(first_array, second_array)
print(missing_number)"
2694,"Given a collection of intervals which are already sorted by start number, merge all overlapping intervals.","org_intervals = [[1,3],[2,6],[5,10],[11,16],[15,18],[19,22]]
i = 0
while i < len(org_intervals)-1:
    if org_intervals[i+1][0] < org_intervals[i][1]:
        org_intervals[i][1]=org_intervals[i+1][1]
        del org_intervals[i+1]
        i = i - 1
    i = i + 1
print(org_intervals)"
2695,Given a list slice it into a 3 equal chunks and revert each list,"sampleList = [11, 45, 8, 23, 14, 12, 78, 45, 89]
length = len(sampleList)
chunkSize  = int(length/3)
start = 0
end = chunkSize
for i in range(1, 4, 1):
  indexes = slice(start, end, 1)
  listChunk = sampleList[indexes]
  mylist = [i for i in listChunk]
  print(""After reversing it "", mylist)
  start = end
  if(i != 2):
    end +=chunkSize
  else:
    end += length - chunkSize"
2696,write a program to calculate exponents of an input,"input = 9
exponent = 2
final = pow(input, exponent)
print(f'Exponent Value is:{final}')"
2697,"write a program to multiply two Matrix 
 3x3 matrix
 3x4 matrix
 result is 3x4","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
2698,"iterate through rows of X
    iterate through columns of Y
        iterate through rows of Y","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
print(f""Final Result is{result}"")"
2699,write a program to find and print the remainder of two number,"num1 = 12
num2 = 10
ratio = num1 % num2
print(f'remainder:{ratio}')"
2700,reverse a number in Python,"number = 1367891
revs_number = 0  
while (number > 0):
  remainder = number % 10
  revs_number = (revs_number * 10) + remainder
  number = number // 10
print(""The reverse number is : {}"".format(revs_number))"
2701,Python program to compute sum of digits in number,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
2702,Find the middle element of a random number list,"my_list = [4,3,2,9,10,44,1]
print(""mid value is "",my_list[int(len(my_list)/2)])"
2703,Sort the list in ascending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort()
print(f""Ascending Order list:,{my_list}"")"
2704,Sort the list in descending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort(reverse=True)
print(f""Descending Order list:,{my_list}"")"
2705,Concatenation of two List,"my_list1 = [4,3,2,9,10,44,1]
my_list2 = [5,6,2,8,15,14,12]
print(f""Sum of two list:,{my_list1+my_list2}"")"
2706,Removes the item at the given index from the list and returns the removed item,"my_list1 = [4,3,2,9,10,44,1,9,12]
index = 4
print(f""Sum of two list:,{my_list1.pop(index)}"")"
2707,Adding Element to a List,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
2708,Returns the number of times the specified element appears in the list,"vowels = ['a', 'e', 'i', 'o', 'i', 'u']
count = vowels.count('i')
print('The count of i is:', count)"
2709,Count Tuple Elements Inside List,"random = ['a', ('a', 'b'), ('a', 'b'), [3, 4]]
count = random.count(('a', 'b'))
print(""The count of ('a', 'b') is:"", count)"
2710,Removes all items from the list,"list = [{1, 2}, ('a'), ['1.1', '2.2']]
list.clear()
print('List:', list)"
2711,access first characters in a string,"word = ""Hello World""
letter=word[0]
print(f""First Charecter in String:{letter}"")"
2712,access Last characters in a string,"word = ""Hello World""
letter=word[-1]
print(f""First Charecter in String:{letter}"")"
2713,Generate a list by list comprehension,"list = [x for x in range(10)]
print(f""List Generated by list comprehension:{list}"")"
2714,Sort the string list alphabetically,"thislist = [""orange"", ""mango"", ""kiwi"", ""pineapple"", ""banana""]
thislist.sort()
print(f""Sorted List:{thislist}"")"
2715,Join Two Sets,"set1 = {""a"", ""b"" , ""c""}
set2 = {1, 2, 3}
set3 = set2.union(set1)
print(f""Joined Set:{set3}"")"
2716,keep only the items that are present in both sets,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.intersection_update(y)
print(f""Duplicate Value in Two set:{x}"")"
2717,Keep All items from List But NOT the Duplicates,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.symmetric_difference_update(y)
print(f""Duplicate Value in Two set:{x}"")"
2718,Create and print a dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Sample Dictionary:{thisdict}"")"
2719,Calculate the length of dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Length of Dictionary:{len(thisdict)}"")"
2720,Evaluate a string and a number,"print(bool(""Hello""))
print(bool(15))"
2721,Calculate length of a string,"word = ""Hello World""
print(f""Length of string: {len(word)}"")"
2722,Count the number of spaces in a sring,"s = ""Count, the number of spaces""
lenx = s.count(' ')
print(f""number of spaces in sring: {lenx}"")"
2723,Split Strings,"word = ""Hello World""
ksplit = word.split(' ') 
print(f""Splited Strings: {ksplit}"")"
2724,Prints ten dots,"ten = ""."" * 10
print(f""Ten dots: {ten}"")"
2725,Replacing a string with another string,"word = ""Hello World""
replace = ""Bye""
input = ""Hello""
after_replace = word.replace(input, replace)
print(f""String ater replacement: {after_replace}"")"
2726,removes leading characters,"word = "" xyz ""
lstrip = word.lstrip()
print(f""String ater removal of leading characters:{lstrip}"")"
2727,removes trailing characters,"word = "" xyz ""
rstrip = word.rstrip()
print(f""String ater removal of trailing characters:{rstrip}"")"
2728,check if all char are alphanumeric,"word = ""Hello World""
check = word.isalnum()
print(f""All char are alphanumeric?:{check}"")"
2729,check if all char in the string are alphabetic,"word = ""Hello World""
check = word.isalpha()
print(f""All char are alphabetic?:{check}"")"
2730,test if string contains digits,"word = ""Hello World""
check = word.isdigit()
print(f""String contains digits?:{check}"")"
2731,Test if string contains upper case,"word = ""Hello World""
check = word.isupper()
print(f""String contains upper case?:{check}"")"
2732,Test if string starts with H,"word = ""Hello World""
check = word.startswith('H')
print(f""String starts with H?:{check}"")"
2733,Returns an integer value for the given character,"str = ""A""
val = ord(str)
print(f""Integer value for the given character?:{val}"")"
2734,Fibonacci series up to 100,"n = 100
result = []
a, b = 0 , 1
while b < n:
  result. append( b)
  a, b = b, a + b
final = result
print(f""Fibonacci series up to 100:{final}"")"
2735,Counting total Digits in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isdigit()):
    digitCount += 1
print('Number of digits: ',digitCount)"
2736,Counting total alphanumeric in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isalpha()):
    digitCount += 1
print('Number of alphanumeric: ',digitCount)"
2737,Counting total Upper Case in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.upper()):
    digitCount += 1
print('Number total Upper Case: ',digitCount)"
2738,Counting total lower Case in a string,"str1 = ""abc4234AFdeaa""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.lower()):
    digitCount += 1
print('Number total lower Case: ',digitCount)"
2739,Bubble sort in python,"list1 = [1, 5, 3, 4]
for i in range(len(list1)-1):
  for j in range(i+1,len(list1)):
    if(list1[i] > list1[j]):
      temp = list1[i]
      list1[i] = list1[j]
      list1[j] = temp
print(""Bubble Sorted list: "",list1)"
2740,Compute the product of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
2741,Calculate the sum of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a+b for a in list1 for b in list2]
print(f""sum of every pair of numbers from two lists:{final}"")"
2742,Calculate the pair-wise product of two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [list1[i]*list2[i] for i in range(len(list1))]
print(f""pair-wise product of two lists:{final}"")"
2743,Remove the last element from the stack,"s = [1,2,3,4]
print(f""last element from the stack:{s.pop()}"")"
2744,Insert a number at the beginning of the queue,"q = [1,2,3,4]
q.insert(0,5)
print(f""Revised List:{q}"")"
2745,Addition of two vector,"v1 = [1,2,3]
v2 = [1,2,3]
s1 = [0,0,0]
for i in range(len(v1)):
  s1[i] = v1[i] + v2[i]
print(f""New Vector:{s1}"")"
2746,Replace negative prices with 0 and leave the positive values unchanged in a list,"original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
prices = [i if i > 0 else 0 for i in original_prices]
print(f""Final List:{prices}"")"
2747,Convert dictionary to JSON,"import json
person_dict = {'name': 'Bob',
'age': 12,
'children': None
}
person_json = json.dumps(person_dict)
print(person_json)"
2748,Writing JSON to a file,"import json
person_dict = {""name"": ""Bob"",
""languages"": [""English"", ""Fench""],
""married"": True,
""age"": 32
}
with open('person.txt', 'w') as json_file:
  json.dump(person_dict, json_file)"
2749,Pretty print JSON,"import json
person_string = '{""name"": ""Bob"", ""languages"": ""English"", ""numbers"": [2, 1.6, null]}'
person_dict = json.loads(person_string)
print(json.dumps(person_dict, indent = 4, sort_keys=True))"
2750,Check if the key exists or not in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Piyush Jain"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""piyushjain220@gmail.com""
}""""""
print(""Checking if percentage key exists in JSON"")
student = json.loads(studentJson)
if ""percentage"" in student:
    print(""Key exist in JSON data"")
    print(student[""name""], ""marks is: "", student[""percentage""])
else:
    print(""Key doesn't exist in JSON data"")"
2751,Check if there is a value for a key in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Piyush Jain"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""piyushjain220@gmail.com""
}""""""
student = json.loads(studentJson)
if not (student.get('email') is None):
     print(""value is present for given JSON key"")
     print(student.get('email'))
else:
    print(""value is not present for given JSON key"")"
2752,Sort JSON keys in Python and write it into a file,"import json
sampleJson = {""id"" : 1, ""name"" : ""value2"", ""age"" : 29}
with open(""sampleJson.json"", ""w"") as write_file:
    json.dump(sampleJson, write_file, indent=4, sort_keys=True)
print(""Done writing JSON data into a file"")"
2753,Given a Python list. Turn every item of a list into its square,"aList = [1, 2, 3, 4, 5, 6, 7]
aList =  [x * x for x in aList]
print(aList)"
2754,Remove empty strings from the list of strings,"list1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]
resList = [i for i in (filter(None, list1))]
print(resList)"
2755,"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, 20)
print(resList)"
2756,Generate 3 random integers between 100 and 999 which is divisible by 5,"import random
print(""Generating 3 random integer number between 100 and 999 divisible by 5"")
for num in range(3):
    print(random.randrange(100, 999, 5), end=', ')"
2757,Pick a random character from a given String,"import random
name = 'pynative'
char = random.choice(name)
print(""random char is "", char)"
2758,Generate  random String of length 5,"import random
import string
def randomString(stringLength):
    """"""Generate a random string of 5 charcters""""""
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(stringLength))
print (""Random String is "", randomString(5) )"
2759,"Write a program which will create a new string by appending s2 in the middle of s1 given two strings, s1 and s2","def appendMiddle(s1, s2):
  middleIndex = int(len(s1) /2)
  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
  print(""After appending new string in middle"", middleThree)
appendMiddle(""Ault"", ""Kelly"")"
2760,Arrange string characters such that lowercase letters should come first,"str1 = ""PyNaTive""
lower = []
upper = []
for char in str1:
    if char.islower():
        lower.append(char)
    else:
        upper.append(char)
sorted_string = ''.join(lower + upper)
print(sorted_string)"
2761,"Given a string, return the sum and average of the digits that appear in the string, ignoring all other characters","import re
inputStr = ""English = 78 Science = 83 Math = 68 History = 65""
markList = [int(num) for num in re.findall(r'\b\d+\b', inputStr)]
totalMarks = 0
for mark in markList:
  totalMarks+=mark
percentage = totalMarks/len(markList)  
print(""Total Marks is:"", totalMarks, ""Percentage is "", percentage)"
2762,"Given an input string, count occurrences of all characters within a string","str1 = ""Apple""
countDict = dict()
for char in str1:
  count = str1.count(char)
  countDict[char]=count
print(countDict)"
2763,Reverse a given string,"str1 = ""PYnative""
print(""Original String is:"", str1)
str1 = str1[::-1]
print(""Reversed String is:"", str1)"
2764,Remove special symbols/Punctuation from a given string,"import string
str1 = ""/*Jon is @developer & musician""
new_str = str1.translate(str.maketrans('', '', string.punctuation))
print(""New string is "", new_str)"
2765,Removal all the characters other than integers from string,"str1 = 'I am 25 years and 10 months old'
res = """".join([item for item in str1 if item.isdigit()])
print(res)"
2766,From given string replace each punctuation with,"from string import punctuation
str1 = '/*Jon is @developer & musician!!'
replace_char = '#'
for char in punctuation:
    str1 = str1.replace(char, replace_char)
print(""The strings after replacement : "", str1)"
2767,Given a list iterate it and count the occurrence of each element and create a dictionary to show the count of each elemen,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
2768,Given a two list of equal size create a set such that it shows the element from both lists in the pair,"firstList = [2, 3, 4, 5, 6, 7, 8]
secondList = [4, 9, 16, 25, 36, 49, 64]
result = zip(firstList, secondList)
resultSet = set(result)
print(resultSet)"
2769,Given a two sets find the intersection and remove those elements from the first set,"firstSet  = {23, 42, 65, 57, 78, 83, 29}
secondSet = {57, 83, 29, 67, 73, 43, 48}
intersection = firstSet.intersection(secondSet)
for item in intersection:
  firstSet.remove(item)
print(""First Set after removing common element "", firstSet)"
2770,Given a dictionary get all values from the dictionary and add it in a list but don’t add duplicates,"speed  ={'jan':47, 'feb':52, 'march':47, 'April':44, 'May':52, 'June':53,
          'july':54, 'Aug':44, 'Sept':54} 
speedList = []
for item in speed.values():
  if item not in speedList:
    speedList.append(item)
print(""unique list"", speedList)"
2771,Convert decimal number to octal,"print('%o,' % (8))"
2772,Convert string into a datetime object,"from datetime import datetime
date_string = ""Feb 25 2020  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
2773,Subtract a week from a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
2774,Find the day of week of a given date?,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
2775,Add week (7 days) and 12 hours to a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
2776,Calculate number of days between two given dates,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
2777,Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
2778,Generate a Python list of all the even numbers between two given numbers,"num1 = 4
num2 = 30
myval = [i for i in range(num1, num2, 2)]
print(myval)"
2779,Return the largest item from the given list,"aList = [4, 6, 8, 24, 12, 2]
print(max(aList))"
2780,"Write a program to extract each digit from an integer, in the reverse order","number = 7536
while (number > 0):
    digit = number % 10
    number = number // 10
    print(digit, end="" "")"
2781,"Given a Python list, remove all occurrence of a given number from the list","num1 = 20
list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, num1)
print(resList)"
2782,Shuffle a list randomly,"import random
list = [2,5,8,9,12]
random.shuffle(list)
print (""Printing shuffled list "", list)"
2783,Generate a random n-dimensional array of float numbers,"import numpy
random_float_array = numpy.random.rand(2, 2)
print(""2 X 2 random float array in [0.0, 1.0] \n"", random_float_array,""\n"")"
2784,Generate random Universally unique IDs,"import uuid
safeId = uuid.uuid4()
print(""safe unique id is "", safeId)"
2785,Choose given number of elements from the list with different probability,"import random
num1 =5
numberList = [111, 222, 333, 444, 555]
print(random.choices(numberList, weights=(10, 20, 30, 40, 50), k=num1))"
2786,Generate weighted random numbers,"import random
randomList = random.choices(range(10, 40, 5), cum_weights=(5, 15, 10, 25, 40, 65), k=6)
print(randomList)"
2787,generating a reliable secure random number,"import secrets
print(""Random integer number generated using secrets module is "")
number = secrets.randbelow(30)
print(number)"
2788,Calculate memory is being used by an list in Python,"import sys
list1 = ['Scott', 'Eric', 'Kelly', 'Emma', 'Smith']
print(""size of list = "",sys.getsizeof(list1))"
2789,Find if all elements in a list are identical,"listOne = [20, 20, 20, 20]
print(""All element are duplicate in listOne:"", listOne.count(listOne[0]) == len(listOne))"
2790,Merge two dictionaries in a single expression,"currentEmployee = {1: 'Scott', 2: ""Eric"", 3:""Kelly""}
formerEmployee  = {2: 'Eric', 4: ""Emma""}
allEmployee = {**currentEmployee, **formerEmployee}
print(allEmployee)"
2791,Convert two lists into a dictionary,"ItemId = [54, 65, 76]
names = [""Hard Disk"", ""Laptop"", ""RAM""]
itemDictionary = dict(zip(ItemId, names))
print(itemDictionary)"
2792,Alternate cases in String,"test_str = ""geeksforgeeks""
res = """" 
for idx in range(len(test_str)): 
    if not idx % 2 : 
       res = res + test_str[idx].upper() 
    else: 
       res = res + test_str[idx].lower() 
print(res)"
2793,write a python function to check if a given string is a palindrome,"def isPalindrome(s):
    return s == s[::-1]"
2794,write a python function to check if a given string is symmetrical,"def symmetry(a): 
    n = len(a) 
    flag = 0
    if n%2: 
        mid = n//2 +1
    else: 
        mid = n//2
    start1 = 0
    start2 = mid 
    while(start1 < mid and start2 < n): 
        if (a[start1]== a[start2]): 
            start1 = start1 + 1
            start2 = start2 + 1
        else: 
            flag = 1
            break
    return flag"
2795,write a function to reverse words of string,"def rev_sentence(sentence):  
    words = sentence.split(' ')  
    reverse_sentence = ' '.join(reversed(words))  
    return reverse_sentence"
2796,write a program to check if a substring is present in a given string,"string = ""how are you?""
substring = ""are""
if (string.find(substring) == -1): 
    print(""NO"") 
else: 
    print(""YES"")"
2797,write a program to print length of a string,"str1 = ""great way to learn!""
print(len(str1))"
2798,write a program to print words frequncy in a given string,"test_str = ""It is a great meal at a great restaurant on a great day""
print(""Original String: "" + str(test_str))
res = {key: test_str.count(key) for key in test_str.split()} 
print(""The words frequency: "" + str(res))"
2799,write a program to print even length words in a string,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
2800,write a program to accept the strings which contains all vowels,"str1 = ""__main__""
if len(set(str1).intersection(""AEIOUaeiou""))>=5: 
  print('accepted') 
else: 
  print(""not accepted"")"
2801,write a program to print count of number of unique matching characters in a pair of strings,"str1=""ababccd12@""
str2=""bb123cca1@""
matched_chars = set(str1) & set(str2) 
print(""No. of matching characters are : "" + str(len(matched_chars)) )"
2802,write a program to remove all duplicate characters from a string,"str1 = ""what a great day!""
print("""".join(set(str1)))"
2803,write a program to print least frequent character in a string,"str1=""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get)
print(""Minimum of all characters is: "" + str(res))"
2804,write a program to print maximum frequency character in a string,"str1 = ""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)
print(""Maximum of all characters is: "" + str(res))"
2805,write a program to find and print all words which are less than a given length in a string,"str1 = ""It is wonderful and sunny day for a picnic in the park""
str_len = 5
res_str = [] 
text = str1.split("" "") 
for x in text: 
    if len(x) < str_len: 
        res_str.append(x) 
print(""Words that are less than "" + str(str_len) + "": "" + str(res_str))"
2806,write a program to split and join a string with a hyphen delimiter,"str1 = ""part of speech""
delimiter = ""-""
list_str = str1.split("" "")
new_str = delimiter.join(list_str)
print(""Delimited String is: "" + new_str)"
2807,write a program to check if a string is binary or not,"str1=""01110011 a""
set1 = set(str1)
if set1 == {'0','1'} or set1 == {'0'} or set1 == {'1'}:
    print(""string is binary"")
else:
    print(""string is not binary"")"
2808,write a function to remove i-th indexed character in a given string,"def remove_char(string, i):
    str1 = string[ : i]  
    str2 = string[i + 1: ] 
    return str1 + str2"
2809,write a function to find all urls in a given string,"import re 
def find_urls(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
2810,write a function to find uncommon words from two strings,"def UncommonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] == 1]"
2811,write a function to find common words from two strings,"def commonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] > 1]"
2812,write a program to replace multiple words with a single word,"str1 = 'CoffeeDay is best for coffee and having long conversations'
word_list = [""best"", 'long'] 
repl_word = 'good'
res = ' '.join([repl_word if idx in word_list else idx for idx in str1.split()]) 
print(""String after multiple replace : "" + str(res))"
2813,write a function to rotate string left by a given length,"def rotate_left(input,d):  
    Lfirst = input[0 : d]  
    Lsecond = input[d :]  
    return (Lsecond + Lfirst)"
2814,write a function to rotate string right by a given length,"def rotate_right(input,d):  
    Rfirst = input[0 : len(input)-d]  
    Rsecond = input[len(input)-d : ]  
    return (Rsecond + Rfirst)"
2815,write a function to replace all occurances of a substring in a string,"str1 = ""Hello! It is a Good thing""
substr1 = ""Good""
substr2 = ""bad""
replaced_str = str1.replace(substr1, substr2)
print(""String after replace :"" + str(replaced_str))"
2816,write a program to move numbers to the end of a string,"str1 = 'hi 123 how are you doing? 567 is with you. Take care of 89'
res = '' 
dig = '' 
for ele in str1: 
    if ele.isdigit(): 
        dig += ele 
    else: 
        res += ele 
res += dig 
print(""Strings after digits at end : "" + str(res))"
2817,write a program to count characters surrounding vowels,"str1 = 'week after week the numbers are increasing'
res = 0
vow_list = ['a', 'e', 'i', 'o', 'u']
for idx in range(1, len(str1) - 1): 
    if str1[idx] not in vow_list and (str1[idx - 1] in vow_list or str1[idx + 1] in vow_list): 
        res += 1
if str1[0] not in vow_list and str1[1] in vow_list: 
    res += 1
if str1[-1] not in vow_list and str1[-2] in vow_list: 
    res += 1
print(""Characters around vowels count : "" + str(res))"
2818,write a function that return space count,"def count_space(str1): 
    count = 0
    for i in range(0, len(str1)): 
        if str1[i] == "" "": 
            count += 1
    return count"
2819,write a program to break up string into individual elements,"str1 = ""whatisthis""
split_string = list(''.join(str1)) 
print(split_string)"
2820,write a program to extract string of N size and having K distict characters,"str1 = 'GoodisalwaysGoood'
N = 3
K = 2
res = [] 
for idx in range(0, len(str1) - N + 1): 
    if (len(set(str1[idx: idx + N])) == K): 
        res.append(str1[idx: idx + N]) 
print(""Extracted Strings : "" + str(res))"
2821,write a program to increment number which is at end of string,"import re 
str1 = 'count001'
res = re.sub(r'[0-9]+$', 
             lambda x: f""{str(int(x.group())+1).zfill(len(x.group()))}"",  
             str1) 
print(""Incremented numeric String : "" + str(res))"
2822,write a program to calculate and print number of letters and digits in a string,"str1 = ""python1234""
total_digits = 0
total_letters = 0
for s in str1: 
    if s.isnumeric(): 
        total_digits += 1
    else: 
        total_letters += 1
print(""Total letters found : "", total_letters) 
print(""Total digits found : "", total_digits)"
2823,write a function to check if a lower case letter exists in a given string,"def check_lower(str1):
    for char in str1: 
        k = char.islower()   
        if k == True: 
            return True 
    if(k != 1): 
        return False"
2824,write a function to check if a upper case letter exists in a given string,"def check_upper(str1):
    for char in str1: 
        k = char.isupper()   
        if k == True: 
            return True
    if(k != 1): 
        return False"
2825,write a program to print number of words in a string,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
2826,write a program to print number of characters in a string,"str1 = 'It is a glorious day'
res = len(str1) 
print(""The number of characters in string are : "", str(res))"
2827,write a funtion that accepts two lists of equal length and converts them into a dictioinary,"def list_to_dict(list1, list2):
  return dict(zip(list1, list2))"
2828,write a python function that accepts a list of dictionaries and sorts it by a specified key,"def sort_dict_list(dict_list, sort_key):
  dict_list.sort(key=lambda item: item.get(sort_key))"
2829,write a program to print the longest key in a dictioinary,"dict_1 = {""key1"": 10, ""keeeey2"": 2, ""ky3"": 30}
max_key=''
for key in dict_1:
  if len(key)>len(max_key):
    max_key=key
print(max_key)"
2830,write a program to capitalize the first and last character of each key in a dictionary,"input_dict = {'key_a': 10, 'kEy': 2, 'Key_B': 13}
for key in list(input_dict.keys()):
  new_key = key[0].upper() + key[1:-1] + key[-1].upper()
  input_dict[new_key] = input_dict[key]
  if key != new_key:
    del input_dict[key]"
2831,"write a program that iterates over a dictionary and prints ""Bingo!"" if length of value is greater than the length of key. Otherwise print ""no bingo""","key_val_map = {""key1"": ""length1"", ""key2"": ""len2"", ""Hello"": ""hi"", ""bingo"": ""print bingo""}
for key, val in key_val_map.items():
  if len(val) > len(key):
    print(""Bingo!"")
  else:
    print(""no bingo"")"
2832,write a python function that accepts a dictionary that has unique values and returns its inversion,"def invert_dict(input_dict):
  my_inverted_dict = {value: key for key, value in input_dict.items()}
  return my_inverted_dict"
2833,write a function that inverts a dictionary with non-unique values. Keys that map to the same values should be appended to a list in the inverted dictionary,"def invert_dict_non_unique(my_dict):
  my_inverted_dict = dict()
  for key, value in my_dict.items():
      my_inverted_dict.setdefault(value, list()).append(key)
  return my_inverted_dict"
2834,write a program to merge a list of dictionaries into a single dictionary using dictionary comprehension,"input = [{""foo"": ""bar"", ""Hello"": ""World""},
         {""key1"": ""val1"", ""key2"": ""val2""},
         {""sample_key"": ""sample_val""}]
merged_dict = {key: value for d in input for key, value in d.items()}"
2835,write a function to return the mean difference in the length of keys and values of dictionary comprising of strings only.,"def mean_key_val_diff(input_dict):
  sum_diff = 0
  for key, val in input_dict.items():
    sum_diff += abs(len(val) - len(key))
  return sum_diff/len(input_dict)"
2836,write a program that prints the number of unique keys in a list of dictionaries.,"list_of_dicts = [{""key1"": ""val1"", ""Country"": ""India""}, 
                 {""Country"": ""USA"", ""foo"": ""bar""},
                 {""foo"": ""bar"", ""foo2"":""bar2""}]
unique_keys = []
for d in list_of_dicts:
  for key in d:
    if key not in unique_keys:
      unique_keys.append(key)
print(f""Number of unique keys: {len(unique_keys)}"")"
2837,write a Python program to replace the value of a particular key with nth index of value if the value of the key is list.,"test_list = [{'tsai': [5, 3, 9, 1], 'is': 8, 'good': 10}, 
             {'tsai': 1, 'for': 10, 'geeks': 9}, 
             {'love': 4, 'tsai': [7, 3, 22, 1]}]   
N = 2
key = ""tsai""  
for sub in test_list: 
    if isinstance(sub[key], list): 
        sub[key] = sub[key][N]"
2838,write a program to convert a dictionary value list to dictionary list and prints it.,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
2839,write a program that categorizes tuple values based on second element and prints a dictionary value list where each key is a category.,"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] 
res = {} 
for i, j in test_list: 
     res.setdefault(j, []).append(i) 
print(""The dictionary converted from tuple list : "" + str(res))"
2840,write a Python3 program that prints a index wise product of a Dictionary of Tuple Values,"test_dict = {'END Program' : (5, 6, 1), 'is' : (8, 3, 2), 'best' : (1, 4, 9)}
prod_list=[]
for x in zip(*test_dict.values()):
  res = 1 
  for ele in x: 
      res *= ele
  prod_list.append(res)
res = tuple(prod_list) 
print(""The product from each index is : "" + str(res))"
2841,write a program to Pretty Print a dictionary with dictionary values.,"test_dict = {'tsai' : {'rate' : 5, 'remark' : 'good'}, 'cs' : {'rate' : 3}} 
print(""The Pretty Print dictionary is : "") 
for sub in test_dict: 
    print(f""\n{sub}"") 
    for sub_nest in test_dict[sub]: 
        print(sub_nest, ':', test_dict[sub][sub_nest])"
2842,write a program to sort a nested dictionary by a key and print the sorted dictionary,"test_dict = {'Nikhil' : { 'roll' : 24, 'marks' : 17}, 
             'Akshat' : {'roll' : 54, 'marks' : 12},  
             'Akash' : { 'roll' : 12, 'marks' : 15}} 
sort_key = 'marks'
res = sorted(test_dict.items(), key = lambda x: x[1][sort_key]) 
print(""The sorted dictionary by marks is : "" + str(res))"
2843,write a python function to combine three lists of equal lengths into a nested dictionary and return it,"def lists_to_dict(test_list1, test_list2, test_list3):
  res = [{a: {b: c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] 
  return res"
2844,write a program to print keys in a dictionary whose values are greater than a given input.,"test_dict = {'tsai' : 4, 'random_key' : 2, 'foo' : 3, 'bar' : 'END'} 
K = 3
res = {key : val for key, val in test_dict.items() 
                   if type(val) != int or val > K} 
print(""Values greater than K : "", res.keys())"
2845,write a function that converts a integer dictionary into a list of tuples.,"def dict_to_tuple(input_dict):
  out_tuple = [(a, b) for a,b in input_dict.items()]
  return out_tuple"
2846,write a python function to return a flattened dictionary from a nested dictionary input,"def flatten_dict(dd, separator ='_', prefix =''): 
    flattened =  { prefix + separator + k if prefix else k : v 
             for kk, vv in dd.items() 
             for k, v in flatten_dict(vv, separator, kk).items() 
             } if isinstance(dd, dict) else { prefix : dd } 
    return flattened"
2847,write a program that prints dictionaries having key of the first dictionary and value of the second dictionary,"test_dict1 = {""tsai"" : 20, ""is"" : 36, ""best"" : 100} 
test_dict2 = {""tsai2"" : 26, ""is2"" : 19, ""best2"" : 70} 
keys1 = list(test_dict1.keys()) 
vals2 = list(test_dict2.values()) 
res = dict() 
for idx in range(len(keys1)): 
	res[keys1[idx]] = vals2[idx] 
print(""Mapped dictionary : "" + str(res))"
2848,write a program to combine two dictionaries using a priority dictionary and print the new combined dictionary.,"test_dict1 = {'Gfg' : 1, 'is' : 2, 'best' : 3} 
test_dict2 = {'Gfg' : 4, 'is' : 10, 'for' : 7, 'geeks' : 12} 
prio_dict = {1 : test_dict2, 2: test_dict1} 
res = prio_dict[2].copy() 
for key, val in prio_dict[1].items(): 
    res[key] = val 
print(""The dictionary after combination : "" + str(res))"
2849,write a Python program to combine two dictionary by adding values for common keys,"dict1 = {'a': 12, 'for': 25, 'c': 9} 
dict2 = {'Geeks': 100, 'geek': 200, 'for': 300} 
for key in dict2: 
    if key in dict1: 
        dict2[key] = dict2[key] + dict1[key] 
    else: 
        pass"
2850,write a Python program that sorts dictionary keys to a list using their values and prints this list.,"test_dict = {'Geeks' : 2, 'for' : 1, 'CS' : 3} 
res = list(sum(sorted(test_dict.items(), key = lambda x:x[1]), ())) 
print(""List after conversion from dictionary : "", res)"
2851,write a python program to print the top N largest keys in an integer dictionary.,"test_dict = {6 : 2, 8: 9, 3: 9, 10: 8}  
N = 4
res = []   
for key, val in sorted(test_dict.items(), key = lambda x: x[0], reverse = True)[:N]: 
    res.append(key) 
print(""Top N keys are: "" + str(res))"
2852,write a program to print the values of a given extraction key from a list of dictionaries.,"test_list = [{""Gfg"" : 3, ""b"" : 7},  
             {""is"" : 5, 'a' : 10},  
             {""Best"" : 9, 'c' : 11}]  
K = 'Best'
res = [sub[K] for sub in test_list if K in sub][0]   
print(""The extracted value : "" + str(res))"
2853,write a program to convert date to timestamp and print the result,"import time 
import datetime 
str1 = ""20/01/2020""
element = datetime.datetime.strptime(str1,""%d/%m/%Y"") 
timestamp = datetime.datetime.timestamp(element) 
print(timestamp)"
2854,write a program to print the product of integers in a mixed list of string and numbers,"test_list = [5, 8, ""gfg"", 8, (5, 7), 'is', 2] 
res = 1
for ele in test_list: 
    try: 
        res *= int(ele) 
    except : 
        pass
print(""Product of integers in list : "" + str(res))"
2855,write a python program to add an element to a list. Print the final list.,"lst = [""Jon"", ""Kelly"", ""Jessa""]
lst.append(""Scott"")
print(lst)"
2856,write a python function to append all elements of one list to another,"def extend_list(list1, list2):
    list1 = [1, 2]
    list2 = [3, 4]
    return list1.extend(list2)"
2857,write a python function to add elements of two lists,"def add_two_lists(list1, list2):
   list1 = [1, 2, 3]
   list2 = [4, 5, 6]
   sum_list = []
   for (item1, item2) in zip(list1, list2):
      sum_list.append(item1+item2)
   return sum_list"
2858,Write a  python program to print the last element of a list,"list1 = ['p','r','o','b','e']
print(list1[-1])"
2859,Write a python program to print positive Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num >= 0: 
       print(num, end = "" "")"
2860,Write a python function to multiply all values in a list,"def multiplyList(myList) :
    result = 1
    for x in myList:
         result = result * x 
    return result"
2861,Write a python program to print the smallest number in a list,"list1 = [10, 20, 1, 45, 99] 
print(""Smallest element is:"", min(list1))"
2862,Write a python program to remove even numbers from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
for ele in list1: 
    if ele % 2 == 0: 
        list1.remove(ele) 
print(""New list after removing all even numbers: "", list1)"
2863,Write a python program to print a list after removing elements from index 1 to 4,"list1 = [11, 5, 17, 18, 23, 50]  
del list1[1:5] 
print(*list1)"
2864,Write a python program to remove 11 and 18 from a list. Print the final list.,"list1 = [11, 5, 17, 18, 23, 50]  
unwanted_num = {11, 18} 
list1 = [ele for ele in list1 if ele not in unwanted_num] 
print(""New list after removing unwanted numbers: "", list1)"
2865,Write a python program to Remove multiple empty spaces from  List of strings. Print the original and final lists.,"test_list = ['gfg', '   ', ' ', 'is', '            ', 'best'] 
print(""The original list is : "" + str(test_list)) 
res = [ele for ele in test_list if ele.strip()] 
print(""List after filtering non-empty strings : "" + str(res))"
2866,"Write a python function to get the Cumulative sum of a list 
  Write a python program to print if a string ""hello"" is present in the list","def Cumulative(lists): 
    cu_list = [] 
    length = len(lists) 
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] 
    return cu_list[1:]
l = [1, 2.0, 'hello','have', 'a', 'good', 'day'] 
s = 'hello'  
if s in l: 
    print(f'{s} is present in the list') 
else: 
    print(f'{s} is not present in the list')"
2867,Write a python program to print the distance between first and last occurrence of even element.,"test_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] 
indices_list = [idx for idx in range( 
    len(test_list)) if test_list[idx] % 2 == 0] 
res = indices_list[-1] - indices_list[0] 
print(""Even elements distance : "" + str(res))"
2868,Write a python fuction to create an empty list,"def emptylist():
   return list()"
2869,Write a python program to print a list with all elements as 5 and of length 10,"list1 = [5] * 10
print(list1)"
2870,Write a python program to reverse a list and print it.,"def Reverse(lst): 
    return [ele for ele in reversed(lst)] 
lst = [10, 11, 12, 13, 14, 15] 
print(Reverse(lst))"
2871,Write a python program to print odd numbers in a List,"list1 = [10, 21, 4, 45, 66, 93, 11]  
odd_nos = list(filter(lambda x: (x % 2 != 0), list1)) 
print(""Odd numbers in the list: "", odd_nos)"
2872,Write a python program to print negative Numbers in a List,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
2873,Write a python program print the the number of occurrences of 8 in a list,"def countX(lst, x): 
    count = 0
    for ele in lst: 
        if (ele == x): 
            count = count + 1
    return count 
lst = [8, 6, 8, 10, 8, 20, 10, 8, 8] 
x = 8
print('{} has occurred {} times'.format(x, countX(lst, x)))"
2874,"Write a python program to swap first and last element of a list . Print the final list
     Swapping","def swapList(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
2875,Write a python program to convert each list element to key-value pair. Print the final dictionary,"test_list = [2323, 82, 129388, 234, 95] 
print(""The original list is : "" + str(test_list)) 
res = dict() 
for ele in test_list: 
    mid_idx = len(str(ele)) // 2
    key = int(str(ele)[:mid_idx]) 
    val = int(str(ele)[mid_idx:]) 
    res[key] = val 
print(""Constructed Dictionary : "" + str(res))"
2876,Write a python program for print all elements with digit 7.,"test_list = [56, 72, 875, 9, 173]  
K = 7
res = [ele for ele in test_list if str(K) in str(ele)] 
print(""Elements with digit K : "" + str(res))"
2877,Write a python program for printing number of unique elements in a list,"input_list = [1, 2, 2, 5, 8, 4, 4, 8] 
l1 = [] 
count = 0
for item in input_list: 
    if item not in l1: 
        count += 1
        l1.append(item) 
print(""No of unique items are:"", count)"
2878,Write a python program to find the sum and average of the list. Print the sum and average,"L = [4, 5, 1, 2, 9, 7, 10, 8] 
count = 0
for i in L: 
    count += i 
avg = count/len(L) 
print(""sum = "", count) 
print(""average = "", avg)"
2879,Write a python program to Remove Tuples of Length 1 from a list of tuples. Print the final list.,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
2880,Write a python program to print a list of tuples from given list having number and its cube in each tuple,"list1 = [1, 2, 5, 6] 
res = [(val, pow(val, 3)) for val in list1] 
print(res)"
2881,Write a python program to print the combination of tuples in list of tuples,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')]
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
2882,Write a python program to swap tuple elements in list of tuples. Print the output.,"test_list = [(3, 4), (6, 5), (7, 8)] 
res = [(sub[1], sub[0]) for sub in test_list] 
print(""The swapped tuple list is : "" + str(res))"
2883,Write a python function to sort a list of tuples by the second Item,"def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
2884,Write a python program to print all pair combinations of 2 tuples.,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8) 
res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] 
print(""The filtered tuple : "" + str(res))"
2885,Write a python program to print positive Tuples in List.,"test_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] 
print(""The original list is : "" + str(test_list)) 
res = [sub for sub in test_list if all(ele >= 0 for ele in sub)] 
print(""Positive elements Tuples : "" + str(res))"
2886,Write a python program to join Tuples from a list of tupels if they have similar initial element. Print out the output,"test_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] 
print(""The original list is : "" + str(test_list)) 
res = [] 
for sub in test_list:                                            
    if res and res[-1][0] == sub[0]:               
        res[-1].extend(sub[1:])                         
    else: 
        res.append([ele for ele in sub])      
res = list(map(tuple, res)) 
print(""The extracted elements : "" + str(res))"
2887,Write a python program to print the uncommon elements in List,"test_list1 = [ [1, 2], [3, 4], [5, 6] ] 
test_list2 = [ [3, 4], [5, 7], [1, 2] ] 
res_list = [] 
for i in test_list1: 
    if i not in test_list2: 
        res_list.append(i) 
for i in test_list2: 
    if i not in test_list1: 
        res_list.append(i) 
print (""The uncommon of two lists is : "" + str(res_list))"
2888,write a Function to convert the time from 12 hour format to 24 hour format,"def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
2889,write a python program to multiply three numbers,"num1 = 1.5
num2 = 6.3
num3 = -2.3
product = num1 * num2 * num3
print(f'Product: {product}')"
2890,"write a python function that when given two numbers, would divide the first number by second number and return the quotient and remainder","def divide_first_number_by_second(num1, num2):
    return (num1 // num2), (num1 % num2)"
2891,write a python function to return the largest and smallest numbers in the given list and return None if the list is empty,"def largest_and_smallest(list_of_nums):
    if list_of_nums:
        return max(list_of_nums), min(list_of_nums)
    else:
        return"
2892,write a python function that would read the given input file path and print its contents,"def read_and_print_file(filepath):
    with open(filepath, ""r"") as infile:
        print( infile.read() )"
2893,write a python program that would print the first n positive integers using a for loop,"n = 62
for num in range(n):
    print(num)"
2894,write a python function that returns the input list sorted in ascending order,"def sort_ascending(list_to_be_sorted):
    return sorted(list_to_be_sorted)"
2895,write a python function that returns the input list sorted in descending order,"def sort_descending(list_to_be_sorted):
    return sorted(list_to_be_sorted, reverse=True)"
2896,"write a python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n(n):
    return ( n * (n+1) ) // 2"
2897,"write a recursive python function that would return the sum of first n natural numbers, where n is the input","def sum_first_n_recursive(n):
    if n == 0:
        return 0
    return sum_first_n_recursive(n-1) + n"
2898,"write a python function that would filter a list of dictionaries where a specified key equals given value, list_of_dictionaries, key and value are inputs to this function.","def filter_with_key_value(list_of_dicts, key, value):
    return list( filter( lambda x: x.get(key) == value, list_of_dicts ) )"
2899,write a recursive python function that takes either a list or tuple as input and reverses the order of its elements,"def reverse(seq):
    SeqType = type(seq)
    emptySeq = SeqType()
    if seq == emptySeq:
        return emptySeq
    restrev = reverse(seq[1:])
    first = seq[0:1]
    result = restrev + first
    return result"
2900,write a python function that returns the square of a given input number,"def square(x):
    return x**2"
2901,write a python program that asks for user input and prints the given input,"a = input(""User Input"")
print(a)"
2902,write a python function shifts and scales all numbers in the given list by the given mean and standard deviation,"def shift_and_scale(list_of_nums, mean, std):
    return [ (x-mean) / std for x in list_of_nums ]"
2903,write a python function that takes in a list of sequences and zips each corresponding element from the list into a tuple and returns the list of such tuples,"def zip_(list_of_seq):
    return list(zip(*list_of_seq))"
2904,write python program that would merge two dictionaries by adding the second one into the first,"a = {""a"": 1, ""b"": 3}
b = {""c"": 1, ""d"": 3}
a.update(b)"
2905,write a python function that would reverse the given string,"def reverse_string(str_to_be_reversed):
    return str_to_be_reversed[::-1]"
2906,"write a python program that would print ""Hello World""","print(""Hello World"")"
2907,write a python program that would swap variable values,"a = 10
b = 15
a, b = b, a"
2908,write a python program that iterates over a dictionary and prints its keys and values,"a = {""a"":1, ""b"":2, ""c"":3, ""d"":4}
for k, v in a.items():
    print(k, v)"
2909,write a python function that would print the ASCII value of a given character,"def print_ascii(char):
    print(ord(char))"
2910,write a python function that takes in two numbers and returns their HCF,"def hcf(num1, num2):
    smaller = num1 if num1 < num2 else num2
    for i in range(1, smaller+1):
        if (num1 % i == 0) and (num2 % i == 0):
            hcf = i
    return hcf"
2911,write a python function that takes in two numbers and returns their LCM,"def lcm(num1, num2):
    bigger = num1 if num1 > num2 else num2
    while True:
        if (bigger % num1 == 0) and (bigger % num2 == 0):
            break
        bigger += 1
    return bigger"
2912,"write a recursive python function to calculate sum of natural numbers upto n, where n is an argument","def recursive_sum(n):
    if n <= 1:
        return n
    else:
        return n + recursive_sum(n-1)"
2913,write a python function that deletes the last element of a list and returns the list and the deleted element,"def delete_last_element(list_to_be_processed):
    deleted_element = list_to_be_processed.pop()
    return list_to_be_processed, deleted_element"
2914,write a python function that takes in a list and returns a list containing the squares of the elements of the input list,"def square_list_elements(list_to_be_squared):
    return list( map(lambda x: x**2, list_to_be_squared) )"
2915,"write a python function that finds square roots of a given number, if the square root is an integer, else returns the message ""Error - the square root is not an integer""","def find_integer_square_roots(num):
    found = False
    for k in range(1, (num//2)+1):
        if ((k**2)==num):
            found = True
            break
    if not found:
        return ""Error - the square root is not an integer""
    return -k, k"
2916,write a python program that prints out natural numbers less than or equal to the given number using a while loop,"input_num = 27
while input_num:
    print(input_num)
    input_num -= 1"
2917,"write a python function that takes two numbers. The function divides the first number by the second and returns the answer. The function returns None, if the second number is 0","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
2918,write a python program uses else with for loop,"seq = ""abcde""
for k in seq:
    if k == ""f"":
        break
else:
    print(""f Not Found!"")"
2919,Write a function to return the mean of numbers in a list,"def cal_mean(num_list:list)->float:
    if num_list:
        return sum(num_list)/len(num_list)
    else:
        return None"
2920,Write a function to return the median of numbers in a list,"def cal_median(num_list:list)->float:
    if num_list:
        if len(num_list)%2 != 0:
            return sorted(num_list)[int(len(num_list)/2) - 1]
        else:
            return (sorted(num_list)[int(len(num_list)/2) - 1] + sorted(num_list)[int(len(num_list)/2)])/2
    else:
        return None"
2921,Write a function to return the area of triangle by heros formula,"def cal_triangle_area(a:float,b:float,c:float)->float:
    if a or b or c:
        s = (a+b+c)/2
        if s>a and s>b and s>c:
            area = (s*(s-a)*(s-b)*(s-c))**(1/2)
            return round(area,2)
        else:
            return None
    return None"
2922,Write a function to return the area of a equilateral triangle,"def cal_eq_triangle_area(a:float)->float:
    if a:
        return (3**(1/2))*(a**2)/4
    else:
        return None"
2923,Write a function to return the area of a right angle triangle,"def cal_rt_triangle_area(base:float,height:float)->float:
    if base and height:
        return (base*height)/2
    else:
        return None"
2924,Write a function to return the cartisian distance of a point from origin,"def cal_dist_from_orign(x:float,y:float)->float:
    return (x**2+y**2)**(1/2)"
2925,Write a function to return the cartisian distance between two points,"def cal_cart_distance(x1:float,y1:float,x2:float,y2:float)->float:
    return ((x1-x2)**2+(y1-y2)**2)**(1/2)"
2926,Write a function to return the type roots of a quadratic equation ax**2 + bx + c = 0,"def root_type(a:float,b:float,c:float):
    if b**2-4*a*c >= 0:
        return 'real'
    else:
        return 'imaginary'"
2927,Write a function to return the sum of the roots of a quadratic equation ax**2 + bx + c = 0,"def sum_of_roots(a:float,c:float):
    if a:
        return c/a
    else:
        return None"
2928,Write a function to return the product of the roots of a quadratic equation ax**2 + bx + c = 0,"def prod_of_roots(a:float,b:float):
    if a:
        return -b/a
    else:
        return None"
2929,Write a function to return the real of the roots of a quadratic equation else return None ax**2 + bx + c = 0,"def roots_of_qad_eq(a:float,b:float,c:float):
    d = b**2-4*a*c
    if d >= 0:
        return (-b+(d)**(1/2))/2*a,(-b-(d)**(1/2))/2*a
    else:
        return None"
2930,Write a function to return the profit or loss based on cost price and selling price,"def find_profit_or_loss(cp,sp):
    if cp > sp:
        return 'loss', cp-sp
    elif cp < sp:
        return 'profit', sp-cp
    else:
        return 'no profit or loss', 0"
2931,Write a function to return the area of a rectangle,"def cal_area_rect(length, breadth):
    return length*breadth"
2932,Write a function to return the area of a square,"def cal_area_square(side):
    return side**2"
2933,Write a function to return the area of a rhombus with diagonals q1 and q2,"def cal_area_rhombus(q1,q2):
    return (q1*q2)/2"
2934,Write a function to return the area of a trapezium with base a base b and height h between parallel sides,"def cal_area_trapezium(a,b,h):
    return h*(a+b)/2"
2935,Write a function to return the area of a circle of raidus r,"def cal_area_circle(r):
    pi = 3.14
    return pi*r**2"
2936,Write a function to return the circumference of a circle,"def cal_circumference(r):
    pi = 3.14
    return 2*pi*r"
2937,Write a function to return the perimeter of a rectangle,"def cal_perimeter_rect(length, bredth):
    return 2*(length+bredth)"
2938,Write a function to return the perimeter of a triangle,"def cal_perimeter_triangle(s1,s2,s3):
    return s1+s2+s3"
2939,Write a function to return the perimeter of a square,"def cal_perimeter_square(side):
    return 4*side"
2940,Write a function to return the perimeter of an equilateral triangle,"def cal_perimeter_eq_triangle(a):
    return 3*a"
2941,Write a function to return the perimeter of a isoscales triangle,"def cal_perimeter_iso_triangle(s1,s2):
    return 2*s1+s2"
2942,Write a function to return the area of an ellipse,"def cal_area_ellipse(minor, major):
    pi = 3.14
    return pi*(minor*major)"
2943,Write a function to return the lateral surface area of a cylinder,"def cal_cylinder_lat_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius*height"
2944,Write a function to return the curved surface area of a cone,"def cal_cone_curved_surf_area(slant_height,radius):
    pi=3.14
    return pi*radius*slant_height"
2945,Write a function to return the total surface area of a cube of side a,"def cal_surface_area_cube(a):
    return 6*(a**2)"
2946,"Write a function to return the total surface area of a cuboid of length l, bredth b and height h","def cal_surface_area_cuboid(l,b,h):
    return 2*(l*b+b*h+h*l)"
2947,Write a function to return the surface area of a sphere,"def cal_area_sphere(radius):
    pi = 3.14
    return 4*pi*(radius**2)"
2948,Write a function to return the surface area of a hemi-sphere,"def cal_area_hemisphere(radius):
    pi = 3.14
    return 2*pi*(radius**2)"
2949,Write a function to return the total surface area of a cylinder,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
2950,Write a function to return the lateral surface area of a cone,"def cal_cone_lateral_surf_area(height,radius):
    pi=3.14
    return pi*radius*(((height**2)+(radius**2))**(1/2))"
2951,Write a function to return the volume of a cylinder,"def cal_cylinder_volume(height, radius):
    pi=3.14
    return pi*(radius**2)*height"
2952,Write a function to return the volume of a cone,"def cal_cone_volume(height,radius):
    pi=3.14
    return pi*(radius**2)*height/3"
2953,Write a function to return the volume of a hemi sphere,"def cal_hemisphere_volume(radius:float)->float:
    pi=3.14
    return (2/3)*pi*(radius**3)"
2954,Write a function to return the volume of a sphere,"def cal_sphere_volume(radius:float)->float:
    pi=3.14
    return (4/3)*pi*(radius**3)"
2955,Write a function to return the volume of a cuboid,"def cal_cuboid_volume(length:float, breadth:float, height:float)->float:
    return length*breadth*height"
2956,Write a function to return the volume of a cube,"def cal_cube_volume(side:float)->float:
    return side**3"
2957,Write a function to return the speed of moving object based of distance travelled in given time,"def cal_speed(distance:float,time:float)->float:
    return distance/time"
2958,Write a function to return the distance covered by a moving object based on speend and given time,"def cal_distance(time:float,speed:float)->float:
    return time*speed"
2959,Write a function to return the time taken by a given of moving object based of distance travelled in given time,"def cal_time(distance:float,speed:float)->float:
    return distance/speed"
2960,Write a function to return the torque when a force f is applied at angle thea and distance for axis of rotation to place force applied is r,"def cal_torque(force:float,theta:float,r:float)->float:
    import math
    return force*r*math.sin(theta)"
2961,Write a function to return the angualr veolcity based on augualr distance travelled in radian unit and time taken,"def cal_angular_velocity(angular_dist:float,time:float)->float:
    return angular_dist/time"
2962,Write a function to calculate the focal length of a lense buy the distance of object and distance of image from lense,"def cal_focal_length_of_lense(u:float,v:float)->float:
    return (u*v)/(u+v)"
2963,Write a function to calculate the gravitational force between two objects of mass m1 and m2 and distance of r between them,"def cal_gforce(mass1:float,mass2:float, distance:float)->float:
    g = 6.674*(10)**(-11)
    return (g*mass1*mass2)/(distance**2)"
2964,Write a function to calculate the current in the curcit where the resistance is R and voltage is V,"def cal_current(resistance:float, voltage:float)->float:
    return voltage/resistance"
2965,Write a function to calculate the total capacitance of capacitors in parallel in a given list,"def cal_total_cap_in_parallel(cap_list:list)->float:
    return sum(cap_list)"
2966,Write a function to calculate the total resistance of resistances in parallel in a given list,"def cal_total_res_in_parallel(res_list:list)->float:
    return sum([1/r for r in res_list])"
2967,Write a function to calculate the total resistance of resistances in series in a given list,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
2968,Write a function to calculate the moment of inertia of a ring of mass M and radius R,"def cal_mi_ring(mass:float,radius:float)->float:
    return mass*(radius**2)"
2969,Write a function to calculate the moment of inertia of a sphere of mass M and radius R,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
2970,"Write a function to calculate the pressure P of ideal gas based on ideal gas equation - Volume V, and Temperatue T are given","def find_pressure_of_ideal_gas(volume:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/volume"
2971,Write a function to calculate the volume V of ideal gas based on ideal gas equation Pressure P and Tempreature T given,"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/pressure"
2972,Write a function to calculate the Temprature T of ideal gas based on ideal gas equation Pressure P and Volume V given,"def find_temp_of_ideal_gas(pressure:float, volume:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (pressure*volume)/n*r"
2973,"Write a function to calculate the velocity of an object with initial velocity u, time t and acceleration a","def cal_final_velocity(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity + accelration*time"
2974,"Write a function to calculate the displacement of an object with initial velocity u, time t and acceleration a","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
2975,Write a function to calculate amount of radioactive element left based on initial amount and half life,"def cal_half_life(initail_quatity:float, time_elapsed:float, half_life:float)->float:
    return initail_quatity*((1/2)**(time_elapsed/half_life))"
2976,Write a function to calculate the new selling price based on discount percentage,"def cal_sp_after_discount(sp:float,discount:float)->float:
    return sp*(1 - discount/100)"
2977,"Write a function to calculate the simple interest for principal p, rate r and time in years y","def get_si(p:float, r:float, t:float)->float:
    return (p*r*t)/100"
2978,"Write a function to calculate the compound interest for principal p, rate r and time in years y","def get_ci(p:float, r:float, t:float, n:float)->float:
    return round(p*((1+(r/(n*100)))**(n*t)) - p,2)"
2979,Write a function to calculate the energy released by converting mass m in kg to energy,"def cal_energy_by_mass(mass:float)->float:
    c = 300000
    return mass * (c**2)"
2980,Write a function to calculate the kinetic energy of an object of mass m and velocity v,"def cal_ke(mass:float,velocity:float)->float:
    return (mass*(velocity)**2)/2"
2981,Write a function to calculate the potential energy of an object of mass m at height h,"def cal_pe(mass:float,height:float)->float:
    g = 9.8
    return (mass*g*height)"
2982,Write a function to calculate the electrostatic force between two charged particles with charge q1 and q2 at a distance d apart,"def cal_electrostatic_force(q1,q2,d):
    k = 9*(10**9)
    return (k*q1*q2)/(d**2)"
2983,Write a function to calculate the density given mass and volume,"def cal_density(mass,volume):
    return (mass/volume)"
2984,"Write a function to convert the temprature celsius 'c' to fahrenheit 'f' or fahrenheit to celsius
     Return the converted temprature","def temp_converter(temp,temp_given_in = 'f'):
    if temp_given_in.lower() == 'f': # Convert to C
        return (temp - 32) * (5/9)
    else: # Convert to F
        return (temp * 9/5) + 32"
2985,Write a function to Get Kth Column of Matrix,"def kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2):
    print(""The original list is : "" + str(test_list))
    K =k
    res = list(zip(*test_list))[K]
    print(""The Kth column of matrix is : "" + str(res))"
2986,Write a function to print all possible subarrays using recursion,"def printSubArrays(arr, start, end):
    if end == len(arr):
        return
    elif start > end:
        return printSubArrays(arr, 0, end + 1)
    else:
        print(arr[start:end + 1])
        return printSubArrays(arr, start + 1, end)
arr = [1, 2, 3]
printSubArrays(arr, 0, 0)"
2987,Write a function to find sum of nested list using Recursion,"total = 0
def sum_nestedlist(l):
    global total
    for j in range(len(l)):
        if type(l[j]) == list:
            sum_nestedlist(l[j])
        else:
            total += l[j]
sum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])
print(total)"
2988,Write a function to find power of number using recursion,"def power(N, P):
    if (P == 0 or P == 1):
        return N
    else:
        return (N * power(N, P - 1))
print(power(5, 2))"
2989,Write a function to Filter String with substring at specific position,"def f_substring():
    test_list = ['program ', 'to', 'filter', 'for', 'substring']
    print(""The original list is : "" + str(test_list))
    sub_str = 'geeks'
    i, j = 0, 5
    res = list(filter(lambda ele: ele[i: j] == sub_str, test_list))
    print(""Filtered list : "" + str(res))"
2990,Write a function to remove punctuation from the string,"def r_punc():
    test_str = ""end, is best : for ! Nlp ;""
    print(""The original string is : "" + test_str)
    punc = r'!()-[]{};:\, <>./?@#$%^&*_~'
    for ele in test_str:
        if ele in punc:
            test_str = test_str.replace(ele, """")
    print(""The string after punctuation filter : "" + test_str)"
2991,Write a function to implement Gnome Sort,"def gnomeSort(arr, n):
    index = 0
    while index < n:
        if index == 0:
            index = index + 1
        if arr[index] >= arr[index - 1]:
            index = index + 1
        else:
            arr[index], arr[index - 1] = arr[index - 1], arr[index]
            index = index - 1
    return arr
arr = [34, 2, 10, -9]
n = len(arr)
arr = gnomeSort(arr, n)
print(""Sorted seqquence after applying Gnome Sort :"")
for i in arr:
    print(i)"
2992,Write a function to implement stooge sort,"def stoogesort(arr, l, h):
    if l >= h:
        return
    if arr[l] > arr[h]:
        t = arr[l]
        arr[l] = arr[h]
        arr[h] = t
    if h - l + 1 > 2:
        t = (int)((h - l + 1) / 3)
        stoogesort(arr, l, (h - t))
        stoogesort(arr, l + t, (h))
        stoogesort(arr, l, (h - t))
arr = [2, 4, 5, 3, 1]
n = len(arr)
stoogesort(arr, 0, n - 1)
for i in range(0, n):
    print(arr[i], end = '')"
2993,Write a function to find the  difference between two times,"def difference(h1, m1, h2, m2):
    t1 = h1 * 60 + m1
    t2 = h2 * 60 + m2
    if (t1 == t2):
        print(""Both are same times"")
        return
    else:
        diff = t2 - t1
    h = (int(diff / 60)) % 24
    m = diff % 60
    print(h, "":"", m)
difference(7, 20, 9, 45)
difference(15, 23, 18, 54)
difference(16, 20, 16, 20)"
2994,Write a function to convert time from 12 hour to 24 hour format,"def convert24(str1):
    if str1[-2:] == ""AM"" and str1[:2] == ""12"":
        return ""00"" + str1[2:-2]
    elif str1[-2:] == ""AM"":
        return str1[:-2]
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"":
        return str1[:-2]
    else:
        return str(int(str1[:2]) + 12) + str1[2:8]
print(convert24(""08:05:45 PM""))"
2995,Write a function to find time for a given angle.,"def calcAngle(hh, mm):
    hour_angle = 0.5 * (hh * 60 + mm)
    minute_angle = 6 * mm
    angle = abs(hour_angle - minute_angle)
    angle = min(360 - angle, angle)
    return angle"
2996,Write a function to print all time when angle between hour hand and minute,"def printTime(theta):
    for hh in range(0, 12):
        for mm in range(0, 60):
            if (calcAngle(hh, mm) == theta):
                print(hh, "":"", mm, sep="""")
                return
    print(""Input angle not valid."")
    return
theta = 90.0
printTime(theta)"
2997,"Team Members: Santu Hazra, Manu Chauhan, Ammar Adil and Prakash Nishtala","import os
import nltk
import string
from collections import Counter
from itertools import permutations, combinations, combinations_with_replacement
letters = string.ascii_lowercase"
2998,write a python function to print pyramid pattern,"def pyramid_pattern(symbol='*', count=4):
    for i in range(1, count + 1):
        print(' ' * (count - i) + symbol * i, end='')
        print(symbol * (i - 1) + ' ' * (count - i))"
2999,write a python function to count the occurrence of a given word in a given file,"def check_word_count(word, file):
    if not os.path.isfile(file):
        raise FileNotFoundError
    if not isinstance(word, str):
        raise TypeError
    with open(file, 'r') as f:
        lines = f.readlines()
        words = [l.strip().split(' ') for l in lines]
        words = [word for sublist in words for word in sublist]
        c = Counter(words)
    return c.get(word, 0)"
3000,write a python function to make permutations from a list with given length,"def get_permutations(data_list, l=2):
    return list(permutations(data_list, r=l))"
3001,write a python program to get all possible permutations of size of the string in lexicographic sorted order.,"def get_ordered_permutations(word, k):
    [print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"
3002,"write a python program to get all possible combinations, up to size of the string in lexicographic sorted order.","def get_ordered_combinations(string, k):
    [print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"
3003,write a python function to get all possible size replacement combinations of the string in lexicographic sorted order.,"def get_ordered_combinations_with_replacement(string, k):
    [print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"
3004,"write a python function for Caesar Cipher, with given shift value and return the modified text","def caesar_cipher(text, shift=1):
    alphabet = string.ascii_lowercase
    shifted_alphabet = alphabet[shift:] + alphabet[:shift]
    table = str.maketrans(alphabet, shifted_alphabet)
    return text.translate(table)"
3005,write a python function for a string to swap the case of all letters.,"def swap_case(s):
    return ''.join(x for x in (i.lower() if i.isupper() else i.upper() for i in s))"
3006,write a python function to get symmetric difference between two sets from user.,"def symmetric_diff_sets():
    M, m = input(), set(list(map(int, input().split())))
    N, n = input(), set(list(map(int, input().split())))
    s = sorted(list(m.difference(n)) + list(n.difference(m)))
    for i in s:
        print(i)"
3007,write a python function to check if given set is subset or not,"def check_subset():
    for _ in range(int(input())):
        x, a, z, b = input(), set(input().split()), input(), set(input().split())
    print(a.issubset(b))"
3008,write a python program for basic HTML parser,"from html.parser import HTMLParser
class MyHTMLParser(HTMLParser):
    def handle_starttag(self, tag, attrs):
        print(tag)
        for attr in attrs:
            print(""->"", attr[0], "">"", attr[1])
parser = MyHTMLParser()
for i in range(int(input())):
    parser.feed(input())"
3009,"write a python function for Named Entity Recognizer using NLTK
                     label = entity.label()","def ner_checker(texts):
    all_set = set()
    def nltk_ner_check(texts):
        for i, text in texts:
            for entity in nltk.ne_chunk(nltk.pos_tag(nltk.word_tokenize(text))):
                if isinstance(entity, nltk.tree.Tree):
                    etext = "" "".join([word for word, tag in entity.leaves()])
                    all_set.add(etext)
    nltk_ner_check(texts=texts)
    return all_set"
3010,"write a function to compress a given string. Suppose a character 'c' occurs consecutively X times in the string. Replace these consecutive occurrences of the character 'c' with  (X, c) in the string.","def compress(text):
    from itertools import groupby
    for k, g in groupby(text):
        print(""({}, {})"".format(len(list(g)), k), end="" "")"
3011,write a python function to count 'a's in the repetition of a given string 'n' times.,"def repeated_string(s, n):
    return s.count('a') * (n // len(s)) + s[:n % len(s)].count('a')"
3012,"write a python function to find all the substrings of given string that contains 2 or more vowels. Also, these substrings must lie in between 2 consonants and should contain vowels only.","def find_substr():
    import re
    v = ""aeiou""
    c = ""qwrtypsdfghjklzxcvbnm""
    m = re.findall(r""(?<=[%s])([%s]{2,})[%s]"" % (c, v, c), input(), flags=re.I)
    print('\n'.join(m or ['-1']))"
3013,write a python function that given five positive integers and find the minimum and maximum values that can be calculated by summing exactly four of the five integers.,"def min_max():
    nums = [int(x) for x in input().strip().split(' ')]
    print(sum(nums) - max(nums), sum(nums) - min(nums))"
3014,"write a python function to find the number of (i, j) pairs where i<j and ar[i]+ar[j] is divisible by k in a data list","def divisible_sum_pairs(arr, k):
    count = 0
    n = len(arr)
    for i in range(n - 1):
        j = i + 1
        while j < n:
            if ((arr[i] + arr[j]) % k) == 0:
                count += 1
            j += 1
    return count
import math"
3015,Write a python Class to calculate area of a circle and print the vale for a radius,"class CircleArea:
    def __init__(self, radius):
        self.radius = radius
    def area(self):
        return math.pi * self.radius * self.radius
r = 2
obj = CircleArea(r)
print(""Area of circle:"", obj.area())"
3016,Write a python function to count the number of Words in a Text File,"def check_words():
    fname = input(""file name: "")
    num_words = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            num_words += len(words)
    print(""Number of words = "", num_words)"
3017,Write a python function to Count the Number of Lines in a Text File,"def check_lines():
    fname = input(""file name: "")
    num_lines = 0
    with open(fname, 'r') as f:
        for line in f:
            num_lines += 1
    print(""Number of lines = "", num_lines)"
3018,Write a python function that Counts the Number of Blank Spaces in a Text File,"def count_blank_space():
    fname = input(""file name:"")
    count = 0
    with open(fname, 'r') as f:
        for line in f:
            count += line.count(' ')
    return count"
3019,Write a python function to check if 2 strings are anagrams or not,"def anagram(s1, s2):
    if sorted(s1) == sorted(s2):
        return True
    else:
        return False"
3020,Write a python function to remove the duplicate items from a List and return the modified data list,"def remove_duplicates(data):
    c = Counter(data)
    s = set(data)
    for item in s:
        count = c.get(item)
        while count > 1:
            data.pop(item)
            count -= 1
    return data"
3021,write a python function to get the most common word in text,"def most_common(text):
    c = Counter(text)
    return c.most_common(1)"
3022,write a python function to do bitwise multiplication on a given bin number by given shifts,"def bit_mul(n, shift):
    return n << shift"
3023,write a python function for bitwise division with given number of shifts,"def bit_div(n, shift):
    return n >> shift"
3024,write a python function to get dot product between two lists of numbers,"def dot_product(a, b):
    return sum(e[0] * e[1] for e in zip(a, b))"
3025,write a python function to strip punctuations from a given string,"def strip_punctuations(s):
    return s.translate(str.maketrans('', '', string.punctuation))"
3026,write a python function that returns biggest character in a string,"from functools import reduce
def biggest_char(string):
    if not isinstance(string, str):
        raise TypeError
    return reduce(lambda x, y: x if ord(x) > ord(y) else y, string)"
3027,write a python function to Count the Number of Digits in a Number,"def count_digits():
    n = int(input(""Enter number:""))
    count = 0
    while n > 0:
        count = count + 1
        n = n // 10
    return count"
3028,write a python function to count number of vowels in a string,"def count_vowels(text):
    v = set('aeiou')
    for i in v:
        print(f'\n {i} occurs {text.count(i)} times')"
3029,write a python function to check external IP address,"def check_ip():
    import re
    import urllib.request as ur
    url = ""http://checkip.dyndns.org""
    with ur.urlopen(url) as u:
        s = str(u.read())
        ip = re.findall(r""\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}"", s)
        print(""IP Address: "", ip[0])
        return ip[0]"
3030,write a python function for dice roll asking user for input to continue and randomly give an output.,"def dice():
    import random
    min = 1
    max = 6
    roll_again = 'y'
    while roll_again == ""yes"" or roll_again == ""y"":
        print(""Rolling the dice..."")
        print(random.randint(min, max))
        roll_again = input(""Roll the dices again?"")
from cryptography.fernet import Fernet"
3031,write a python function to generate SHA256 for given text,"def get_sha256(text):
    import hashlib
    return hashlib.sha256(text).hexdigest()"
3032,write a python function to check if SHA256 hashed value is valid for given data or not,"def check_sha256_hash(hashed, data):
    import hashlib
    return True if hashed == hashlib.sha256(data.encode()).hexdigest() else False"
3033,write a python function to get HTML code for a given URL,"def get_html(url=""http://www.python.org""):
    import urllib.request
    fp = urllib.request.urlopen(url)
    mybytes = fp.read()
    mystr = mybytes.decode(""utf8"")
    fp.close()
    print(mystr)"
3034,"write a python function to get stock prices for a company from 2015 to 2020-12
     get data on this ticker
     get the historical prices for this ticker
     see your data","def get_stock_prices(tickerSymbol='TSLA'):
    import yfinance as yf
    tickerData = yf.Ticker(tickerSymbol)
    tickerDf = tickerData.history(period='1d', start='2015-1-1', end='2020-12-20')
    print(tickerDf)"
3035,write a python function to get 10 best Artists playing on Apple iTunes,"def get_artists():
    import requests
    url = 'https://itunes.apple.com/us/rss/topsongs/limit=10/json'
    response = requests.get(url)
    data = response.json()
    for artist_dict in data['feed']['entry']:
        artist_name = artist_dict['im:artist']['label']
        print(artist_name)"
3036,"get_word(data=""./christmas_carol.txt"")
 write a python function to sort each item in a data structure on one of the keys","def sort_list_with_key():
    animals = [
        {'type': 'lion', 'name': 'Mr. T', 'age': 7},
        {'type': 'tiger', 'name': 'scarface', 'age': 3},
        {'type': 'puma', 'name': 'Joe', 'age': 4}]
    print(sorted(animals, key=lambda animal: -animal['age']))"
3037,write a python function with generator for an infinite sequence,"def infinite_sequence():
    n = 0
    while True:
        yield n
        n += 1
import uuid"
3038,write a python function to generate a Unique identifier across space and time in this cosmos.,"def get_uuid():
    return uuid.uuid4()
import secrets"
3039,write a python function to generate cryptographically strong pseudo-random data,"def get_cryptographically_secure_data(n=101):
    return secrets.token_bytes(n), secrets.token_hex(n)"
3040,write a python function to convert byte to UTF-8,"def byte_to_utf8(data):
    return data.decode(""utf-8"")
print(byte_to_utf8(data=b'r\xc3\xa9sum\xc3\xa9'))
def hanoi(disks, source, auxiliary, target):
    if disks == 1:
        print('Move disk 1 from peg {} to peg {}.'.format(source, target))
        return
    hanoi(disks - 1, source, target, auxiliary)
    print('Move disk {} from peg {} to peg {}.'.format(disks, source, target))
    hanoi(disks - 1, auxiliary, source, target)"
3041,Write a python program to Implement Linear Search and print the key element if found,"def linear_search(alist, key):
    """"""Return index of key in alist. Return -1 if key not present.""""""
    for i in range(len(alist)):
        if alist[i] == key:
            return i
    return -1
alist = [2, 3, 5, 6, 4, 5]
key = 6
index = linear_search(alist, key)
if index < 0:
    print(f'{key} was not found.')
else:
    print(f'{key} was found at index {index}.')"
3042,Write a python program to Implement Bubble sort and print the sorted list for the below list,"def bubble_sort(alist):
    for i in range(len(alist) - 1, 0, -1):
        no_swap = True
        for j in range(0, i):
            if alist[j + 1] < alist[j]:
                alist[j], alist[j + 1] = alist[j + 1], alist[j]
                no_swap = False
        if no_swap:
            return
alist = [2, 3, 5, 6, 4, 5]
bubble_sort(alist)
print('Sorted list: ', end='')
print(alist)"
3043,Write a python program to Implement Selection sort and print the sorted list for the below list,"def selection_sort(alist):
    for i in range(0, len(alist) - 1):
        smallest = i
        for j in range(i + 1, len(alist)):
            if alist[j] < alist[smallest]:
                smallest = j
        alist[i], alist[smallest] = alist[smallest], alist[i]
alist = [2, 3, 5, 6, 4, 5]
selection_sort(alist)
print('Sorted list: ', end='')
print(alist)"
3044,Write a python program to Implement Insertion sort and print the sorted list for the below list,"def insertion_sort(alist):
    for i in range(1, len(alist)):
        temp = alist[i]
        j = i - 1
        while (j >= 0 and temp < alist[j]):
            alist[j + 1] = alist[j]
            j = j - 1
        alist[j + 1] = temp
alist = [2, 3, 5, 6, 4, 5]
insertion_sort(alist)
print('Sorted list: ', end='')
print(alist)"
3045,Write a python program to Implement Gnome sort and print the sorted list for the below list,"def gnome_sort(alist):
    for pos in range(1, len(alist)):
        while (pos != 0 and alist[pos] < alist[pos - 1]):
            alist[pos], alist[pos - 1] = alist[pos - 1], alist[pos]
            pos = pos - 1
alist = [2, 3, 5, 6, 4, 5]
gnome_sort(alist)
print('Sorted list: ', end='')
print(alist)"
3046,Write a python Class to calculate area of a rectangle and print the area,"class rectangle():
    def __init__(self,breadth,length):
        self.breadth=breadth
        self.length=length
    def area(self):
        return self.breadth*self.length
a=6
b=4
obj=rectangle(a,b)
print(""Area of rectangle:"",obj.area())"
3047,Write a python Class to calculate area of a circle and print the vale for a radius,"class CircleArea():
    def __init__(self,radius):
        self.radius=radius
    def area(self):
        return 3.14 * self.radius * self.radius
a=6
obj=CircleArea(a)
print(""Area of rectangle:"",obj.area())"
3048,Write a python Class to calculate Perimeter of a circle and print the vale for a radius,"class CirclePerimeter():
    def __init__(self,radius):
        self.radius=radius
    def perimeter(self):
        return 2 * 3.14 * self.radius
a=6
obj=CirclePerimeter(a)
print(""Perimeter of rectangle:"",obj.perimeter())"
3049,Write a python Class to print All Possible Subsets from a Set of Distinct Integers,"class sub:  
    def f1(self, s1):  
        return self.f2([], sorted(s1))  
    def f2(self, curr, s1):  
        if s1:  
            return self.f2(curr, s1[1:]) + self.f2(curr + [s1[0]], s1[1:])  
        return [curr]  
a=[2, 3, 5, 6, 4, 5]
print(""Subsets: "")
print(sub().f1(a))"
3050,Write a python program to Read and print the Contents of a File,"a=str(input(""Enter file name .txt extension:""))
file2=open(a,'r')
line=file2.readline()
while(line!=""""):
    print(line)
    line=file2.readline()
file2.close()"
3051,Write a python program to Count and print the Number of Words in a Text File,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
3052,Write a python program to Count the Number of Lines in a Text File,"fname = input(""Enter file name: "")
num_lines = 0
with open(fname, 'r') as f:
    for line in f:
        num_lines += 1
print(""Number of lines:"")
print(num_lines)"
3053,Write a python program to Count the Occurrences of a Word in a Text File,"fname = input(""Enter file name: "")
word='the'
k = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        for i in words:
            if(i==word):
                k=k+1
print(f""Frequency of Occurrences of the word {a} is:"")
print(k)"
3054,Write a python function to Copy the Contents of One File into Another,"def copy(from_file, to_file):
    with open(from_file) as f:
        with open(to_file, ""w"") as f1:
            for line in f:
                f1.write(line)"
3055,Write a python function that Counts the Number of Times a Certain Letter Appears in the Text File,"def count_letter(fname, l):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter==l):
                        k=k+1
    return k"
3056,Write a python function that Print all the Numbers Present in the Text File,"def print_number(fname):
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isdigit()):
                        print(letter)"
3057,Write a python function that Counts the Number of Blank Spaces in a Text File,"def count_blank_space(fname):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isspace):
                        k=k+1
    return k"
3058,Write a python function that Capitalize the First Letter of Every Word in the File,"def capitalize(fname):
    with open(fname, 'r') as f:
        for line in f:
            l=line.title()
            print(l)"
3059,Write a python function that prints the Contents of a File in Reverse Order,"def reverse_content(filename):
    for line in reversed(list(open(filename))):
        print(line.rstrip())"
3060,Write a python Program to Flatten and print a List,"a=[[1,[[2]],[[[3]]]],[[4],5]]
flatten=lambda l: sum(map(flatten,l),[]) if isinstance(l,list) else [l]
print(flatten(a))"
3061,Write a Python Program to print the LCM of Two Numbers,"def lcm(a,b):
    lcm.multiple=lcm.multiple+b
    if((lcm.multiple % a == 0) and (lcm.multiple % b == 0)):
        return lcm.multiple
    else:
        lcm(a, b)
    return lcm.multiple
lcm.multiple=0
a=4
b=7
if(a>b):
    LCM=lcm(b,a)
else:
    LCM=lcm(a,b)
print(LCM)"
3062,Write a Python function to print the GSD of Two Numbers,"def gcd(a,b):
    if(b==0):
        return a
    else:
        return gcd(b,a%b)"
3063,Write a Python function to Find if a Number is Prime or Not Prime,"def check(n, div = None):
    if div is None:
        div = n - 1
    while div >= 2:
        if n % div == 0:
            print(""Number not prime"")
            return False
        else:
            return check(n, div-1)
    else:
        print(""Number is prime"")
        return 'True'"
3064,Write a Python function to Find the Power of a Number Using Recursion,"def power(base,exp):
    if(exp==1):
        return(base)
    if(exp!=1):
        return(base*power(base,exp-1))"
3065,Write a Python function to Find the Total Sum of a Nested List Using Recursion,"def sum1(lst):
    total = 0
    for element in lst:
        if (type(element) == type([])):
            total = total + sum1(element)
        else:
            total = total + element
    return total"
3066,Write a Python function to Count and print the Number of Vowels Present in a String using Sets,"def count_vowels(s):
    count = 0
    vowels = set(""aeiou"")
    for letter in s:
        if letter in vowels:
            count += 1
    return count"
3067,Write a Python Program to prints Common Letters in Two Input Strings,"s1='python'
s2='schoolofai'
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
3068,Write a Python Program that Prints which Letters are in the First String but not in the Second,"s1='python'
s2='schoolofai'
a=list(set(s1)-set(s2))
print(""The letters are:"")
for i in a:
    print(i)"
3069,Write a Python Program to Concatenate Two Dictionaries Into One,"def concat_dic(d1, d2):
    return d1.update(d2)"
3070,Write a Python Program to Multiply All the Items in a Dictionary,"def mul_dict(d):
    tot=1
    for i in d:    
        tot=tot*d[i]
    return tot"
3071,Write a Python Program to Remove the Given Key from a Dictionary,"def remove_item_dict(d, key):
    if key in d: 
        del d[key]
    else:
        print(""Key not found!"")
        exit(0)"
3072,Write a Python Program to Map Two Lists into a Dictionary,"def map_dict(keys, values):
    return dict(zip(keys,values))"
3073,Write a Python Program to Remove the nth Index Character from a Non-Empty String,"def remove(string, n):  
      first = string[:n]   
      last = string[n+1:]  
      return first + last"
3074,Write a Python Program to Detect if Two Strings are Anagrams,"def anagram_check(s1, s2):
    if(sorted(s1)==sorted(s2)):
        return True
    else:
        return False"
3075,Write a Python Program to Form a New String where the First Character and the Last Character have been Exchanged,"def change(string):
      return string[-1:] + string[1:-1] + string[:1]"
3076,Write a Python Program to Remove the Characters of Odd Index Values in a String,"def modify(string):  
    final = """"   
    for i in range(len(string)):  
        if i % 2 == 0:  
            final = final + string[i]  
    return final"
3077,Write a Python Program to Take in Two Strings and Print the Larger String,"string1='python'
string2='theschoolofai'
count1=0
count2=0
for i in string1:
      count1=count1+1
for j in string2:
      count2=count2+1
if(count1<count2):
      print(""Larger string is:"")
      print(string2)
elif(count1==count2):
      print(""Both strings are equal."")
else:
      print(""Larger string is:"")
      print(string1)"
3078,Write a Python Program to Count and print Number of Lowercase Characters in a String,"string='This is an Assignment'
count=0
for i in string:
      if(i.islower()):
            count=count+1
print(""The number of lowercase characters is:"")
print(count)"
3079,Write a Python Program to Put Even and Odd elements in a List into Two Different Lists,"a=[2, 3, 8, 9, 2, 4, 6]
even=[]
odd=[]
for j in a:
    if(j%2==0):
        even.append(j)
    else:
        odd.append(j)
print(""The even list"",even)
print(""The odd list"",odd)"
3080,Write a Python Program to Sort the List According to the Second Element in Sublist,"a=[['A',34],['B',21],['C',26]]
for i in range(0,len(a)):
    for j in range(0,len(a)-i-1):
        if(a[j][1]>a[j+1][1]):
            temp=a[j]
            a[j]=a[j+1]
            a[j+1]=temp"
3081,Write a Python Program to Find the Second Largest Number in a List Using Bubble Sort,"a=[2, 3, 8, 9, 2, 4, 6]
for i in range(0,len(a)):
    for j in range(0,len(a)-i-1):
        if(a[j]>a[j+1]):
            temp=a[j]
            a[j]=a[j+1]
            a[j+1]=temp"
3082,Write a Python Program to Find the Intersection of Two Lists,"def main(alist, blist):
    def intersection(a, b):
        return list(set(a) & set(b))
    return intersection(alist, blist)"
3083,Write a Python Program to Create a List of Tuples with the First Element as the Number and Second Element as the Square of the Number using list comprehension,"l_range=2
u_range=5
a=[(x,x**2) for x in range(l_range,u_range+1)]"
3084,Write a Python Program to print all Numbers in a Range which are Perfect Squares and Sum of all Digits in the Number is Less than 10,"l=6
u=9
a=[x for x in range(l,u+1) if (int(x**0.5))**2==x and sum(list(map(int,str(x))))<10]
print(a)"
3085,Write a Python Program to Swap the First and Last Value of a List,"a=[2, 3, 8, 9, 2, 4, 6]
n = len(a)
temp=a[0]
a[0]=a[n-1]
a[n-1]=temp
print(""New list is:"")
print(a)"
3086,Write a Python Program to Remove and print the Duplicate Items from a List,"a=[2, 3, 8, 9, 2, 4, 6]
b = set()
unique = []
for x in a:
    if x not in b:
        unique.append(x)
        b.add(x)
print(""Non-duplicate items:"")
print(unique)"
3087,Write a Python Program to Read a List of Words and Return the Length of the Longest One,"a=['the', 'tsai', 'python']
max1=len(a[0])
temp=a[0]
for i in a:
    if(len(i)>max1):
       max1=len(i)
       temp=i
print(""The word with the longest length is:"")
print(temp)"
3088,Write a Python Program to Remove the ith Occurrence of the Given Word in a List where Words can Repeat,"a=['the', 'tsai', 'python' ,'a' ,'the', 'a']
c=[]
count=0
b='a'
n=3
for i in a:
    if(i==b):
        count=count+1
        if(count!=n):
            c.append(i)
    else:
        c.append(i)
if(count==0):
    print(""Item not found "")
else: 
    print(""The number of repetitions is: "",count)
    print(""Updated list is: "",c)
    print(""The distinct elements are: "",set(a))"
3089,Write a Python function to Find Element Occurring Odd Number of Times in a List,"def find_odd_occurring(alist):
    """"""Return the element that occurs odd number of times in alist.
    alist is a list in which all elements except one element occurs an even
    number of times.
    """"""
    ans = 0
    for element in alist:
        ans ^= element
    return ans"
3090,Write a Python function to Check Whether a Given Year is a Leap Year,"def leapyear_check(year):
    if(year%4==0 and year%100!=0 or year%400==0):
        return True
    else:
        return False"
3091,Write a Python Program to print Prime Factors of an Integer,"n=24
print(""Factors are:"")
i=1
while(i<=n):
    k=0
    if(n%i==0):
        j=1
        while(j<=i):
            if(i%j==0):
                k=k+1
            j=j+1
        if(k==2):
            print(i)
    i=i+1"
3092,Write a Python Program to print all the Divisors of an Integer,"n=60
print(""The divisors of the number are:"")
for i in range(1,n+1):
    if(n%i==0):
        print(i)"
3093,Write a Python Program to Check if a Number is an Armstrong Number,"def amstrong_check(n):
    a=list(map(int,str(n)))
    b=list(map(lambda x:x**3,a))
    if(sum(b)==n):
        return True
    else:
        return False"
3094,Write a Python Program to Print the Pascal’s triangle for n number of rows given by the user,"n=10
a=[]
for i in range(n):
    a.append([])
    a[i].append(1)
    for j in range(1,i):
        a[i].append(a[i-1][j-1]+a[i-1][j])
    if(n!=0):
        a[i].append(1)
for i in range(n):
    print(""   ""*(n-i),end="" "",sep="" "")
    for j in range(0,i+1):
        print('{0:6}'.format(a[i][j]),end="" "",sep="" "")
    print()"
3095,Write a Python Program to Check if a Number is a Perfect Number,"def perfect_no_check(n):
    sum1 = 0
    for i in range(1, n):
        if(n % i == 0):
            sum1 = sum1 + i
    if (sum1 == n):
        return True
    else:
        return False"
3096,Write a Python Program to Check if a Number is a Strong Number,"def strong_no_check(num):
    sum1=0
    temp=num
    while(num):
        i=1
        f=1
        r=num%10
        while(i<=r):
            f=f*i
            i=i+1
        sum1=sum1+f
        num=num//10
    if(sum1==temp):
        return True
    else:
        return False"
3097,Write a Python Program to Check If Two Numbers are Amicable Numbers,"def amicable_no_check(x, y):
    sum1=0
    sum2=0
    for i in range(1,x):
        if x%i==0:
            sum1+=i
    for j in range(1,y):
        if y%j==0:
            sum2+=j
    if(sum1==y and sum2==x):
        return True
    else:
        return False"
3098,Write a Python Program to Check if a Number is a Prime Number,"def prime_no_check(a):
    k=0
    for i in range(2,a//2+1):
        if(a%i==0):
            k=k+1
    if(k<=0):
        return True
    else:
        return False"
3099,Write a Python Program to print the Sum of First N Natural Numbers,"n=7
sum1 = 0
while(n > 0):
    sum1=sum1+n
    n=n-1
print(""The sum of first n natural numbers is"",sum1)"
3100,Write a Python Program to Print all Pythagorean Triplets in the Range,"limit=10
c=0
m=2
while(c<limit):
    for n in range(1,m+1):
        a=m*m-n*n
        b=2*m*n
        c=m*m+n*n
        if(c>limit):
            break
        if(a==0 or b==0 or c==0):
            break
        print(a,b,c)
    m=m+1"
3101,Write a Python Program to print the Number of Times a Particular Number Occurs in a List,"a=[2, 3, 8, 9, 2, 4, 6]
k=0
num=int(input(""Enter the number to be counted:""))
for j in a:
    if(j==num):
        k=k+1
print(""Number of times"",num,""appears is"",k)"
3102,"Write a Python Program to test and print Collatz Conjecture for a Given Number
             n is odd
             n is even","def collatz(n):
    while n > 1:
        print(n, end=' ')
        if (n % 2):
            n = 3*n + 1
        else:
            n = n//2
    print(1, end='')"
3103,Write a Python function to Count Set Bits in a Number,"def count_set_bits(n):
    count = 0
    while n:
        n &= n - 1
        count += 1
    return count"
3104,Write a Python Program to Generate Gray Codes using Recursion,"def get_gray_codes(n):
    """"""Return n-bit Gray code in a list.""""""
    if n == 0:
        return ['']
    first_half = get_gray_codes(n - 1)
    second_half = first_half.copy()
    first_half = ['0' + code for code in first_half]
    second_half = ['1' + code for code in reversed(second_half)]
    return first_half + second_half"
3105,Write a Python Program to Convert Gray Code to Binary,"def gray_to_binary(n):
    """"""Convert Gray codeword to binary and return it.""""""
    n = int(n, 2)
    mask = n
    while mask != 0:
        mask >>= 1
        n ^= mask
    return bin(n)[2:]"
3106,Write a Python Program to Convert Binary to Gray Code,"def binary_to_gray(n):
    """"""Convert Binary to Gray codeword and return it.""""""
    n = int(n, 2)
    n ^= (n >> 1)
    return bin(n)[2:]"
3107,Write a Python Program to print the Reverse a Given Number,"n=1023
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
3108,Write a Python Program to Accept Three Digits and Print all Possible Combinations from the Digits,"a=2
b=9
c=5
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
    for j in range(0,3):
        for k in range(0,3):
            if(i!=j&j!=k&k!=i):
                print(d[i],d[j],d[k])"
3109,Write a Python function to Print an Identity Matrix,"def print_identity_matrix(n):
    for i in range(0,n):
        for j in range(0,n):
            if(i==j):
                print(""1"",sep="" "",end="" "")
            else:
                print(""0"",sep="" "",end="" "")
        print()"
3110,Write a Python Program to print a list of fibonacci series for a given no using closer,"def fib():
    cache = {1:1, 2:1}
    def calc_fib(n):
        if n not in cache:
            print(f'Calculating fib({n})')
            cache[n] = calc_fib(n - 1) + calc_fib(n - 2)
        return cache[n]
    return calc_fib"
3111,Write a Python Program to print a list of fibonacci series for a given no using class,"class Fib:
    def __init__(self):
        self.cache = {1:1, 2:1}
    def fib(self, n):
        if n not in self.cache:
            print(f'Calculating fib({n})')
            self.cache[n] = self.fib(n-1) + self.fib(n-2)
        return self.cache[n]"
3112,Write a Python function to calculate factorial of a given no using closer,"def fact():
    cache = {0:1, 1:1}
    def calc_fib(n):
        if n not in cache:
            print(f'Calculating fact({n})')
            cache[n] = calc_fib(n - 1) * n
        return cache[n]
    return calc_fib"
3113,Write a Python function to calculate factorial of a given no using class,"class Fact:
    def __init__(self):
        self.cache = {0:1, 1:1}
    def fact(self, n):
        if n not in self.cache:
            self.cache[n] = self.fact(n-1) * n
        return self.cache[n]"
3114,Write a Python function to calculate dot product of two given sequence,"def dot_product(a, b):
    return sum( e[0]*e[1] for e in zip(a, b))"
3115,Write a Python function to Find the Sum of Sine Series,"import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine"
3116,Write a Python function to Find the Sum of Cosine Series,"def cosine(x,n):
    cosx = 1
    sign = -1
    for i in range(2, n, 2):
        pi=22/7
        y=x*(pi/180)
        cosx = cosx + (sign*(y**i))/math.factorial(i)
        sign = -sign
    return cosx"
3117,Write a Python function to strip vowels from a string,"def vowel_stripping(string):
    '''This function takes a string as an input strips out vowels and returns stripted out string'''
    return """".join([x for x in string if x not in('a','e','i','o','u')])"
3118,Write a Python function that shifts the character of strings,"def char_shift(string, shift_count):
    '''This function takes a string as an input and shifts each character by 5 and returns shifted string'''
    return """".join([chr(ord(x)+shift_count) if (ord(x)+shift_count) <= 122 else chr(96 + (ord(x)+shift_count) - 122) for x in string])"
3119,Write a Python function that returns biggest character in a string,"from functools import reduce
def biggest_char(string):
    '''This function takes an input as a string and returns the biggest output character in the string'''
    biggest_chr = lambda x, y: x if ord(x) > ord(y) else y
    return reduce(biggest_chr, string)"
3120,Write a Python function that calculate interior angle of a equilateral polygon,"def interior_angle(no_of_sides):
    return (no_of_sides - 2) * 180 / no_of_sides"
3121,Write a Python function that calculate side length of a equilateral polygon,"import math
def side_length(no_of_sides, circumradius):
    return 2 * circumradius * math.sin(math.pi / no_of_sides)"
3122,Write a Python function that calculate area of a equilateral polygon,"import math
def area(no_of_sides, circumradius):
    side_length = 2 * circumradius * math.sin(math.pi / no_of_sides)
    apothem = circumradius * math.cos(math.pi / no_of_sides)
    return no_of_sides / 2 * side_length * apothem"
3123,write a python function to print every alternate number in the user provided list,"def print_alternate_numbers(list1):
	print(list1[::2])"
3124,write a python function  to convert a list of string list to a string list,"def convert_to_string_list(list_of_string_list):
	res = [''.join(str(b) for b in eval(a)) for a in list_of_string_list] 
	return res"
3125,write a python program to clear a list,"given_list - = [6, 0, 4, 1] 
given_list.clear()"
3126,write a python program to sort and print a list,"given_list - = [6, 0, 4, 1] 
sorted_list = sorted(given_list)
print(f'sorted list is {sorted_list}')"
3127,write a python program to add every alternate elements in a list of even elements and print the final list,"given_list = [8, 6, 0, 4, 1, 6, 7, 8, 9, 10, 4, 5] 
if len(given_list) % 2 == 0:
	res_list = []
	for i in range(len(given_list)-2):
		res_list.append(given_list[i] + given_list[i + 2])
	print(f'Resultant list is {res_list}')"
3128,write a Python program to print all the prime numbers within an interval,"lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
3129,Write a Python Program to print the Factorial of a Number,"num = 7
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
3130,Write a Python Program to Check and print if a given year is a Leap Year,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(f""{year} is a leap year"")
       else:
           print(f""{year} is not a leap year"")
   else:
       print(f""{year} is a leap year"")
else:
   print(f""{year} is not a leap year"")"
3131,Write Python Program to print if a Number is Odd or Even,"num = 102
if (num % 2) == 0:
   print(f""{num} is Even"")
else:
   print(f""{num} is Odd"")"
3132,Write a python function to Compute LCM of two input number,"def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
3133,write a python Program to print the ASCII value of the given character,"c = 'p'
print(""The ASCII value of '"" + c + ""' is"", ord(c))"
3134,"write Python Program to print the Sum of 10 Natural Numbers
    use while loop to iterate until zero","num = 10
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
3135,write  a Python Program to Swap Two Variables and print them,"x = 5
y = 10
temp = x
x = y
y = temp
print('The value of x after swapping: {}'.format(x))
print('The value of y after swapping: {}'.format(y))"
3136,Write a Python Program to Convert Kilometers to Miles,"kilometers = 10000
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
3137,Write Python Program to Convert Celsius To Fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
3138,Write Python Program to print the Square Root of a number,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
3139,Write python function to count number of 1s in binary representation of an integer.,"def  countSetBits(n): 
    count = 0
    while (n): 
        count += n & 1
        n >>= 1
    return count"
3140,Write Python function to check if a string is palindrome or not,"def isPalindrome(s):
    return s == s[::-1]"
3141,Write a python program to reverse a string,"s = ""i like this program very much""
words = s.split(' ')
string =[]
for word in words:
    string.insert(0, word)
print(""Reversed String:"")
print("" "".join(string))"
3142,Write a python function to merge two Dictionaries,"def Merge(dict1, dict2):
    return(dict2.update(dict1))"
3143,Write a python program to print sum of number digits in List,"test_list = [12, 67, 98, 34] 
res = [] 
for ele in test_list: 
    sum = 0
    for digit in str(ele): 
        sum += int(digit) 
    res.append(sum) 
print (""List Integer Summation : "" + str(res))"
3144,Write a Python function to count number of lists in a list of lists,"def countList(lst): 
    count = 0
    for el in lst: 
        if type(el)== type([]): 
            count+= 1          
    return count"
3145,Write a Python program to print largest element in an array,"arr = [10, 324, 45, 90, 9808] 
print(f'the largest element in the array is {max(arr)}')"
3146,Write a Python function to interchange first and last elements in a list,"def swapList(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp 
    return newList"
3147,Write a Python function to multiply all values in the list,"def multiplyList(myList) :
    result = 1
    for x in myList:
         result = result * x 
    return result"
3148,Write a Python program to Multiply two list and print the resultant list,"test_list1 = [1, 3, 4, 6, 8] 
test_list2 = [4, 5, 6, 2, 10] 
res_list = [] 
for i in range(0, len(test_list1)): 
    res_list.append(test_list1[i] * test_list2[i])	
print (""Resultant list is : "" + str(res_list))"
3149,write a Python program to print positive numbers in a list,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num >= 0: 
       print(num, end = "" "")"
3150,Write a Python program to print negative numbers in a list,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
3151,Write a python program to Count occurrences of given element in a list,"def countX(lst, x): 
    return lst.count(x)"
3152,Write a python function to remove numeric digits from given string,"def removedigits(ini_string):
	res = ''.join([i for i in ini_string if not i.isdigit()]) 
    return res"
3153,Write a Python program to print the number words in a sentence,"test_string = ""India is my country""
res = len(test_string.split()) 
print (f""The number of words in string are : {res}"")"
3154,Write Python function to check if a string has at least one letter and one number,"def checkString(str): 
    flag_l = False
    flag_n = False
    for i in str: 
        if i.isalpha(): 
            flag_l = True
        if i.isdigit(): 
            flag_n = True
    return flag_l and flag_n"
3155,Write a python function to Check whether triangle is valid or not if three points are given,"def checkTriangle(x1, y1, x2, y2, x3, y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) 
    if a == 0: 
        return False 
    else: 
        return True"
3156,Write a python function to Check whether triangle is valid or not if sides are given,"def checkValidity(a, b, c):  
    if (a + b <= c) or (a + c <= b) or (b + c <= a) : 
        return False
    else: 
        return True"
3157,Write a Python Program to print words starting with Vowel From A list,"test_list = [""all"", ""love"", ""and"", ""get"", ""educated"", ""by"", ""gfg""] 
print(""The original list is : "" + str(test_list)) 
res = [] 
vow = ""aeiou""
for sub in test_list: 
    flag = False
    for ele in vow: 
        if sub.startswith(ele): 
            flag = True 
            break
    if flag: 
        res.append(sub)  
print(""The extracted words : "" + str(res))"
3158,Write a python function to extract odd length words in String,"def findoddlenthwords(test_str):
	res = [] 
	for ele in test_str.split(): 
		if len(ele) % 2 : 
			res.append(ele) 
	return res"
3159,Write a python function to extract even length words in String,"def findevenlenthwords(test_str):
	res = [] 
	for ele in test_str.split(): 
		if len(ele) % 2 == 0: 
			res.append(ele)  
	return res"
3160,Write a python program to print Words lengths in String,"test_string = ""India is my country""
res = list(map(len, test_string.split())) 
print (""The list of words lengths is : "" + str(res))"
3161,Write a python program to check if a number is positive or negative,"num = 15
if num > 0:
   print(f""Positive number"")
elif num == 0:
   print(f""Zero"")
else:
   print(f""Negative number"")"
3162,write a Python Program to Display the multiplication Table of given number,"num = 12
for i in range(1, 11):
   print(num, 'x', i, '=', num*i)"
3163,write a Python function to Convert Decimal to Binary,"def convertToBinary(n):
   if n > 1:
       convertToBinary(n//2)
   print(n % 2,end = '')"
3164,write a Python Program to Count and print the Number of Each Vowel in the input string,"vowels = 'aeiou'
ip_str = 'India is my country'
ip_str = ip_str.casefold()
count = {}.fromkeys(vowels,0)
for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
3165,write a Python Program to Check Whether a String is Palindrome or Not,"my_str = 'aIbohPhoBiA'
my_str = my_str.casefold()
rev_str = reversed(my_str)
if list(my_str) == list(rev_str):
   print(""The string is a palindrome."")
else:
   print(""The string is not a palindrome."")"
3166,Write Python Program to Remove Punctuations From a String and print the cleaned string.,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
3167,Write a Python program to print unique triplets whose three elements gives the sum of zero from an array of n integers.,"num = [1, -6, 4, 2, -1, 2, 0, -2, 0 ]
len_list = len(num)
trips = []
for i in range(len_list):
    if i+3 > len_list:
        break
    triplets = num[i:i+3]
    if len(set(triplets))==3:
        if sum(triplets) == 0:
            trips.append(triplets)
print(trips)"
3168,Write a Python program to remove and print every third number from a list of numbers until the list becomes empty.,"num = [10,20,30,40,50,60,70,80,90]
len_list = len(num)
position = 3 - 1
idx = 0
while len_list > 0:
    idx = (idx+position) % len_list
    print(num.pop(idx))
    len_list-=1"
3169,Write a Python function to compute simple interest,"def simple_interest(p,t,r): 
    si = (p * t * r)/100
    return si"
3170,Write a Python function to compute compound interest,"def compound_interest(principle, rate, time):  
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    return CI"
3171,Write a Python function for Program to find area of a circle,"def findArea(r): 
    PI = 3.142
    return PI * (r*r)"
3172,Write a python function to find Area Of Rectangle,"def areaRectangle(a, b): 
    return (a * b)"
3173,Write a python function to find perimeter Of Rectangle,"def perimeterRectangle(a, b): 
    return (2 * (a + b))"
3174,write a python function to convert string in to binary,"def convertstringtobinary(text):
	for chr in text:
		bin = ''
		asciiVal = int(ord(chr))
		while asciiVal > 0:
			if asciiVal % 2 == 0:
				bin = bin + '0'
			else:
				bin = bin + '1'
			asciiVal = int(asciiVal/2)
		return(bin + "" : "" + bin[::-1])"
3175,Write a python program to print the Sum of digits of a number,"n = 12345
q = 0
while(n>0):
 r=n%10
 q=q+r
 n=n//10
print(""Sum of digits is: ""+str(q))"
3176,Write a python program to sort alphabetically the words form a string provided by the user,"def sortwords(my_str):
	words = my_str.split()
	words.sort()
	return ' '.join(words)"
3177,"Write a python function to replace all the spaces in an entered string with a hyphen ""-""","def replacetext(string):
    string = string.replace("" "", ""-"")
    return string"
3178,write a python program to rotate a list 10 times and print it,"list = [11,22,33,44,55,66,77,88,99]
n = 10
finalList = []
for i in range(0, N):
    finalList.append(list[(i+d)%N])
print(finalList)"
3179,write a Python Program to Add two binary numbers and print the sum,"num1 = '00001'
num2 = '10001'
sum = bin(int(num1,2) + int(num2,2))
print(sum)"
3180,write a Python Program to Calculate and print the Average of Numbers in a Given List,"a= [11,22,33,44,55,66,77,88,99]
avg=sum(a)/len(a)
print(""Average of elements in the list"",round(avg,2))"
3181,write a Python Program to check if a number is a Perfect number and print the result,"n = 7
sum1 = 0
for i in range(1, n):
    if(n % i == 0):
        sum1 = sum1 + i
if (sum1 == n):
    print(""The number is a Perfect number!"")
else:
    print(""The number is not a Perfect number!"")"
3182,write a Python function to convert binary to Gray codeword,"def binary_to_gray(n):
    n = int(n, 2)
    n ^= (n >> 1)
    return bin(n)[2:]"
3183,write a Python function to convert Gray code to binary,"def gray_to_binary(n):
    n = int(n, 2) # convert to int
    mask = n
    while mask != 0:
        mask >>= 1
        n ^= mask
    return bin(n)[2:]"
3184,write a Python Program to Replace all Occurrences of ‘a’ with $ in a String,"def replacestring(txt):
	return txt.replace('A','$')"
3185,write a python program to Print Quotient and Remainder of two numbers,"a = 15
b = 4
quotient=a//b
remainder=a%b
print(""Quotient is:"",quotient)
print(""Remainder is:"",remainder)"
3186,write a python program to print the Area of a Triangle Given All Three Sides,"a = 15
b = 9
c = 7
s=(a+b+c)/2
area=(s*(s-a)*(s-b)*(s-c)) ** 0.5
print(""Area of the triangle is: "",round(area,2))"
3187,write a Python function to Determine all Pythagorean Triplets in the Range,"def findpythagoreantriplets(limit):
	c=0
	m=2
	while(c<limit):
		for n in range(1,m+1):
			a=m*m-n*n
			b=2*m*n
			c=m*m+n*n
			if(c>limit):
				break
			if(a==0 or b==0 or c==0):
				break
			print(a,b,c)
		m=m+1"
3188,write a Python Program to print all the Divisors of an Integer,"n = 20
print(""The divisors of the number are:"")
for i in range(1,n+1):
    if(n%i==0):
        print(i)"
3189,Write a python program to print dimension in centimeter to inches,"cm = 50
inches=0.394*cm
print(""The dimension in inches "",round(inches,2))"
3190,Write a python program to print dimension in centimeter to feet,"cm = 50
feet=0.0328*cm
print(""The dimension in feet "",round(feet,2))"
3191,write Python Program to print the Union of two Lists,"l1 = [11,22,33,44]
l2 = [55,66,77,88]
union = list(set().union(l1,l2)) 
print('The Union of two lists is:',union)"
3192,write a python function to Check if a Substring is Present in a Given String,"def checksubstring(string,sub_string):
	if(string.find(sub_str)==-1):
      return False
	else:
		return True"
3193,Write a Python Program to Multiply All the Items in a Dictionary and print the result,"d={'A':10,'B':10,'C':239}
tot=1
for i in d:    
    tot=tot*d[i]
print(tot)"
3194,Write Python Program to print Common Letters in Two Input Strings,"s1=""Trump was the American President""
s2=""Who is the American President now?""
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
3195,Write a Python function to Find Whether a Number is a Power of Two,"def is_power_of_two(n):
    if n <= 0:
        return False
    else:
        return n & (n - 1) == 0"
3196,Write a Python Program to Search the Number of Times a Particular Number Occurs in a List,"a = [2,3,2,3,4,4,5,5,6,6,6]
k=0
num=6
for j in a:
    if(j==num):
        k=k+1
print(""Number of times"",num,""appears is"",k)"
3197,write Python function to Clear the Rightmost Set Bit of a Number,"def clear_rightmost_set_bit(n):
    return n & (n - 1)"
3198,write a Python function to Find HCF of two numbers,"def hcf(x, y):  
   if x > y:  
       smaller = y  
   else:  
       smaller = x  
   for i in range(1,smaller + 1):  
       if((x % i == 0) and (y % i == 0)):  
           hcf = i  
   return hcf"
3199,Write a Python Program to Add Two Matrices and print result.,"X = [[1,2,3],  
    [4,5,6],  
    [7,8,9]]  
Y = [[10,11,12],  
    [13,14,15],  
    [16,17,18]]  
result = [[0,0,0],  
               [0,0,0],  
              [0,0,0]] 
for i in range(len(X)):  
   for j in range(len(X[0])):  
       result[i][j] = X[i][j] + Y[i][j]  
for r in result:  
   print(r)"
3200,write Python Program to Multiply Two Matrices and print result.,"X = [[1,2,3],  
       [4,5,6],  
       [7,8,9]]  
Y = [[10,11,12],  
      [13,14,15],  
      [16,17,18]]  
result = [[0,0,0],  
               [0,0,0],  
              [0,0,0]]   
for i in range(len(X)):  
   for j in range(len(Y[0])):  
       for k in range(len(Y)):  
           result[i][j] += X[i][k] * Y[k][j]  
for r in result:  
   print(r)"
3201,Write a Python Program to Transpose a Matrix  and print result.,"X = [[1,2],  
      [4,5],  
     [7,8]]  
Result = [[0,0,0],  
             [0,0,0]]  
for i in range(len(X)):  
   for j in range(len(X[0])):  
       result[j][i] = X[i][j]  
for r in result:  
   print(r)"
3202,Write a Python function to Find the Intersection of Two Lists,"def intersection(a, b):
    return list(set(a) & set(b))"
3203,write a Python function to Sort a List According to the Length of the Elements.,"def sortlistwithlen(list):
	list.sort(key=len)
	return list"
3204,Write a Python Program to Print an Identity Matrix,"n = 3
for i in range(0,n):
    for j in range(0,n):
        if(i==j):
            print(""1"",sep="" "",end="" "")
        else:
            print(""0"",sep="" "",end="" "")"
3205,Write a Python Program to print Those Numbers which are Divisible by 7 and Multiple of 5 in a Given Range of Numbers,"lower = 1
upper = 100
for i in range (lower,upper+1):
    if(i%7==0 and i%5==0):
        print(i)"
3206,write Python function to find the Length of the Longest One element in the list,"def findlongest(list):
	max1=len(list[0])
	temp=list[0]
	for i in list:
		if(len(i)>max1):
		   max1=len(i)
		   temp=i
	return temp"
3207,write a Python function to Detect if Two Strings are Anagrams,"def check_if_anagram(s1,s2):
	if(sorted(s1)==sorted(s2)):
		  return True
	else:
		  return False"
3208,Write Python Program to print the Length of a String Without Using a Library Function,"string= ""United States of America""
count=0
for i in string:
      count=count+1
print(""Length of the string is:"")
print(count)"
3209,Write Python Program to Find the Area of a Rectangle Using Classes,"class rectangle():
    def __init__(self,breadth,length):
        self.breadth=breadth
        self.length=length
    def area(self):
        return self.breadth*self.length
a=15
b=10
obj=rectangle(a,b)
print(""Area of rectangle:"",obj.area())"
3210,Write a Python Program to Find the Second Largest Number in a List,"a= [11,22,33,44,55,66,77,88,99]
a.sort()
print(""Second largest element is:"",a[n-2])"
3211,Write a Python Program to Count Number of Lowercase Characters in a String and print the result,"string=""SriNAtH""
count=0
for i in string:
      if(i.islower()):
            count=count+1
print(""The number of lowercase characters is:"")
print(count)"
3212,write a Python Program to Sum All the Items in a Dictionary and print the result,"d={'A':100,'B':540,'C':239}
print(""Total sum of values in the dictionary:"")
print(sum(d.values()))"
3213,write Python function to Count the Frequency of Words Appearing in a String Using a Dictionary,"def countword(test_string):
	l=[]
	l=test_string.split()
	wordfreq=[l.count(p) for p in l]
	return(dict(zip(l,wordfreq)))"
3214,write Python Program to Read the Contents of a File,"a=str(input(""Enter the name of the file with .txt extension:""))
file2=open(a,'r')
line=file2.readline()
while(line!=""""):
    print(line)
    line=file2.readline()
file2.close()"
3215,write Python Program to Count the Number of Lines in a Text File,"fname = input(""Enter file name: "")
num_lines = 0
with open(fname, 'r') as f:
    for line in f:
        num_lines += 1
print(""Number of lines:"")
print(num_lines)"
3216,write Python Program to Count the Number of Words in a Text File,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
3217,write a Python Program to Read a File and Capitalize the First Letter of Every Word in the File,"fname = input(""Enter file name: "")
with open(fname, 'r') as f:
    for line in f:
        l=line.title()
        print(l)"
3218,write Python Program to Read the Contents of a File in Reverse Order,"filename=input(""Enter file name: "")
for line in reversed(list(open(filename))):
    print(line.rstrip())"
3219,write a Python function to Remove the Given Key from a Dictionary,"def deletekey(dict,key)
	if key in dict: 
		del dict[key]
	return dict"
3220,Write a python function to remove an item from list,"def deleteelement(list, item):
	list.remove(item)
	return list"
3221,write a python function to Check if a given string is binary string or not,"def check(string) :  
    s = {'0', '1'} 
    if s == p or p == {'0'} or p == {'1'}: 
        return True 
    else : 
        return False"
3222,write a python function to compute minimum number of rotations required to get the same string,"def findRotations(str): 
    tmp = str + str
    n = len(str)   
    for i in range(1, n + 1): 
        substring = tmp[i: i+n] 
        if (str == substring): 
            return i 
    return n"
3223,write a Python function to check if count of divisors is even or odd,"def NumOfDivisor(n): 
    if n < 1: 
        return
    root_n = n**0.5
    if root_n**2 == n: 
        print(""Odd"") 
    else: 
        print(""Even"")"
3224,Write a program to merge two python dictionaries and print merged dictionary,"d1 = {'a': 100, 'b': 200}
d2 = {'x': 300, 'y': 200}
d = d1.copy()
d.update(d2)
print(d)"
3225,write a python function to concatenate two integers like string concatenation and return concatenated number as integer,"def concat_two_numbers(num1, num2):
    combined_num = str(num1) + str(num2)
    return int(combined_num)"
3226,"With a given integral number n, write a program to generate a dictionary that contains (i, i*i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n = 8
d = dict()
for i in range(1,n+1):
    d[i] = i*i*i
print(d)"
3227,Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values=input()
l=values.split("","")
t=tuple(l)
print(l)
print(t)"
3228,Write a Python function that takes a sequence of numbers and determines whether all the numbers are different from each other,"def test_distinct(data):
  if len(data) == len(set(data)):
    return True
  else:
    return False"
3229,"Write a Python function to find the number of notes (Sample of notes: 10, 20, 50, 100, 200 and 500 ) against a given amount.","def no_notes(a):
  Q = [500, 200, 100, 50, 20, 10, 5, 2, 1]
  x = 0
  for i in range(9):
    q = Q[i]
    x += int(a / q)
    a = int(a % q)
  if a > 0:
    x = -1
  return x"
3230,Write a Python function to find the number of zeros at the end of a factorial of a given positive number.,"def factendzero(n):
  x = n // 5
  y = x 
  while x > 0:
    x /= 5
    y += int(x)
  return y"
3231,Write a Python function to remove leading zeros from an IP address,"import re
regex = '\.[0]*'
def remove_leading_zeros(ip):
    modified_ip = re.sub(regex, '.', ip)
    return modified_ip"
3232,Write a Python function to return binary value of a given integer,"def int_to_bin(a):
  return bin(a)"
3233,Write a Python function to return octal value of a given integer,"def int_to_oct(a):
  return oct(a)"
3234,Write a Python function to return hexadecimal value of a given integer,"def int_to_hex(a):
  return hex(a)"
3235,Write a Python program to typecast given input to integer,"num = int(input(""Input a value: ""))
print(num)"
3236,Write a Python program to typecast given input to float,"num = float(input(""Input a value: ""))
print(num)"
3237,Write a Python program to check/test multiple variables against a value,"a = 10
b = 20
c = 30
if 10 in {a, b, c}:
  print(""True"")
else:
  print(""False"")"
3238,"Write a Python class that will initiate a number, input a number and print the number","class Number:
	def __init__(self, num):
		self.num = num
	def inputNum(self):
		self.num = int(input(""Enter an integer number: ""))
	def printNum(self):
		print(self.num)"
3239,"Write a Python function to find the simple interest in Python when principle amount, rate of interest and time is given","def simple_interest(p,r,t):
    si = (p*r*t)/100
    return si"
3240,"Write a Python function to find the compound interest in Python when principle amount, rate of interest and time is given","def compound_interest(p,r,t):
    ci = p * (pow((1 + r / 100), t)) 
    return ci"
3241,Write a Python function to check whether a person is eligible for voting or not based on their age,"def vote_eligibility(age):
	if age>=18:
	    status=""Eligible""
	else:
	    status=""Not Eligible""
	return status"
3242,Write a Python function to find the BMI for given weight and height of a person,"def bmi_calculator(height, weight):
	bmi = weight/(height**2)
	return bmi"
3243,Write a Python function to check whether a given number is perfect number or not,"def perfect_number_checker(num):
    i = 2
    sum = 1
    while(i <= num//2 ) :
        if (num % i == 0) :
            sum += i
        i += 1
    if sum == num :
        return f'{num} is a perfect number'
    else :
        return f'{num} is not a perfect number'"
3244,Write a Python function to find the maximum ODD number from a given list,"def odd_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 != 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
3245,Write a Python function to find the maximum EVEN number from a given list,"def even_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 == 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
3246,Write a Python function to print the root of the quadratic equation,"def quadratic_root(A,B,C):
	import math
	d=((B**2)-4*A*C)
	if d>=0:
	    s=(-B+(d)**0.5)/(2*A)
	    p=(-B-(d)**0.5)/(2*A)
	    print(math.floor(s),math.floor(p))
	else:
	    print('The roots are imaginary')"
3247,Write a Python program to print the calendar of any given year,"import calendar
year=2020
print(calendar.calendar(year))"
3248,Write a Python function to print whether the given Date is valid or not,"def date_validator(d,m,y):
	import datetime 
	try:
		s=datetime.date(y,m,d)
		print(""Date is valid."")
	except ValueError: 
		print(""Date is invalid."")"
3249,Write a Python function to find the N-th number which is both square and cube,"def nth_sq_and_cube(N):
	R = N**6
	return R"
3250,Write a Python function to check whether a number is a power of another number or not,"def power_checker(a,b):
	import math
	s=math.log(a,b)
	p=round(s)
	if (b**p)==a:
	    return f'{a} is the power of {b}.'
	else:
	    return f'{a} is NOT the power of {b}.'"
3251,Write a Python function to,"def binary_palindrome(n):
	s=int(bin(n)[2:])
	r=str(s)[::-1]
	if int(r)==s:
	    return ""The binary representation of the number is a palindrome.""
	else:
	    return ""The binary representation of the number is NOT a palindrome."""
3252,Write a Python program to print the list of all keywords,"import keyword
print(""Python keywords are..."")
print(keyword.kwlist)"
3253,Write a Python function to find the intersection of two arrays,"def array_intersection(A,B):
	inter=list(set(A)&set(B))
	return inter"
3254,Write a Python function to find the union of two arrays,"def array_union(A,B):
	union=list(set(A)|set(B))
	return union"
3255,Write a Python program to print shape of an array/ matrix,"import numpy as np
A = np.array([[1,2,3],[2,3,5],[3,6,8],[323,623,823]])
print(""Shape of the matrix A: "", A.shape)"
3256,Write a Python program to print rank of an array/ matrix,"import numpy as np
A = np.array([[4,5,8], [7,1,4], [5,5,5], [2,3,6]])
print(""Rank of the matrix A: "", np.linalg.matrix_rank(A))"
3257,Write a Python program to print trace of an array/ matrix,"import numpy as np
A = np.array([[4,5,8], [5,5,5], [2,3,6]])
print(""Trace of the matrix A: "", np.trace(A))"
3258,Write a Python program to print euclidean distance between two array/ vectors,"import numpy as np
a = np.array([78, 84, 87, 91, 76])
b = np.array([92, 83, 91, 79, 89])
dist = np.linalg.norm(a-b)
print('Differnce in performance between A and B : ', dist)"
3259,Write a Python function to print number with commas as thousands separators,"def formattedNumber(n):
  return (""{:,}"".format(n))"
3260,Write a Python program to find the total number of uppercase and lowercase letters in a given string,"str1='TestStringInCamelCase'
no_of_ucase, no_of_lcase = 0,0
for c in str1:
    if c>='A' and c<='Z':
        no_of_ucase += 1
    if c>='a' and c<='z':
        no_of_lcase += 1
print(no_of_lcase)
print(no_of_ucase)"
3261,Write a Python program to find the total number of letters and digits in a given string,"str1='TestStringwith123456789'
no_of_letters, no_of_digits = 0,0
for c in str1:
  no_of_letters += c.isalpha()
  no_of_digits += c.isnumeric()
print(no_of_letters)
print(no_of_digits)"
3262,Write a Python function to count occurrence of a word in the given text,"def text_searcher(text, word):
    count = 0
    for w in text.split():
        if w == word:
            count = count + 1
    return count"
3263,Write a Python function to capitalizes the first letter of each word in a string,"def capitalize(text):
  return text.title()"
3264,Write a Python function to remove falsy values from a list,"def newlist(lst):
  return list(filter(None, lst))"
3265,Write a Python function to to find the sum of all digits of a given integer,"def sum_of_digits(num):
  if num == 0:
    return 0
  else:
    return num % 10 + sum_of_digits(int(num / 10))"
3266,Write a Python function to check all elements of a list are the same or not,"def check_equal(a):
  return a[1:] == a[:-1]"
3267,Write a Python program to print Square root of matrix elements,"mat1 = np.array([[10,20,30],[40,50,60],[70,80,90]])
print(np.sqrt(mat1))"
3268,Write a Python function that returns the integer obtained by reversing the digits of the given integer,"def reverse(n):
    s=str(n) 
    p=s[::-1]
    return p"
3269,Write a Python program to convert the index of a series into a column of a dataframe,"import pandas as pd
import numpy as np
mylist = list('abcedfghijklmnopqrstuvwxyz')
myarr = np.arange(26)
mydict = dict(zip(mylist, myarr))
ser = pd.Series(mydict)
df = ser.to_frame().reset_index()
print(df.head())"
3270,Write a Python program to keep only top 2 most frequent values as it is and replace everything else as ‘Other’ in a series,"import pandas as pd
import numpy as np
np.random.RandomState(100)
ser = pd.Series(np.random.randint(1, 5, [12]))
ser[~ser.isin(ser.value_counts().index[:2])] = 'Other'
print(ser)"
3271,Write a Python program to  bin a numeric series to 10 groups of equal size,"import pandas as pd
import numpy as np
ser = pd.Series(np.random.random(20))
deciled = pd.qcut(ser, q=[0, .10, .20, .3, .4, .5, .6, .7, .8, .9, 1], 
        labels=['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th'])
print(deciled)"
3272,Write a Python program to create a TimeSeries starting ‘2000-01-01’ and 10 weekends (saturdays) after that having random numbers as values,"import pandas as pd
import numpy as np
ser = pd.Series(np.random.randint(1,10,10), pd.date_range('2000-01-01', periods=10, freq='W-SAT'))
print(ser)"
3273,Write a Python program to fill an intermittent time series so all missing dates show up with values of previous non-missing date,"import pandas as pd
import numpy as np
ser = pd.Series([1,10,3, np.nan], index=pd.to_datetime(['2000-01-01', '2000-01-03', '2000-01-06', '2000-01-08']))
print(ser.resample('D').ffill())"
3274,Write a Python program to fill an intermittent time series so all missing dates show up with values of next non-missing date,"import pandas as pd
import numpy as np
ser = pd.Series([1,10,3, np.nan], index=pd.to_datetime(['2000-01-01', '2000-01-03', '2000-01-06', '2000-01-08']))
print(ser.resample('D').bfill())"
3275,Write a Python program to create one-hot encodings of a categorical variable,"import pandas as pd
import numpy as np
df = pd.DataFrame(np.arange(25).reshape(5,-1), columns=list('abcde'))
df_onehot = pd.concat([pd.get_dummies(df['a']), df[list('bcde')]], axis=1)
print(df_onehot)"
3276,Write a Python program to compute the autocorrelations for first 10 lags of a numeric series,"import pandas as pd
import numpy as np
ser = pd.Series(np.arange(20) + np.random.normal(1, 10, 20))
autocorrelations = [ser.autocorr(i).round(2) for i in range(11)]
print(autocorrelations[1:])"
3277,Write a Python program to find the positions of numbers that are multiples of 3 from a series,"import pandas as pd
import numpy as np
ser = pd.Series(np.random.randint(1, 10, 7))
print(np.argwhere(ser.values % 3 == 0))"
3278,"Write a Python function that Given a string, display only those characters which are present at an even index number","def printEveIndexChar(str):
  for i in range(0, len(str)-1, 2):
    print(""index["",i,""]"", str[i] )"
3279,"Write a Python function that Given a string and an integer number n, remove characters from a string starting from zero up to n and return a new string","def removeChars(str, n):
  return str[n:]"
3280,"Write a Python function that Given a list of numbers, return True if first and last number of a list is same","def isFirst_And_Last_Same(numberList):
    firstElement = numberList[0]
    lastElement = numberList[-1]
    if (firstElement == lastElement):
        return True
    else:
        return False"
3281,"Write a Python function that Given a list of numbers, Iterate it and print only those numbers which are divisible of 5","def findDivisible(numberList):
    for num in numberList:
        if (num % 5 == 0):
            print(num)"
3282,Write a Python function that Given a two list of numbers create a new list such that new list should contain only odd numbers from the first list and even numbers from the second list,"def mergeList(list1, list2):
    thirdList = []
    for num in list1:
        if (num % 2 != 0):
            thirdList.append(num)
    for num in list2:
        if (num % 2 == 0):
            thirdList.append(num)
    return thirdList"
3283,"Write a Python program to return a set of all elements in either A or B, but not both","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
3284,Write a Python program to Subtract a week ( 7 days) from a given date in Python,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
3285,Write a Python program to Find the day of week of a given date,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
3286,Write a Python program to Convert following datetime instance into string format,"from datetime import datetime
given_date = datetime(2020, 2, 25)
string_date = given_date.strftime(""%Y-%m-%d %H:%M:%S"")
print(string_date)"
3287,Write a Python program to convert two equal length sets to dictionary,"keys = {'Ten', 'Twenty', 'Thirty'}
values = {10, 20, 30}
sampleDict = dict(zip(keys, values))
print(sampleDict)"
3288,Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5 between 2000 and 3200 (both included).,"l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))"
3289,Write a program that will determine the object type,"def typeIdentifier(object):
  return f'object type : {type(object)}'"
3290,Write a Python class which has at least two methods: getString: to get a string from console input printString: to print the string in upper case.,"class IOString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = input()
    def printString(self):
        print(self.s.upper())
strObj = IOString()
strObj.getString()
strObj.printString()"
3291,Write a program that will determine the memory usage by python process,"import os, psutil
print(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)"
3292,Write a function that will provide the ascii value of a character,"def charToASCII(chr):
  return f'ASCII value of {chr} is: {ord(chr)}'"
3293,Write a function to reverse a string,"def revStr(inp):
  inp = inp[::-1]
  return inp"
3294,Write a function to determine the bits used by any number,"def totalBits(n):
	return f'total number of bits used in {n} is : {len(bin(n)[2: ])}'"
3295,write a function to find the sum of Sine series,"import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine"
3296,Write a function to determine whether a given number is even or odd recursively,"def check(n):
    if (n < 2):
        return (n % 2 == 0)
    return (check(n - 2))
n=int(input(""Enter number:""))
if(check(n)==True):
      print(""Number is even!"")
else:
      print(""Number is odd!"")"
3297,Write a program to swap two variables inplace,"a,b = b,a"
3298,Write a program that prints the words in a comma-separated sequence after sorting them alphabetically.,"items=[x for x in input().split(',')]
items.sort()
print(','.join(items))"
3299,Write a function that takes a base and a power and finds the power of the base using recursion.,"def power(base,exp):
    if(exp==1):
        return(base)
    if(exp!=1):
        return(base*power(base,exp-1))
base=int(input(""Enter base: ""))
exp=int(input(""Enter exponential value: ""))
print(""Result:"",power(base,exp))"
3300,Write a function to repeat M characters of a string N times,"def multTimes(str, m, n):
    front_len = m
    if front_len > len(str):
        front_len = len(str)
    front = str[:front_len]
    result = ''
    for i in range(n):
        result = result + front
    return result
print (multTimes('Hello', 3, 7))"
3301,Write a function that will convert a string into camelCase,"from re import sub
def camelCase(string):
  string = sub(r""(_|-)+"", "" "", string).title().replace("" "", """")
  return string[0].lower() + string[1:]"
3302,Write a function to remove empty list from a list using list comprehension,"def removeEmptyList(li):
  res = [ele for ele in li if ele != []] 
  return res"
3303,Write a function to Find the size of a Tuple in Python without garbage values,"Tuple = (10,20)
def sizeOfTuple(tup):
  return f'Size of Tuple: {str(Tuple.__sizeof__())} bytes'"
3304,"Write a function, which will find all such numbers between 1000 to 9999 that each digit of the number is an even number.","values = []
for i in range(1000, 9999):
  s = str(i)
  if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
      values.append(s)"
3305,Write a function that finds a list is homogeneous,"def homoList(li):
  res = True
  for i in li: 
      if not isinstance(i, type(li[0])): 
          res = False 
          break
  return res"
3306,Write a function to remove a given date type elements from a list.,"def removeDataType(li,dType):
    res = []
    for i in li:
        if not isinstance(i, dType):
            res.append(i)
    return res"
3307,"Write a python function to find out the occurence of ""i"" element before first ""j"" in the list","def firstOccurence(arr, i,j):
  res = 0
  for k in arr:         
      if k == j: 
          break
      if k == i: 
          res += 1
  return res"
3308,Write a program to check whether a file/path/direcory exists or not,"file_path = ""path/here""
import os.path
os.path.exists(file_path)"
3309,Write a program to merge two python dictionaries,"x={'key1':'val1','key2':'val2'}
y={'key3':'val3','key4':'val4'}
z = {**x, **y} # z = x | y"
3310,Write a program to convert dictionary into JSON,"import json
data = {""key1"" : ""value1"", ""key2"" : ""value2""}
jsonData = json.dumps(data)
print(jsonData)"
3311,Write a program to find common divisors between two numbers in a given pair,"def ngcd(x, y):
    i=1
    while(i<=x and i<=y):
        if(x%i==0 and y%i == 0):
            gcd=i
        i+=1
    return gcd
def num_comm_div(x, y):
  n = ngcd(x, y)
  result = 0
  z = int(n**0.5)
  i = 1
  while( i <= z ):
    if(n % i == 0):
      result += 2 
      if(i == n/i):
        result-=1
    i+=1
  return result"
3312,Write a function to Check whether following json is valid or invalid,"import json
def validateJSON(jsonData):
    try:
        json.loads(jsonData)
    except ValueError as err:
        return False
    return True"
3313,Write a function to remove and print every third number from a list of numbers until the list becomes empty,"def remove_nums(int_list):
  position = 3 - 1 
  idx = 0
  len_list = (len(int_list))
  while len_list>0:
    idx = (position+idx)%len_list
    print(int_list.pop(idx))
    len_list -= 1"
3314,Write a program to get a list of locally installed Python modules,"import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted([""%s==%s"" % (i.key, i.version)
     for i in installed_packages])
for m in installed_packages_list:
    print(m)"
3315,Write a function to create all possible permutations from a given collection of distinct numbers,"def permute(nums):
  result_perms = [[]]
  for n in nums:
    new_perms = []
    for perm in result_perms:
      for i in range(len(perm)+1):
        new_perms.append(perm[:i] + [n] + perm[i:])
        result_perms = new_perms
  return result_perms"
3316,Write a function to add two positive integers without using the '+' operator,"def add_without_plus_operator(a, b):
    while b != 0:
        data = a & b
        a = a ^ b
        b = data << 1
    return a"
3317,Write a program to find the median among three given number,"x=10
y=20
z=30
if y < x and x < z:
    print(x)
elif z < x and x < y:
    print(x)
elif z < y and y < x:
    print(y)
elif x < y and y < z:
    print(y)
elif y < z and z < x:
    print(z)    
elif x < z and z < y:
    print(z)"
3318,Write a function to count the number of carry operations for each of a set of addition problems,"def carry_number(x, y):
  ctr = 0
  if(x == 0 and y == 0):
    return 0
  z = 0  
  for i in reversed(range(10)):
      z = x%10 + y%10 + z
      if z > 9:
        z = 1
      else:
        z = 0
      ctr += z
      x //= 10
      y //= 10
  if ctr == 0:
    return ""No carry operation.""
  elif ctr == 1:
    return ctr
  else:
    return ctr"
3319,Write a program to compute the number of digits in multiplication of two given integers,"a,b = 312, 410
print(len(str(a*b)))"
3320,Write a function to return the area of a rhombus,"def area(d1, a): 
    d2 = (4*(a**2) - d1**2)**0.5
    area = 0.5 * d1 * d2 
    return(area)"
3321,"Write a function that Given a number, find the most significant bit number which is set bit and which is in power of two","def setBitNumber(n): 
    if (n == 0): 
        return 0
    msb = 0 
    n = int(n / 2) 
    while (n > 0): 
        n = int(n / 2) 
        msb += 1
    return (1 << msb)"
3322,Write a function to calculate volume of Triangular Pyramid,"def volumeTriangular(a, b, h): 
    return (0.1666) * a * b * h"
3323,Write a function to calculate volume of Square Pyramid,"def volumeSquare(b, h): 
    return (0.33) * b * b * h"
3324,Write a function to calculate Volume of Pentagonal Pyramid,"def volumePentagonal(a, b, h): 
    return (0.83) * a * b * h"
3325,Write a function to calculate Volume of Hexagonal Pyramid,"def volumeHexagonal(a, b, h): 
    return a * b * h"
3326,Write a Python program to check a list is empty or not,"l = []
if not l:
print(""List is empty"")"
3327,Write a Python program to remove duplicates from a list.,"a = [10,20,30,20,10,50,60,40,80,50,40]
dup_items = set()
uniq_items = []
for x in a:
if x not in dup_items:
uniq_items.append(x)
dup_items.add(x)
print(dup_items)"
3328,Write a Python function that takes two lists and returns True if they have at least one common member,"def common_data(list1, list2):
result = False
for x in list1:
for y in list2:
if x == y:
result = True
return result
print(common_data([1,2,3,4,5], [5,6,7,8,9]))"
3329,Write a Python program to get the difference between the two lists,"list1 = [1, 2, 3, 4]
list2 = [1, 2]
print(list(set(list1) - set(list2)))"
3330,Write a Python program to find the second smallest number in a list,"def second_smallest(numbers):
a1, a2 = float('inf'), float('inf')
for x in numbers:
if x <= a1:
a1, a2 = x, a1
elif x < a2:
a2 = x
return a2
print(second_smallest([1, 2, -8, -2, 0]))"
3331,Write a Python program to find the second largest number in a list.,"def second_largest(numbers):
count = 0
n1 = n2 = float('-inf')
for x in numbers:
count += 1
if x > n2:
if x >= n1:
n1, n2 = x, n1
else:
n2 = x
return n2 if count >= 2 else None
print(second_largest([1, 2, -8, -2, 0]))"
3332,Write a Python program to get the frequency of the elements in a list,"import collections
my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]
print(""Original List : "",my_list)
ctr = collections.Counter(my_list)
print(""Frequency of the elements in the List : "",ctr)"
3333,Write a Python program to convert a list of multiple integers into a single integer,"L = [11, 33, 50]
x = int("""".join(map(str, L)))
print(""Single Integer: "",x)"
3334,Write a Python program to check if all dictionaries in a list are empty or not.,"my_list = [{},{},{}]
my_list1 = [{1,2},{},{}]
print(all(not d for d in my_list))
print(all(not d for d in my_list1))"
3335,Write a Python program to count the number of characters (character frequency) in a string,"def char_frequency(str1):
dict = {}
for n in str1:
keys = dict.keys()
if n in keys:
dict[n] += 1
else:
dict[n] = 1
return dict
print(char_frequency('google.com'))"
3336,Write a python program to replace the first character occurence in the later part of the string,"def change_char(str1):
char = str1[0]
length = len(str1)
str1 = str1.replace(char, '$')
str1 = char + str1[1:]
return str1
print(change_char('restart'))"
3337,Write a Python function that takes a list of words and returns the longest one,"def find_longest_word(words_list):
word_len = []
for n in words_list:
word_len.append((len(n), n))
word_len.sort()
return word_len[-1][1]
print(find_longest_word([""PHP"", ""python"", ""zekelabs""]))"
3338,Write a Python program to count the occurrences of each word in a given sentence,"def find_longest_word(words_list):
word_len = []
for n in words_list:
word_len.append((len(n), n))
word_len.sort()
return word_len[-1][1]
print(find_longest_word([""PHP"", ""python"", ""zekelabs""]))"
3339,Write a Python function to convert a given string to all uppercase if it contains at least 2 uppercase characters in the first 4 characters.,"def to_uppercase(str1):
num_upper = 0
for letter in str1[:4]:
if letter.upper() == letter:
num_upper += 1
if num_upper >= 2:
return str1.upper()
return str1
print(to_uppercase('PyThon'))"
3340,Write a Python program to count and display the vowels of a given text,"def vowel(text):
vowels = ""aeiuoAEIOU""
print(len([letter for letter in text if letter in vowels]))
print([letter for letter in text if letter in vowels])
vowel('zekelabs')"
3341,"Write a Python script to generate and print a dictionary that contains a number (between 1 and n) in the form (x, x*x)","n=int(input(""Input a number: ""))
d = dict()
for x in range(1,n+1):
d[x]=x*x
print(d)"
3342,Write a Python program to convert a list into a nested dictionary of keys.,"num_list = [1, 2, 3, 4]
new_dict = current = {}
for name in num_list:
current[name] = {}
current = current[name]
print(new_dict)"
3343,Write a Python program to sort a list alphabetically in a dictionary.,"num = {'n1': [2, 3, 1], 'n2': [5, 1, 2], 'n3': [3, 2, 4]}
sorted_dict = {x: sorted(y) for x, y in num.items()}
print(sorted_dict)"
3344,Write a Python program to match key values in two dictionaries.,"x = {'key1': 1, 'key2': 3, 'key3': 2}
y = {'key1': 1, 'key2': 2}
for (key, value) in set(x.items()) & set(y.items()):
print('%s: %s is present in both x and y' % (key, value))"
3345,Write a Python program to count the elements in a list until an element is a tuple,"num = [10,20,30,(10,20),40]
ctr = 0
for n in num:
if isinstance(n, tuple):
break
ctr += 1
print(ctr)"
3346,Write a Python program to convert a tuple to a string.,"tup = ('e', 'x', 'e', 'r', 'c', 'i', 's', 'e', 's')
str = ''.join(tup)
print(str)"
3347,Write a Python program to find the repeated items of a tuple,"tuplex = 2, 4, 5, 6, 2, 3, 4, 4, 7
count = tuplex.count(4)
print(count)"
3348,Write a Python program to convert a tuple to a dictionary.,"tuplex = ((2, ""w""),(3, ""r""))
print(dict((y, x) for x, y in tuplex))"
3349,Write a Python program to sort a tuple by its float element.,"price = [('item1', '12.20'), ('item2', '15.10'), ('item3', '24.5')]
print( sorted(price, key=lambda x: float(x[1]), reverse=True))"
3350,Write a Python program to add member(s) in a set,"color_set = set()
color_set.add(""Red"")
color_set.update([""Blue"", ""Green""])
print(color_set)"
3351,Write a Python program to create a symmetric difference,"setx = set([""apple"", ""mango""])
sety = set([""mango"", ""orange""])
setc = setx ^ sety
print(setc)"
3352,Write a Python program to count the number of even and odd numbers from a series of numbers.,"numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9) # Declaring the tuple
count_odd = 0
count_even = 0
for x in numbers:
if not x % 2:
count_even+=1
else:
count_odd+=1
print(""Number of even numbers :"",count_even)
print(""Number of odd numbers :"",count_odd)"
3353,Write a Python program that prints all the numbers from 0 to 6 except 3 and 6,"for x in range(6):
if (x == 3 or x==6):
continue
print(x,end=' ')
print(""\n"")"
3354,Write a Python program to get the Fibonacci series between 0 to 50.,"x,y=0,1
while y<50:
print(y)
x,y = y,x+y"
3355,Write a Python program which takes two digits m (row) and n (column) as input and generates a two-dimensional array. The element value in the i-th row and j-th column of the array should be i*,"row_num = int(input(""Input number of rows: ""))
col_num = int(input(""Input number of columns: ""))
multi_list = [[0 for col in range(col_num)] for row in range(row_num)]
for row in range(row_num):
for col in range(col_num):
multi_list[row][col]= row*col
print(multi_list)"
3356,Write a Python program to find numbers between 100 and 400 (both included) where each digit of a number is an even number. The numbers obtained should be printed in a comma-separated sequence,"items = []
for i in range(100, 401):
s = str(i)
if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0):
items.append(s)
print( "","".join(items"
3357,Write a Python program to create the multiplication table (from 1 to 10) of a number.,"n = int(input(""Input a number: ""))
for i in range(1,11):
print(n,'x',i,'=',n*i)"
3358,Write a Python function to find the Max of three numbers.,"def max_of_two( x, y ):
if x > y:
return x
return y
def max_of_three( x, y, z ):
return max_of_two( x, max_of_two( y, z ) )
print(max_of_three(3, 6, -5))"
3359,Write a Python function to sum all the numbers in a list,"def sum(numbers):
total = 0
for x in numbers:
total += x
return total
print(sum((8, 2, 3, 0, 7)))"
3360,Write a Python function to multiply all the numbers in a list,"def multiply(numbers):
total = 1
for x in numbers:
total *= x
return total
print(multiply((8, 2, 3, -1, 7)))"
3361,Write a Python function that accepts a string and calculate the number of upper case letters and lower case letters,"def string_test(s):
d={""UPPER_CASE"":0, ""LOWER_CASE"":0}
for c in s:
if c.isupper():
d[""UPPER_CASE""]+=1
elif c.islower():
d[""LOWER_CASE""]+=1
else:
pass
print (""Original String : "", s)
print (""No. of Upper case characters : "", d[""UPPER_CASE""])
print (""No. of Lower case Characters : "", d[""LOWER_CASE""])
string_test('The quick Brow Fox')"
3362,Write a Python function that takes a list and returns a new list with unique elements of the first list,"def unique_list(l):
x = []
for a in l:
if a not in x:
x.append(a)
return x
print(unique_list([1,2,3,3,3,3,4,5]))"
3363,Write a Python program to print the even numbers from a given list,"def is_even_num(l):
enum = []
for n in l:
if n % 2 == 0:
enum.append(n)
return enum
print(is_even_num([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
3364,Write a Python function that checks whether a passed string is palindrome or not,"def isPalindrome(string):
left_pos = 0
right_pos = len(string) - 1
while right_pos >= left_pos:
if not string[left_pos] == string[right_pos]:
return False
left_pos += 1
right_pos -= 1
return True
print(isPalindrome('aza'))"
3365,Write a Python program to access a function inside a function,"def test(a):
def add(b):
nonlocal a
a += 1
return a+b
return add
func= test(4)
print(func(4))"
3366,Write a Python program to detect the number of local variables declared in a function.,"def abc():
x = 1
y = 2
str1= ""w3resource""
print(abc.__code__.co_nlocals)"
3367,"Write a Python program to check number either positive , negative or zero","num = int (input (""Enter Integer Number: ""))
if num == 0:
print (""Zero Entered"")
elif num > 0:
print (""Positive Number Entered"")
elif num < 0:
print (""Negative Number Entered"")"
3368,Write a Python program to Check Divisibility of 2 numbers,"nominator = int (input (""Enter Nominator: ""))
denominator = int (input (""Enter Denominator: ""))
if nominator % denominator == 0:
print(""{} is completely Divisible by {}"".format(nominator, denominator))
else:
print (""{} is not completely Divisible by {}"".format(nominator, denominator))"
3369,Write a python program to check whether Entered caharacter is Vowel or not,"letter = input (""Enter a Single Character: "")
if letter == ""A"" or letter == ""a"" or letter == ""E"" or letter == ""e"" or letter == ""I"" or letter == ""i"" or letter == ""o"" or letter ==""O"" or letter == ""U"" or letter == ""u"":
print (""{} is Vowel"".format(letter))
else:
print (""{} is co nsonent (Not Vowel)"".format(letter))"
3370,Write a python program to Sum of n positive Integer,"n = int (input (""Enter Value of n: ""))
sum = 0
x = 0
while x != n+1: #because we need to include n in sum
sum += x
x+=1
print(""Sum of n positive Integer till {} is {}"".format(n,sum))"
3371,Write a python program to digit sum of a number,"Digits = input(""Enter a number: "")
sum = int(Digits[0])
number = Digits[0]
for i in Digits[1::]:
sum+= int(i)
number +="" + {}"".format(i)
print(""Sum of {} is {}"".format(number,sum))"
3372,Write a python program to convert decimal to binary,"Decimal = input(""Enter Number: "")
num = int(Decimal)
Binary =""""
while num>=1:
i = num%2
num = num//2
Binary +=str(i)
print (""Binary Equivalent of {} is {}"".format(Decimal,Binary[::-1]))"
3373,"Write a python program to Count Numbers, Alphabets, and Special Character","Text = input (""Enter Text: "")
letter, number, spaces , special = 0,0,0,0
for i in Text:
if i.isalpha():
letter+=1
elif i.isspace():
spaces +=1
elif i.isnumeric():
number +=1
else:
special+=1
print("" Alphabets = {} \n Numbers = {} \n Space = {} \n Special Chracter = {}"".format(letter,number,spaces,special))"
3374,Write a python class Shape and Sub class Square:,"class Shape():
def __init__(self,length = 0):
self.length = length
def Area(self):
print(""Area of Shape is 0"")
class Square (Shape):
def __init__(self,length = 0):
self.length = length
def Area(self):
self.area = self.length*self.length
print(""Area of a Square is: {}"".format(self.area))
s1 = Square(2)
s1.Area()"
3375,Write a python function to compute 5/0 using try except,"try:
print(""Division = {}"".format(5/0))
except ZeroDivisionError:
print (""5 cannot be divided by O"")"
3376,Write a python program to Accept the String and print the words composed of digits only,"Text = input (""Enter Text: "")
Digits = """"
for i in Text:
if i.isnumeric():
Digits +=i+"" ""
print(""Digits used in given strings are: {}"".format(Digits))"
3377,Write a python program to program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"num = int (input (""Enter Number: ""))
sum = 0
for i in range(num+1):
sum += float(i/(i+1))
print (""Sum: {:.2f}"".format(sum))"
3378,Write a python program to program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,"def f(n):
if n == 0 :
return 0
else:
return f(n-1)+100
n = int(input(""Enter Number: ""))
print(""f(n-1)+100 = "", f(n))"
3379,"Write a python program to define a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","def Generator(n):
for i in range(n+1):
if i%7 == 0:
yield i
n = int(input(""Enter Number: ""))
for i in Generator(n):
print(i,end = "" "")"
3380,Write a python program to make a recursive function to get the sum,"def rec(n):
if n == 0:
return n
return rec(n-1) + n
n = int(input())
sum = rec(n)
print(sum)"
3381,Write a python program to count the frequency of letters of the string and print the letters in descending order of frequency.,"word = input()
dct = {}
for i in word:
dct[i] = dct.get(i,0) + 1
dct = sorted(dct.items(),key=lambda x: (-x[1],x[0]))
for i in dct:
print(i[0],i[1]"
3382,Write a python program using lambda funtion to square a number,square2 = lambda num: num * num
3383,Write a python program to uppercase strings using lambda and map,"people = [""Darcy"", ""Christina"", ""Diana""]
peeps = list(map(lambda name: name.upper(), people))
print(peeps)"
3384,"Write a python program to filter names not starting with ""a""","names = ['austin', 'penny', 'anthony', 'rihana', 'billy', 'angel']
a_names = list(filter(lambda name: name[0] == 'a', names))
print(a_names)"
3385,Write a python program to return dict with {student:highest score} USING MAP+LAMBDA,"midterms = [80, 91, 78]
finals = [98, 89, 53]
students = ['dan', 'ang', 'kate']
final_grades = dict(zip(students,map(lambda pair: max(pair),zip(midterms, finals))))"
3386,Write a python function to sum variable number of arguments,"def sum_all(*args):
total = 0
for num in args:
total += num
return total"
3387,Write a python program using kwargs,"def fav_colors(**kwargs):
''' kwargs comes as a dictionary '''
print(kwargs)
for person, color in kwargs.items():
print(f""{person}'s favorite color is {color}"")
fav_colors(sriju=""red"", faizu=""yellow"", kabir=""black"")"
3388,Write a python program to print even length words in a string,"def printWords(s):
s = s.split(' ')
for word in s:
if len(word)%2==0:
print(word)
s = ""This is a python language""
printWords(s)"
3389,Write a python program which can compute the factorial of a given number.,"ef fact(x):
if x == 0:
return 1
return x * fact(x - 1)
x=int(raw_input())
print (fact(x))"
3390,"Write a python program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number.The numbers obtained should be printed in a comma-separated sequence on a single line.","alues = []
for i in range(1000, 3001):
s = str(i)
if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
values.append(s)
print ("","".join(values))"
3391,Write a python program that accepts a sentence and calculate the number of letters and digits.,"s = raw_input()
d={""DIGITS"":0, ""LETTERS"":0}
for c in s:
if c.isdigit():
d[""DIGITS""]+=1
elif c.isalpha():
d[""LETTERS""]+=1
else:
pass
print (""LETTERS"", d[""LETTERS""])
print (""DIGITS"", d[""DIGITS""])"
3392,Write a python program using a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.,"values = raw_input()
numbers = [x for x in values.split("","") if int(x)%2!=0]
print ("","".join(numbers))"
3393,"Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","def putNumbers(n):
i = 0
while i<n:
j=i
i=i+1
if j%7==0:
yield j
for i in reverse(100):
print (i)"
3394,Write a python program using a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,"def printDict():
d=dict()
d[1]=1
d[2]=2**2
d[3]=3**2
print (d)
printDict()"
3395,Define a class named American which has a static method called printNationality.,"class American(object):
@staticmethod
def printNationality():
print (""America"")
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
3396,Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.,"class Shape(object):
def __init__(self):
pass
def area(self):
return 0
class Square(Shape):
def __init__(self, l):
Shape.__init__(self)
self.length = l
def area(self):
return self.length*self.length
aSquare= Square(3)
print (aSquare.area())"
3397,Write a function to compute 5/0 and use try/except to catch the exceptions.,"def throws():
return 5/0
try:
throws()
except ZeroDivisionError:
print (""division by zero!"")
except Exception, err:
print ('Caught an exception')
finally:
print ('In finally block for cleanup')"
3398,Write a python program for a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.,"import math
def bin_search(li, element):
bottom = 0
top = len(li)-1
index = -1
while top>=bottom and index==-1:
mid = int(math.floor((top+bottom)/2.0))
if li[mid]==element:
index = mid
elif li[mid]>element:
top = mid-1
else:
bottom = mid+1
return index
li=[2,5,7,9,11,17,222]
print bin_search(li,11)
print bin_search(li,12)"
3399,"Write a python program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)"
3400,Write a python program for selection sort,"for i in range(len(A)):
min_idx = i
for j in range(i+1, len(A)):
if A[min_idx] > A[j]:
min_idx = j
A[i], A[min_idx] = A[min_idx], A[i]"
3401,Write a python program for implementation of Bubble Sort,"def bubbleSort(arr):
n = len(arr)
for i in range(n-1):
for j in range(0, n-i-1):
if arr[j] > arr[j+1] :
arr[j], arr[j+1] = arr[j+1], arr[j]
arr = [64, 34, 25, 12, 22, 11, 90]
bubbleSort(arr)"
3402,Write a python program to check if a number is an Armstrong number.,"n=int(input(""Enter any number: ""))
a=list(map(int,str(n)))
b=list(map(lambda x:x**3,a))
if(sum(b)==n):
print(""The number is an armstrong number. "")
else:
print(""The number isn't an arsmtrong number. "")"
3403,Write a python program to check if a number is a Perfect number.,"n = int(input(""Enter any number: ""))
sum1 = 0
for i in range(1, n):
if(n % i == 0):
sum1 = sum1 + i
if (sum1 == n):
print(""The number is a Perfect number!"")
else:
print(""The number is not a Perfect number!"")"
3404,Write a python program to Check if a Number is a Strong Number,"sum1=0
num=int(input(""Enter a number:""))
temp=num
while(num):
i=1
f=1
r=num%10
while(i<=r):
f=f*i
i=i+1
sum1=sum1+f
num=num//10
if(sum1==temp):
print(""The number is a strong number"")
else:
print(""The number is not a strong number"")"
3405,Write a python to find LCM of two numbers,"a=int(input(""Enter the first number:""))
b=int(input(""Enter the second number:""))
if(a>b):
min1=a
else:
min1=b
while(1):
if(min1%a==0 and min1%b==0):
print(""LCM is:"",min1)
break
min1=min1+1"
3406,Write python program to find whether-number-power-two,"def is_power_of_two(n):
""""""Return True if n is a power of two.""""""
if n <= 0:
return False
else:
return n & (n - 1) == 0
n = int(input('Enter a number: '))
if is_power_of_two(n):
print('{} is a power of two.'.format(n))
else:
print('{} is not a power of two.'.format(n))"
3407,Write a python program to find length of list using recursion,"def length(lst):
if not lst:
return 0
return 1 + length(lst[1::2]) + length(lst[2::2])
a=[1,2,3]
print(""Length of the string is: "")
print(a)"
3408,write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist = [1, 2, 3, 4, 5]
shuffle(mylist)
print(mylist)"
3409,write a python program that adds the elements of a list to a set and prints the set,"my_set = {1, 2, 3}
my_list = [4, 5, 6]
my_set.update(my_list)
print(my_set)"
3410,write a python program that prints the circumference of a circle,"import math
radius = 10
print(f'Area: {2 * math.pi * radius}')"
3411,write a python program that prints the area of a rectangle,"length = 10
width = 5
print(f'Area: {length * width}')"
3412,write a python program that prints the area of a square,"side = 5
print(f'Area: {side * side}')"
3413,write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number_dict = {
1: 'one',
2: 'two',
3: 'three',
4: 'four',
5: 'five'
}"
3414,write a python program to remove words less than a specified length from a sentence,"sentence = 'this is my sentence and i will write it my way'
minlength = 3
result = [word for word in sentence.split(' ') if len(word) >= minlength]"
3415,write a python program to keep words less than a specified length in a sentence,"sentence = 'this is my sentence and i will write it my way'
maxlength = 3
result = [word for word in sentence.split(' ') if len(word) <= minlength]"
3416,"93
 write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list","def make_all_positive(nums):
return [num if num > 0 else -num for num in nums]"
3417,write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make_all_negative(nums):
return [num if num < 0 else -num for num in nums]"
3418,write a python function to return a set of all punctuation used in a string,"def get_punctuations(sentence):
punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
used_punctuation = set()
for char in sentence:
if char in punctuations:
used_punctuation.add(char)
return used_punctuation"
3419,write a python program to print the words in a sentence in reverse order,"sentence = 'the quick brown fox'
words = sentence.split(' ')
words.reverse()
print(' '.join(words))"
3420,write a python program to replace each word in a sentence with the length of the word and print it,"sentence = 'the quick brown fox jumps over the lazy dog'
words = sentence.split(' ')
lengths = [str(len(word)) for word in words]
print(' '.join(lengths))"
3421,write a python program to convert a set to a list,"myset = {1, 2, 4, 7}
mylist = list(myset)"
3422,write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my_list = [1, 8, 1, 2, 2, 9]
my_dict = {key: value for key, value in enumerate(my_list)}"
3423,write a python function that returns True if the sum of two provided numbers is even,"def is_prod_even(num1, num2):
sum = num1 + num2
return not sum % 2"
3424,write a python program to print the first 5 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[:5])"
3425,write a python program to print the last 3 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[-3:])"
3426,write a python program to subtract two numbers and print it,"num1 = 1.5
num2 = 6.3
difference = num1 - num2
print(f'Difference: {difference}')"
3427,write a python program to print 5 random integers between 10 and 20,"import random
print(random.sample(range(10, 20), 5))"
3428,write a python program to delete a variable,"i = 10
del i"
3429,write a python program to perform multiple assignments,a = b = c = 1
3430,write a python program to swap two numbers,"(x, y) = (1, 2)
print(f'Before swapping: x: {x}, y: {y}')
(y, x) = (x, y)
print(f'After swapping: x: {x}, y: {y}')"
3431,write a python program to print bitwise AND operation,"a = 60
b = 13
a_and_b = a&b
print(a_and_b)"
3432,write a python program to print bitwise OR operation,"a = 60
b = 13
a_or_b = a|b
print(a_or_b)"
3433,write a python program to print bitwise XOR operation,"a = 60
b = 13
a_xor_b = a^b
print(a_xor_b)"
3434,write a python program to print binary ones complement on a variable,"a = 60
ones_complement_a = ~a
print(ones_complement_a)"
3435,write a python program to print binary left shift on a variable,"a = 60
binary_left_shift = a<<2
print(binary_left_shift)"
3436,write a python program to print binary right shift on a variable,"a = 60
binary_right_shift = a>>2
print(binary_right_shift)"
3437,write a python function to check if an item exists in a list and return the boolean value,"def item_exists(lst, item):
    if item in lst:
        return True
    else:
        return False"
3438,write a python function to get the type of a variable,"def get_type(var):
    return(type(var))"
3439,write a python function to check if an object is an instance of a given class,"def check_instance(derived_class, base_class):
    return(isinstance(derived_class, base_class))"
3440,write a python function to accept user input to continue,"def get_userinput():
    while(1):
        do_continue = raw_input('Do you want to continue(y/n)?')
        if do_continue == 'y' or do_continue == 'n':
            return do_continue"
3441,write a python program to create a raw string,str1 = r'hello\n'
3442,write a python function to print prime numbers between two numbers,"def get_prime_numbers(range1, range2):
    for num in range(range1,range2):
        for i in range(2,num):
            if num%i == 0:
                j=num/i
                break
        else:
            print(num, 'is a prime number')"
3443,write a python function to get the value of maximum integer allowed on the system,"def get_max_integer():
    import sys
    return sys.maxsize"
3444,write a python function to get the absolute value of a number,"def get_absolute_value(i):
    return(abs(i))"
3445,write a python function to return the exponential of a number,"def get_exponential_value(i):
    import math
    return(math.exp(i))"
3446,write a python function to return the natural logarithm of a number,"def get_natural_log_value(i):
    import math
    return(math.log(i))"
3447,write a python function to return the base 10 logarithm of a number,"def get_natural_log_value(i):
    import math
    return(math.log10(i))"
3448,write a python function to return the square root of a number,"def get_sqrt(i):
    import math
    return(math.sqrt(i))"
3449,write a python program to print the maximum integer in a list of integers,"lst = [23, 10, 55, 43]
lst.sort()
max = lst[-1]"
3450,write a python program to print the minimum integer in a list of integers,"lst = [23, 10, 55, 43]
lst.sort()
min = lst[0]"
3451,write a python program to print a random number between 0 and 1,"import random
print(random.uniform(0, 1))"
3452,write a python program to concatenate two strings and print,"str1 = 'hello'
str2 = ' world!'
print(str1 + str2)"
3453,write a python program to print the ascii value of a character,"str1 = 'a'
print(ord(str1))"
3454,write a python program to print current date and time,"import datetime
print(datetime.datetime.now())"
3455,write a python program to capitalize a string,"str1 = 'hello'
print(str1.capitalize())"
3456,write a python program to clone a list,"a = [1, 2, 3]
b = a[:]"
3457,write a python program to print a list in reverse,"a = [1, 2, 3]
print(a[::-1])"
3458,write a python program to print a list in sorted order,"basket = ['apple', 'orange', 'apple', 'pear', 'orange', 'banana']
print(sorted(basket))"
3459,write a python function to return union of two sets,"def union_set(set1, set2):
    return set1|set2"
3460,"write a python program to print a set of all elements in either set1 or set2, but not both","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
3461,write a python program to print names of the entries in the directory given by path,"path = '/home'
import os
print(os.listdir(path))"
3462,write a python program to create a directory named path,"path = 'test'
import os
os.mkdir(path)"
3463,write a python program to add two matrices and print them,"X = [[1,2,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[9,8,7],
    [6,5,4],
    [3,2,1]]
result = [[X[i][j] + Y[i][j]  for j in range
(len(X[0]))] for i in range(len(X))]
for r in result:
    print(r)"
3464,write a python function to check if a string is a palindrome or not,"def isPalindrome(s):
    return s == s[::-1]"
3465,write a python program to print the least frequent character in a string,"test_str = ""this is test string""
all_freq = {}
for i in test_str:
    if i in all_freq:
        all_freq[i] += 1
    else:
        all_freq[i] = 1
res = min(all_freq, key = all_freq.get)
print(res)"
3466,write a python program to print sum of elements in a list,"lst = range(5)
print(sum(lst))"
3467,write python code to merge two dictionaries,"def merge_dict(dict1, dict2):
    return(dict2.update(dict1))
dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
merge_dict(dict1, dict2)
print(dict2)"
3468,write python code to print temperature in celsius to fahrenheit,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
3469,write python function to detect if a number is even number,"def is_even(num):
    return((num % 2) == 0)"
3470,write python function to detect if a number is odd number,"def is_odd(num):
    return((num % 2) != 0)"
3471,write python function to detect if an year is leap year,"def is_leap_year(year):
    if (year % 4) == 0:
        if (year % 100) == 0:
            if (year % 400) == 0:
                return True 
            else:
                return False
        else:
            return True 
    else:
        return False"
3472,write a python program to print the largest number among the three input numbers,"num1 = float(input(""Enter first number: ""))
num2 = float(input(""Enter second number: ""))
num3 = float(input(""Enter third number: ""))
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(""The largest number is"", largest)"
3473,write a python program to find the factorial of a number provided by the user.,"num = int(input(""Enter a number: ""))
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
3474,write a python program to display the Fibonacci sequence up to n-th term,"nterms = int(input(""How many terms? ""))
n1, n2 = 0, 1
count = 0
if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1"
3475,write a python program to print transpose a matrix and print,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
3476,write a python program to convert Kilometers to Miles,"kilometers = float(input(""Enter value in kilometers: ""))
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
3477,"write a python program to check if a number is positive, negative or 0","num = float(input(""Enter a number: ""))
if num > 0:
   print(""Positive number"")
elif num == 0:
   print(""Zero"")
else:
   print(""Negative number"")"
3478,write a python program to check if a number is a prime number,"num = int(input(""Enter a number: ""))
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
3479,write a python function to find H.C.F of two numbers,"def compute_hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i
    return hcf"
3480,write a python python program to find the L.C.M. of two input number,"def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
num1 = 54
num2 = 24
print(""The L.C.M. is"", compute_lcm(num1, num2))"
3481,write a python function to find the factors of a number,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
3482,write a python program to remove punctuations from a string and print it,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = input(""Enter a string: "")
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
3483,write a python program to count the number of each vowel and print them,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'
ip_str = ip_str.casefold()
count = {}.fromkeys(vowels,0)
for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
3484,write a python program to print week number from a date,"import datetime
print(datetime.date(2015, 6, 16).isocalendar()[1])
from datetime import date, timedelta
def all_sundays(year):
       dt = date(year, 1, 1)
       dt += timedelta(days = 6 - dt.weekday())
       while dt.year == year:
          yield dt
          dt += timedelta(days = 7)
for s in all_sundays(2020):
    print(s)"
3485,Write a Python program to get the last day of a specified year and month.,"import calendar
year = 2020
month = 12 
print(calendar.monthrange(year, month)[1])"
3486,Write a Python program to convert a string to datetime.,"from datetime import datetime
date_object = datetime.strptime('Jul 1 2014 2:43PM', '%b %d %Y %I:%M%p')
print(date_object)"
3487,Write a Python program to subtract five days from current date,"from datetime import date, timedelta
dt = date.today() - timedelta(5)
print('Current Date :',date.today())
print('5 days before Current Date :',dt)"
3488,Write a Python program to convert Year/Month/Day to Day of Year.,"import datetime
today = datetime.datetime.now()
day_of_year = (today - datetime.datetime(today.year, 1, 1)).days + 1
print(day_of_year)"
3489,Write a  program to split strings using split function.,"string = ""India is my country.""
string_list = string.split(' ')
print(string_list)"
3490,write a Python program to multiply two numbers and print it,"num1 = 1.5
num2 = 6.3
product = num1 * num2
print(f'product: {product}')"
3491,"Write a Python program that asks the user to enter their name and their age. Print out a message addressed to them that tells them the year that they will turn 100 years old.
 import datetime
 asking name
 asking age
 get the current year
 get difference between age x 100 years
 show exactly year that user will turn 100 years old","import datetime
name = input('Type your name:')
age = input('Type your age:')
now = datetime.datetime.now()
diff = 100 - int(age)
print('Hi '+name+"" you will complete 100 years in "",(now.year+diff))"
3492,"Write a Python program that asks the user to enter a number and Depending on whether the number is even or odd, print out an appropriate message to the user.","number = int(input(""Number: ""))
if number%2 == 0 and number%4 != 0:
print(""Your number is even..."")
elif number%4 == 0:
print(""Your number is a multiple of 4"")
else:
print(""Your number is odd..."")"
3493,Write a Python program that accepts a string and calculate the number of digits and letters and print them,"x = input(""Enter a string! "")
d=l=0
for c in x:
    if c.isdigit():
        d = d + 1
    elif c.isalpha():
        l = l + 1
    else:
        pass
print(""Letters: "", l)
print(""Digits: "", d)"
3494,write a Python program to count the number of even and odd numbers from a series of numbers and print the result,"x = (1, 2, 3, 4, 5, 6, 7, 8, 9)
odd = even = 0
for i in x:
    if i % 2 == 0:
        even = even + 1
    else:
        odd = odd + 1
print(""Even Numbers are: "", even)
print(""Odd Numbers are: "", odd)"
3495,"Write a Python program to find those numbers which are divisible by 7 and multiple of 5, between 1500 and 2700 and print the result.","nl = []
for x in range(1500, 2700):
    if (x%7==0) and (x%5==0):
        nl.append(str(x))
print(""\n"".join(nl))"
3496,"Write a python program to generate a random number between 1 and 9 (including 1 and 9) and Ask the user to guess the number, then tell them whether they guessed too low, too high, or exactly right.","import random
import math
x = math.floor((random.random() * 10) + 1)
guess=0
while guess != x:
    guess = int(input(""Guess a number: ""))
    if(guess == x):
        print(""you got It!"")
        print(""Number is "", x)
        break
    elif(guess>x):
        print(""You Guesses too high!"")
    else:
        print(""You guessed too low!"")"
3497,"Write a Python program to check a triangle is equilateral, isosceles or scalene. Note : An equilateral triangle is a triangle in which all three sides are equal. A scalene triangle is a triangle that has three unequal sides. An isosceles triangle is a triangle with (at least) two equal sides.","print(""Input lengths of the triangle sides: "")
x = int(input(""x: ""))
y = int(input(""y: ""))
z = int(input(""z: ""))
if x == y == z:
 print(""Equilateral triangle"")
elif x != y != z:
 print(""Scalene triangle"")
else:
 print(""isosceles triangle"")"
3498,Write a Python program to check whether an alphabet is a vowel or consonant,"l = input(""Input a letter of the alphabet: "")
if l in ('a', 'e', 'i', 'o', 'u'):
    print(""%s is a vowel."" % l)
elif l == 'y':
    print(""Sometimes letter y stand for vowel, sometimes stand for consonant."")
else:
    print(""%s is a consonant."" % l)"
3499,"Write a python program to Convert a list of characters into a string and print it : Example :  Input ['a', 'b', 'c', 'd'] Output abcd","s = ['a','b','c','d']
x = """".join(s)
print(x)"
3500,"Write a Python program to find common items from two lists. Example:  input color1 = ""Red"", ""Green"", ""Orange"", ""White"" color2 = ""Black"", ""Green"", ""White"", ""Pink"" output {'Green', 'White'}","color1 = ""Red"", ""Green"", ""Orange"", ""White""
color2 = ""Black"", ""Green"", ""White"", ""Pink""
print(set(color1) & set(color2))"
3501,Write a Python program to Calculate the sum of the digits of a random three-digit number and print the result.,"import random 
n = random() * 900 + 100 
n = int(n) 
print(n) 
a = n // 100 
b = (n // 10) % 10 
c = n % 10 
print(a + b + c)"
3502,Write a Python program to find the area and perimeter of a right-angled triangle and print the perimeter and area.,"import math 
AB = input(""Length of the first leg: "") 
AC = input(""Length of the second leg: "") 
AB = float(AB) 
AC = float(AC) 
BC = math.sqrt(AB  2 + AC  2) S = (AB * AC) / 2
P = AB + AC + BC 
print(""Area of the triangle: %.2f"" % S)
print(""Perimeter of the triangle: %.2f"" % P)"
3503,Write a Python program to find the greatest common divisor (GCD)(Euclidean algorithm) and print the result.,"a = int(input())
b = int(input())
while a != 0 and b != 0:
    if a > b:
        a %= b
    else:
        b %= a
gcd = a + b
print(gcd)"
3504,Write a Python program to select integers from a string and print those integers,"s = input()
l = len(s)
i = 0
while i < l:
    num = ''
    symbol = s[i]
    while symbol.isdigit():
        num += symbol
        i += 1
        if i < l:
            symbol = s[i]
        else:
            break
    if num != '':
        print(num)
    i += 1"
3505,"Write a program to Expand and print a string like ""a-z"" Example: enter first string :b  enter last string: e Output : bcde","first = input(""The first: "")
last = input(""The last: "")
while first <= last:
    print(first, end='')
    first = chr(ord(first) + 1)
print()"
3506,Write a Python function that returns the values   of the largest and second largest elements in the passed list.,"def max2(x):
    if x[0] > x[1]:
        m1,m2 = (x[0],x[1])
    else:
        m1,m2 = (x[1],x[0])
    for i in range(2, len(x)):
        if x[i] > m1:
            m2 = m1
            m1 = x[i]
        elif x[i] > m2:
            m2 = x[i]
    return m1,m2"
3507,"Write a Python program to print the frequency of the elements in a list.Example: input my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30] output {10: 4, 20: 4, 40: 2, 50: 2, 30: 1}","import collections
my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]
print(""Original List : "",my_list)
ctr = collections.Counter(my_list)
print(""Frequency of the elements in the List : "",ctr)"
3508,"Write a Python program to generate all permutations of a list in Python. Example: Input [1,2,3] Output [(1, 2, 3), (1, 3, 2), (2, 1, 3), (2, 3, 1), (3, 1, 2), (3, 2, 1)]","import itertools
print(list(itertools.permutations([1,2,3])))"
3509,"Write a Python program to remove duplicates from a list.Example: Input a = [10,20,30,20,10,50,60,40,80,50,40] Output [10, 20, 30, 50, 60, 40, 80]","a = [10,20,30,20,10,50,60,40,80,50,40]
dup_items = set()
uniq_items = []
for x in a:
    if x not in dup_items:
        uniq_items.append(x)
        dup_items.add(x)
print(uniq_items)"
3510,"Write a Python function to return the second smallest number in a list and print it.Example: input second_smallest([1, 2, -8, -2, 0]) output -2","def second_smallest(numbers):
    a1, a2 = float('inf'), float('inf')
    for x in numbers:
        if x <= a1:
            a1, a2 = x, a1
        elif x < a2:
            a2 = x
    return a2
print(second_smallest([1, 2, -8, -2, 0]))"
3511,Write a python program to determine the percentage of lowercase and uppercase letters in a string.,"string = input()
length = len(string)
lower = upper = 0
for i in string:
    if i.islower():
        lower += 1
    elif i.isupper():
        upper += 1
per_lower = lower / length * 100
per_upper = upper / length * 100
print(""Lower: %.2f%%"" % per_lower)
print(""Upper: %.2f%%"" % per_upper)"
3512,Write a Python program to Separate positive numbers from negative and print the positive numbers and negative numbers separately,"from random import random
a = []
for i in range(7):
    n = int(random() * 20) - 10
    a.append(n)
print(a)
neg = []
pos = []
for i in a:
    if i < 0:
        neg.append(i)
    elif i > 0:
        pos.append(i)
print(neg)
print(pos)"
3513,"Write a python program to swap cases in a string and print. In other words, convert all lowercase letters to uppercase letters and vice versa and print the result Example:input:InDiAaa Output: iNdIaAA","s = input()
print(s.swapcase())"
3514,Write a python program to implement bubble sort and print the result,"from random import randint
N = 7
a = []
for i in range(N):
    a.append(randint(1, 20))
print(a)
for i in range(N-1):
    for j in range(N-i-1):
        if a[j] > a[j+1]:
            b = a[j]
            a[j] = a[j+1]
            a[j+1] = b
print(a)"
3515,Write a python program to find whether a given number is perfect or not and print the result in boolean format(True or False),"x = int(input(""Enter any no. "")) 
def perfect_number(n): 
    sum = 0 
    for x in range(1, n): 
        if n % x == 0: 
            sum += x 
    return sum == n
print(perfect_number(x))"
3516,Write a python program to find and print the longest word in a sentence,"string = ""python java c c++ javascript pascal php""
print(string)
words = string.split()
id_longest = 0
for i in range(1, len(words)):
    if len(words[id_longest]) < len(words[i]):
        id_longest = i
print(words[id_longest])"
3517,Write a python program to print all the values in a dictionary.,"d =  {'a':1,'b':2,'c':3,'d':4}
print(d.values())"
3518,Write a python program to print all the keys in a dictionary.,"d =  {'a':1,'b':2,'c':3,'d':4}
print(d.keys())"
3519,Write a python program to print a given string without spaces,"s = ""I love India   now I will be printed without any space""
for i in s:
    if i==' ': continue
    print(i,end='')"
3520,Write a python program to print only upto the letter 't' in a given string.,"s = ""hi i love python""
i=0
while s[i]!='t':
    print(s[i],end='')
    i+=1"
3521,Write a python program to print the length of a given string.,"sample_str = ""Python is good for datascience""
print(len(sample_str))"
3522,Write a python program to turn every item of a list into its square.,"sample_list = [1, 2, 3, 4, 5, 6, 7]
square_list =  [x * x for x in sample_list]
print(square_list)"
3523,Write a python program to print a new set with all items from both sets by removing duplicates,"set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.union(set2))"
3524,write a list comprehension in python to get a list of even numbers when a range is given,"N = 20
number_list = [ x for x in range(N) if x % 2 == 0]
print(f'List of Even Numbers:', number_list)"
3525,write a list comprehension in python to get a list of odd numbers when a range is given,"N = 20
number_list = [ x for x in range(N) if x % 2 != 0]
print(f'List of Odd Numbers:', number_list)"
3526,write a python function to display the Fibonacci series,"def recur_fibo(n):
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))"
3527,write a python lambda function to get remainder when divisor and divident are given,"remainder = lambda Divident, Divisor: Divident % Divisor
print(remainder(5,2))"
3528,write a python function to print whether the given year is a leap year or not,"def leapYear(year):
    if (year % 4) == 0:
       if (year % 100) == 0:
           if (year % 400) == 0:
               print(""{0} is a leap year"".format(year))
           else:
               print(""{0} is not a leap year"".format(year))
       else:
           print(""{0} is a leap year"".format(year))
    else:
       print(""{0} is not a leap year"".format(year))"
3529,write a python function to convert degree celsius to degree fahrenheit,"def fahrenheit(celsius):
    return (celsius * 1.8) + 32"
3530,write a python function to convert degree fahrenheit to degree celsius,"def celsius(fahrenheit):
    return (fahrenheit - 32) / 1.8"
3531,write a python function to get the factorial of a given number,"def factorial(n):
    if n == 1:
        return n
    else:
        return n*factorial(n-1)"
3532,write a python function to compute the HCF of two numbers,"def hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf"
3533,write a python program to remove punctuations in a string,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
 string = ''.join(e for e in d if e not in punctuations)"
3534,write a python program to print the ASCII value of a character,"c = 'p'
 print(""The ASCII value of '"" + c + ""' is"", ord(c))"
3535,write a python program to swap two numbers,"a = 1
 b = 2
 a, b = b, a"
3536,write a python lambda function to add three numbers,"x = lambda a, b, c : a + b + c
 print(x(5, 6, 2))"
3537,write a python function to check whether the number is a Magic number or not,"def isMagic(n): 
    sum = 0
    while (n > 0 or sum > 9): 
        if (n == 0): 
            n = sum; 
            sum = 0; 
        sum = sum + n % 10; 
        n = int(n / 10); 
    return True if (sum == 1) else False;"
3538,write a python program to convert a list of values in kilometers to feet,"kilometer = [39.2, 36.5, 37.3, 37.8]
 feet = map(lambda x: float(3280.8399)*x, kilometer)
 print(list(feet))"
3539,write a python list comprehension to flatten a list of lists,"list_of_list = [[1,2,3],[4,5,6],[7,8]]`
 flatten = [y for x in list_of_list for y in x]"
3540,write a python list comprehension to transpose a 2D matrix (provided as list),"matrix = [[1,2,3],[4,5,6],[7,8,9]]
 matrixT = [[row[i] for row in matrix] for i in range(len(matrix[0]))]"
3541,write a python list comprehension to print numbers in a given string,"string = ""Hello 12345 World""
 numbers = [x for x in string if x.isdigit()]
 print (numbers)"
3542,write a python function for binary search,"def binary_search(arr, low, high, x): 
    if high >= low: 
        mid = (high + low) // 2
        if arr[mid] == x: 
            return mid 
        elif arr[mid] > x: 
            return binary_search(arr, low, mid - 1, x) 
        else: 
            return binary_search(arr, mid + 1, high, x) 
    else: 
        return -1"
3543,write a python function to bubblesort an array,"def bubbleSort(arr): 
    n = len(arr) 
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j]"
3544,write a python program to do selection sort,"A = [64, 25, 12, 22, 11] 
for i in range(len(A)): 
    min_idx = i 
    for j in range(i+1, len(A)): 
        if A[min_idx] > A[j]: 
            min_idx = j 
    A[i], A[min_idx] = A[min_idx], A[i] 
print (""Sorted array"") 
for i in range(len(A)): 
    print(""%d"" %A[i])"
3545,write a python program to check whether the number is prime,"num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
3546,write a python function to linearly search an array for a given number and return its index else return -1,"def search(arr, n, x): 
    for i in range(0, n): 
        if (arr[i] == x): 
            return i 
    return -1"
3547,write a python function to check whether the number is a lucky number,"def isLucky(n):
    isLucky.counter = 2
    next_position = n 
    if isLucky.counter > n:
        return 1
    if n % isLucky.counter == 0:
        return 0
    next_position = next_position - next_position /isLucky.counter
    isLucky.counter = isLucky.counter + 1
    return isLucky(next_position)"
3548,write a python function to obtain the square root of a number,"def squareRoot(n): 
        x = n 
        y = 1
        e = 0.000001
        while(x - y > e):  
            x = (x + y)/2
            y = n / x   
        return x"
3549,write a python function to convert a number from decimal to binary,"def decToBinary(n): 
    binaryNum = [0] * n;  
    i = 0; 
    while (n > 0):   
        binaryNum[i] = n % 2; 
        n = int(n / 2); 
        i += 1; 
    for j in range(i - 1, -1, -1): 
        print(binaryNum[j], end = """");"
3550,write a python function to convert a number from binary to decimal,"def binaryToDecimal(n):
    num = n;
    dec_value = 0;
    base = 1;  
    temp = num;
    while(temp):
        last_digit = temp % 10;
        temp = int(temp / 10);
        dec_value += last_digit * base;
        base = base * 2;
    return dec_value;"
3551,write a python function to convert a number from decimal to octal,"def decToOctal(n):
    octalNum = [0] * 100
    i = 0
    while (n != 0):
        octalNum[i] = n % 8
        n = int(n / 8)
        i += 1
    for j in range(i - 1, -1, -1):
        print(octalNum[j], end="""")"
3552,write a python function to convert a number from octal to decimal,"def octalToDecimal(n): 
    num = n; 
    dec_value = 0; 
    base = 1; 
    temp = num; 
    while (temp): 
        last_digit = temp % 10; 
        temp = int(temp / 10); 
        dec_value += last_digit * base; 
        base = base * 8; 
    return dec_value;"
3553,write a dictionary comprehension in python so that the values are square of the key number,"square_dict = {num: num*num for num in range(1, 11)}
  print(square_dict)"
3554,write a python program to get indexes for each element in a list using enumerate,"l1 = [""eat"",""sleep"",""repeat""] 
  for ele in enumerate(l1): 
      print (ele)"
3555,write a python program to get indexes starting at a specified number for each element in a list using enumerate,"l1 = [""eat"",""sleep"",""repeat""] 
  for count,ele in enumerate(l1,100): 
      print (count,ele )"
3556,write a python program to demonstarate working of map,"def addition(n): 
    return n + n   
  numbers = (1, 2, 3, 4) 
  result = map(addition, numbers) 
  print(list(result))"
3557,"write a python function to calculate simple interest
  write a python function to calculate compound interest","def simple_interest(p,t,r):  
    si = (p * t * r)/100    
    return si 
 def compound_interest(principle, rate, time): 
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    print(""Compound interest is"", CI)"
3558,write a python function to convert a list of characters to a string,"def convert(s): 
     str1 = """" 
     return(str1.join(s))"
3559,write a python function to check whether a number is perfect,"def isPerfect( n ): 
     sum = 1
     i = 2
     while i * i <= n: 
         if n % i == 0: 
             sum = sum + i + n/i 
         i += 1
     return (True if sum == n and n!=1 else False)"
3560,write a python function to find the sum of digits in a number until one digit (no more than one digit),"def digSum(n): 
    sum = 0
    while(n > 0 or sum > 9): 
        if(n == 0): 
            n = sum
            sum = 0         
        sum += n % 10
        n = int(n/10)    
    return sum"
3561,write a python function to get the sum of numbers in a given digit,"def getSum(n):     
    sum = 0
    for digit in str(n):   
      sum += int(digit)        
    return sum"
3562,write a python function to find the largest number in an array,"def largest(arr,n): 
    max = arr[0] 
    for i in range(1, n): 
        if arr[i] > max: 
            max = arr[i] 
    return max"
3563,write a python function to find the nth catalan number,"def catalan(n): 
    if n <= 1: 
        return 1
    res = 0
    for i in range(n): 
        res += catalan(i) * catalan(n-i-1) 
    return res"
3564,write a python function to convert decimal to hexadecimal,"def decToHexa(n): 
    hexaDeciNum = ['0'] * 100; 
    i = 0; 
    while(n != 0):  
        temp = 0;  
        temp = n % 16; 
        if(temp < 10): 
            hexaDeciNum[i] = chr(temp + 48); 
            i = i + 1; 
        else: 
            hexaDeciNum[i] = chr(temp + 55); 
            i = i + 1; 
        n = int(n / 16); 
    j = i - 1; 
    while(j >= 0): 
        print((hexaDeciNum[j]), end = """"); 
        j = j - 1;"
3565,write a python program to convert hexadecimal to decimal,"def hexadecimalToDecimal(hexval): 
    length = len(hexval) 
    base = 1
    dec_val = 0
    for i in range(length - 1, -1, -1):  
        if hexval[i] >= '0' and hexval[i] <= '9': 
            dec_val += (ord(hexval[i]) - 48) * base 
            base = base * 16
        elif hexval[i] >= 'A' and hexval[i] <= 'F': 
            dec_val += (ord(hexval[i]) - 55) * base 
            base = base * 16
    return dec_val"
3566,write a python program to add two hexadecimal numbers,"a = ""B""
 b = ""C""
 sum = hex(int(a, 16) + int(b, 16)) 
 print(sum[2:])"
3567,write a python program to add two octal numbers,"a = ""123""
 b = ""456""
 sum = oct(int(a, 8) + int(b, 8)) 
 print(sum[2:])"
3568,write a python program to add two binary numbers,"a = ""1101""
 b = ""100""
 sum = bin(int(a, 2) + int(b, 2))  
 print(sum[2:])"
3569,write s python program to print the union of two sets,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A | B)"
3570,write s python program to print the intersection of two sets,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A & B)"
3571,write s python program to print the difference of two sets,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A - B)"
3572,write s python program to print the symmetric difference of two sets,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A ^ B)"
3573,write a python function to find nCr,"def nCr(n, r): 
    def fact(n): 
        res = 1
        for i in range(2, n+1): 
            res = res * i 
        return res
    return (fact(n) / (fact(r)  
                * fact(n - r)))"
3574,write a python function to calculate nPr,"def nPr(n, r):  
    def fact(n):  
        if (n <= 1): 
            return 1
        return n * fact(n - 1)
    return int(fact(n) /
                fact(n - r))"
3575,write a python function to calculate the volume of ellipsoid,"def volumeOfEllipsoid(r1, r2, r3): 
    return 1.33 * 22 * r1 * r2 * r3/7"
3576,write a python function to calculate the area of tetraheadron,"def area_of_tetrahedron(side): 
    return (1.73205 * 
           (side * side));"
3577,write a python function to find the volume of tetraheadron,"def vol_tetra(side): 
    volume = (side ** 3 / (6 * 1.414)) 
    return round(volume, 2)"
3578,write a python function to determing the volume of a cube whose space diagonal measure is given,"def CubeVolume(d): 
    Volume = (1.73205 * pow(d, 3)) / 9
    return Volume"
3579,write a python function to return count of number of vowels in a sentence,"def count_vowels(sentence):
   count = 0
   for letter in sentence:
      if letter in ""aeiouAEIOU"":
         count += 1
   return count"
3580,write a python function to check if a given string is a palindrome,"def is_palindrome(string):
   return string == string[::-1]"
3581,write a program to print the nth fibonacci number,"n1 = 1
n2 = 1
n = 5
for _ in range(n):
   n1, n2 = n2, n1 + n2
print(n2)"
3582,write a function to return the square of first N numbers,"def get_squares(n):
   return [i*i for i in range(n)]"
3583,write a python function to return only even numbers in a list,"def filter_even(nums):
   return list(filter(lambda num: num % 2 == 0, nums))"
3584,write a python function to return only odd numbers in a list,"def filter_odd(nums):
   return list(filter(lambda num: num % 2 == 1, nums))"
3585,write a python program to calculate the sum of numbers using reduce and print it,"from functools import reduce
nums = [1, 2, 3, 4, 5, 10, 20, 30, 40, 50]
total_sum = reduce(lambda a, b: a + b, nums)
print(f'Sum: {total_sum}')"
3586,write a python program to print unique numbers in a list,"numbers = [1, 2, 2, 3, 4, 4, 5, 6]
unique = set(numbers)
print(f'Unique numbers: {list(unique)}')"
3587,write a python program to count how many times each letter occurs in a string,"string = 'The quick brown fox jumps over the lazy dog'
countmap = {}
for letter in string:
   if letter in countmap:
      countmap[letter] += 1
   else:
      countmap[letter] = 1
print(f'Count of letters: {countmap}')"
3588,write a python function to repeat a given string n times,"def repeat_string(string, frequency):
   return string * frequency"
3589,write a program to capitalize the first letter of every word in a string and print it,"string = 'The quick brown fox jumps over the lazy dog'
print(string.title())"
3590,write a function that merges two dictionaries,"def merge_dictionaries(dict1, dict2):
   return {**dict1, **dict2}"
3591,write a program to merge two lists into a dictionary,"keys = [1, 2, 3]
values = ['aye', 'bee', 'sea']
dictionary = dict(zip(keys, values))"
3592,write a python function that inverts the key and values in a dict and returns it,"def invert_dict(dictionary):
   inverted_dict = {value: key for key, value in dictionary.items()}
   return inverted_dict"
3593,write a python program to print the difference in days between two dates,"from datetime import date
date1 = date(2020, 10, 25)
date2 = date(2020, 12, 25)
print(f'Difference between dates: {(date2 - date1).days}')"
3594,write a python function that returns the weighted average of numbers,"def get_weighted_average(numbers, weightage):
   return sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)"
3595,write a python program to print if year is a leap year or not,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
      if (year % 400) == 0:
         print(""{0} is a leap year"".format(year))
      else:
         print(""{0} is not a leap year"".format(year))
   else:
      print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
3596,write a python program to check and print if a number is prime,"num = 407
if num > 1:
   for i in range(2,num):
      if (num % i) == 0:
         print(num,""is not a prime number"")
         break
   else:
      print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
3597,write a python program to print all prime numbers in a given interval,"lower = 900
upper = 1000
for num in range(lower, upper + 1):
   if num > 1:
      for i in range(2, num):
         if (num % i) == 0:
               break
      else:
         print(num)"
3598,write a python function to return words in a sentence in sorted order,"def get_sorted_words(sentence):
   words = [word for word in sentence.split()]
   words.sort()
   return words"
3599,write a python function to remove all punctuation from a string,"def remove_punctuations(sentence):
   punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
   no_punct = ''
   for char in sentence:
      if char not in punctuations:
         no_punct = no_punct + char
   return no_punct"
3600,write a python function to return the nth fibonacci number,"def fib(n):
   if n <= 1:
      return n
   else:
      return (fib(n-1) + fib(n-2))"
3601,write a python function to return the sum of first n numbers,"def sum_of_nums(n):
   if n <= 1:
      return n
   else:
      return n + sum_of_nums(n-1)"
3602,write a python function to return the factorial of a number,"def fact(n):
   if n == 1:
      return n
   else:
      return n * fact(n-1)"
3603,write a python program to print the factors of a number,"num = 320
for i in range(1, num + 1):
   if num % i == 0:
      print(i)"
3604,write a python function that returns the lcm of two numbers,"def lcm(x, y):
   if x > y:
      greater = x
   else:
      greater = y
   while(True):
      if((greater % x == 0) and (greater % y == 0)):
         lcm = greater
         break
      greater += 1
   return lcm"
3605,write a python function that returns the gcd of two numbers,"def gcd(x, y):
   if x > y:
      smaller = y
   else:
      smaller = x
   for i in range(1, smaller + 1):
      if((x % i == 0) and (y % i == 0)):
         gcd = i
   return gcd"
3606,write a python program to print the ASCII value of a character,"character = 'x'
print(f'The ASCII value of {character} is {ord(character)}')"
3607,write a python program to print the character of an ASCII value,"value = 65
print(f'The ASCII value {value} is of the character {chr(value)}')"
3608,write a python function to print the binary value of a decimal number,"def print_binary(dec):
   print(bin(dec))"
3609,write a python function to print the octal value of a decimal number,"def print_octal(dec):
   print(oct(dec))"
3610,write a python function to print the hexadecimal value of a decimal number,"def print_hexadecimal(dec):
   print(hex(dec))"
3611,write a python program that prints the sum of natural numbers up to a given number,"num = 16
sum = 0
while (num > 0):
   sum += num
   num -= 1
print(f'The sum is {sum}')"
3612,write a python function to return the number of lines in a file,"def count_lines(filename):
   with open(filename, 'r') as f:
      contents = f.read().split('\n')
      return len(contents)"
3613,write a program to print the current date and time,"from datetime import datetime
now = datetime.now()
print(now)"
3614,write a python program to extract the file name and extension of a file,"import os
filename, extension = os.path.splitext('/path/to/some/file.ext')"
3615,write a python program to merge two lists,"odd = [1, 3, 5, 7, 9]
even = [2, 4, 6, 8, 10]
odd.extend(even)"
3616,write a python program to print a random vowel,"import random
vowels = ['a', 'e', 'i', 'o', 'u']
print(random.choice(vowels))"
3617,write a python program to flip a coin 100 times and print number of heads and tails,"import random
heads = 0
tails = 0
for i in range(100):
   if(random.choice([True, False])):
      heads += 1
   else:
      tails += 1
print(f'{heads} heads, {tails} tails')"
3618,write a python program to print common elements in two lists,"list_a = [1, 2, 3, 4, 5, 6, 7]
list_b = [2, 4, 6, 8, 10]
print(f'Common elements: { set(list_a).intersection(set(list_b)) }')"
3619,write a python program to print squares of numbers until 20,"for i in range(20):
   print(i*i)"
3620,write a python program to print the number of uppercase and lowercase letters in a string,"sentence = 'The Quick Brown Fox'
lowercase = 0
uppercase = 0
for c in sentence:
   if c.isupper():
      uppercase += 1
   elif c.islower():
      lowercase += 1
   else:
      pass
print(f'Lowercase: {lowercase}, Uppercase: {uppercase}')"
3621,write a python program to print the number of letters and digits in sentence,"sentence = 'The Quick 123 Fox'
digits = 0
letters = 0
for c in sentence:
   if c.isdigit():
      digits += 1
   elif c.isalpha():
      letters += 1
   else:
      pass
print(f'Digits: {digits}, Letters: {letters}')"
3622,write a python function to print a given string n times,"def printn(string, n):
   print(string * n)"
3623,write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are squares of the key,"square_dict = {}
for i in range(1, 11):
   square_dict[i] = i*i"
3624,write a python class called Person that has a name property,"class Person:
   def __init__(self, name):
      self.name = name"
3625,write a python function that takes two strings as a parameter and prints the shorter one,"def print_shorter(str1, str2):
   if (len(str1) > len(str2)):
      print(str2)
   else:
      print(str1)"
3626,write a program to compute the count of each word in a sentence and print it,"word_freq = {}
line = 'how many how words does this many have'
for word in line.split():
   word_freq[word] = word_freq.get(word, 0) + 1
print(word_freq)"
3627,write a python function that squares every number in a list using a list comprehension and returns the result,"def square_numbers(nums):
   return [i*i for i in nums]"
3628,write a python program that converts a binary number to decimal and prints it,"binary_num = '1010101'
decimal_num = int(binary_num, 2)
print(decimal_num)"
3629,write a python program that converts a octal number to octal and prints it,"octal_num = '17'
decimal_num = int(octal_num, 8)
print(decimal_num)"
3630,write a python program that converts a hexadecimal number to hexadecimal and prints it,"hexadecimal_num = 'FF'
decimal_num = int(hexadecimal_num, 16)
print(decimal_num)"
3631,write a python program that alphabetically sorts the words in a sentence and prints it,"sentence = 'the quick brown fox jumps'
sorted_words = sentence.split(' ')
sorted_words.sort()
print(' '.join(sorted_words))"
3632,write a python program that prints the area of a circle,"import math
radius = 5
print(f'Area: {math.pi * radius * radius}')"
3633,write a python function that returns a dictionary with the area and perimeter of a rectangle,"def calculate_rect_properties(width, height):
   return {
      'perimeter': 2 * (width + height),
      'area': width * height
   }"
3634,write a python program that removes all blank spaces in a sentence and prints it,"sentence = 'the quick brown fox'
print(sentence.replace(' ', ''))"
3635,write a python program that prints all characters at even indexes in a sentence,"sentence = 'the quick brown fox'
print(sentence[::2])"
3636,write a python program that prints every third character in a sentence,"sentence = 'the quick brown fox'
print(sentence[::3])"
3637,write a program to remove odd numbers from a list using list comprehensions,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_odd_nums = [i for i in nums if i % 2 == 0]"
3638,write a program to remove even numbers from a list using list comprehensions,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_even_nums = [i for i in nums if i % 2 == 1]"
3639,write a program to print 5 random numbers between 100 and 200,"import random
print(random.sample(range(100, 200), 5))"
3640,write a program to print 5 even random numbers between 10 and 100,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 0], 5))"
3641,write a program to print 5 odd random numbers between 100 and 200,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 1], 5))"
3642,write a program to print 5 random numbers divisible by 4 between 100 and 200,"import random
print(random.sample([i for i in range(10, 100) if i%4 == 0], 5))"
3643,write a program that adds corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
sum_list = [a+b for (a,b) in zip(list1, list2)]
print(sum_list)"
3644,write a program that subtracts corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
diff_list = [a-b for (a,b) in zip(list1, list2)]
print(diff_list)"
3645,write a program that multiplies corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
prod_list = [a*b for (a,b) in zip(list1, list2)]
print(prod_list)"
3646,write a program that divides corresponding elements in two lists and prints a new list,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
quot_list = [a/b for (a,b) in zip(list1, list2)]
print(quot_list)"
3647,write a python program to print 5 random vowels,"import random
vowels = ['a', 'e', 'i', 'o', 'u']
print([random.choice(vowels) for _ in range(5)])"
3648,write a python program that creates a dictionary whose keys are numbers from 1 to 10 and values are cubes of the key,"cube_dict = {}
for i in range(1, 11):
   cube_dict[i] = i ** 3"
3649,write a program to create a string variable and print the amount of memory it consumes,"import sys
string_var = 'string variable'
print(sys.getsizeof(string_var))"
3650,write a python function that joins strings in a list and returns the result,"def join_string_parts(str_list):
   return "" "".join(str_list)"
3651,write a python program that reverses an integer and prints it,"num = 12345
reversed = int(str(num)[::-1])
print(reversed)"
3652,write a python program that sorts and prints a comma separated list of values,"values = 'one,two,three,four,five'
items = values.split(',')
items.sort()
print(','.join(items))"
3653,write a python program to print unique words in a sentence,"sentence = 'the king is the one'
unique = set(sentence.split(' '))
print(unique)"
3654,write a python program that multiplies a tuple n times and print the result,"my_tuple = (1, 2, 3)
n = 3
print(my_tuple * 3)"
3655,write a python program to multiply three numbers and print the result,"num1 = 2
num2 = 4
num3 = 6
print(num1 * num2 * num3)"
3656,write a python program to print the sum of first n numbers,"n = 10
sum = 0
while n > 0:
   sum += n
   n -= 1
print(sum)"
3657,write a python program to print the factorial of a number,"num = 5
fact = 1
while num > 0:
   fact *= num
   num -= 1
print(fact)"
3658,write a python function to return the factors of a number,"def get_factors(num):
   factors = []
   for i in range(1, num + 1):
      if num % i == 0:
         factors.append(i)
   return factors"
3659,write a python function that returns True if the product of two provided numbers is even,"def is_prod_even(num1, num2):
   prod = num1 * num2
   return not prod % 2"
3660,write a python function that returns True if the sum of two provided numbers is even,"def is_prod_even(num1, num2):
   sum = num1 + num2
   return not sum % 2"
3661,write a python program to print the first 5 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[:5])"
3662,write a python program to print the last 3 items in a list,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[-3:])"
3663,write a python program to print the items in a list apart from the first 4,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[4:])"
3664,write a python function that makes all negative values in a list zero and returns it,"def make_negative_zero(items):
   return [0 if item < 0 else item for item in items]"
3665,write a python program to shuffle the items in a list and print it,"from random import shuffle
mylist = [1, 2, 3, 4, 5]
shuffle(mylist)
print(mylist)"
3666,write a python program that adds the elements of a list to a set and prints the set,"my_set = {1, 2, 3}
my_list = [4, 5, 6]
my_set.update(my_list)
print(my_set)"
3667,write a python program that prints the circumference of a circle,"import math
radius = 10
print(f'Area: {2 * math.pi * radius}')"
3668,write a python program that prints the area of a rectangle,"length = 10
width = 5
print(f'Area: {length * width}')"
3669,write a python program that prints the area of a square,"side = 5
print(f'Area: {side * side}')"
3670,write a python program to create a dictionary with numbers 1 to 5 as keys and the numbers in english as values,"number_dict = {
   1: 'one',
   2: 'two',
   3: 'three',
   4: 'four',
   5: 'five'
}"
3671,write a python program to remove words less than a specified length from a sentence,"sentence = 'this is my sentence and i will write it my way'
minlength = 3
result = [word for word in sentence.split(' ') if len(word) >= minlength]"
3672,write a python program to keep words less than a specified length in a sentence,"sentence = 'this is my sentence and i will write it my way'
maxlength = 3
result = [word for word in sentence.split(' ') if len(word) <= minlength]"
3673,"93
 write a python function that takes a list as an input and converts all numbers to positive numbers and returns the new list","def make_all_positive(nums):
   return [num if num > 0 else -num for num in nums]"
3674,write a python function that takes a list as an input and converts all numbers to negative numbers and returns the new list,"def make_all_negative(nums):
   return [num if num < 0 else -num for num in nums]"
3675,write a python function to return a set of all punctuation used in a string,"def get_punctuations(sentence):
   punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
   used_punctuation = set()
   for char in sentence:
      if char in punctuations:
         used_punctuation.add(char)
   return used_punctuation"
3676,write a python program to print the words in a sentence in reverse order,"sentence = 'the quick brown fox'
words = sentence.split(' ')
words.reverse()
print(' '.join(words))"
3677,write a python program to replace each word in a sentence with the length of the word and print it,"sentence = 'the quick brown fox jumps over the lazy dog'
words = sentence.split(' ')
lengths = [str(len(word)) for word in words]
print(' '.join(lengths))"
3678,write a python program to convert a set to a list,"myset = {1, 2, 4, 7}
mylist = list(myset)"
3679,write a python program to convert a list to a dictionary where the key is the index and the value is the item in the list,"my_list = [1, 8, 1, 2, 2, 9]
my_dict = {key: value for key, value in enumerate(my_list)}"
3680,"1 write a program to get numbers = 1,3,11,42,12,4001","from collections import Iterable
highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
3681,"2 write a program to get numbers = 1,3,11,42,12,4001","highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
3682,3 add 1 to all elements in list python,"lst = [1,2,3]
list(map(lambda x:x+1, lst))"
3683,4 add a string to each element of a list python,"my_list = ['foo', 'fob', 'faz', 'funk']
string = 'bar'
list2 = list(map(lambda orig_string: orig_string + string, my_list))"
3684,"5 add a third dimension matrix dataset python
 or","x = [2D_matrix] # To convert from a 2-D to 3-D
x = [[[value1]]] # To convert from a 1-D to 3-D"
3685,6 python add all values of another list,"a = [1, 2, 3]
b = [4, 5, 6]
a += b"
3686,7 add a value to the start of a list python,"var=7
array = [1,2,3,4,5,6]
array.insert(0,var)"
3687,8 print into lowersase an uppercase sentence in python,"s = ""Kilometer""
print(s.lower())"
3688,9 sort a dictionary,"mydictionary : {1: 1, 7: 2, 4: 2, 3: 1, 8: 1}
sortedDictionary = sorted(mydictionary.keys())"
3689,10 limit decimals to only two decimals in python,"answer = str(round(answer, 2))"
3690,11 print how many keys are in a dictionary python,"a = {'foo':42, 'bar':69}
print(len(a))"
3691,11 access index of a character in a string python,"foo = 'Hello'
foo.find('lo')"
3692,12 python print last element of list,"mylist = [0, 1, 2]
print(myList[-1])"
3693,13 how to add a blank line in python,"print("""")"
3694,14 how to add element at first position in array python,"x = [1,3,4]
a = 2
x.insert(1,a)"
3695,15 how to add extra zeros after decimal in python,"format(2.0, '.6f')
'2.000000'"
3696,16 how to add list numbers in python,"numbers = [1,2,3,4,5,1,4,5] 
Sum = sum(numbers)"
3697,17 split list into lists of equal length python,"[lst[i:i + n] for i in range(0, len(lst), n)]"
3698,18 how to break out of nested loops python,"x_loop_must_break = False
for x in [1, 2, 3]:
    print(f""x is {x}"")
    for y in [1, 2, 3]:
        print(f""y is {y}"")
        if y == 2:
            x_loop_must_break = True
            break
    if x_loop_must_break: break"
3699,19 capitalize first letter in python in list,"my_list = ['apple pie', 'orange jam']
my_list[0].capitalize()"
3700,20 how to check if a list is a subset of another list,"if(all(x in test_list for x in sub_list)): 
    flag = True"
3701,21 write a function to check if string is camelcase pythonpython by Breakable Buffalo on Aug 09 2020 Donate,"def is_camel_case(s):
    return s != s.lower() and s != s.upper() and ""_"" not in s"
3702,22 how to check if string is in byte formate pythin,"isinstance(string, bytes)"
3703,23 how to check nth prime in python,"x=int(input())
n,c=1,0
while(c<x):
    n+=1
    for i in range(2,n+1):
        if(n%i==0):
            break
    if(i==n):
        c=c+1"
3704,24 how to convert fahrenheit to celsius in python,Celsius = (Fahrenheit - 32) * 5.0/9.0
3705,25 print binary of a decimal number,"a=6
print(bin(a))"
3706,26 write a python function to convert from base 2 to base 10 in pythonpython by TheRubberDucky on Nov 06 2020 Donate,"def getBaseTen(binaryVal):
    count = 0
    binaryVal = binaryVal[::-1]
	for i in range(0, len(binaryVal)):
    	if(binaryVal[i] == ""1""):
            count += 2**i
    return count"
3707,27 write a python funtion to execute bash commands,"import subprocess
subprocess.call([""sudo"", ""apt"", ""update""])"
3708,27 write a function to generate and print a random number between 0 and 22,"import random
n = random.randint(0,22)
print(n)"
3709,28 to get a random element from an array in python,"import random
list_ = [1,2,3,4]
random.choice(list_)"
3710,29 print current day in python,"from datetime import date
today = date.today()
print(""Today's date:"", today)"
3711,30 program to count number of cpu cores available,"import os
os.cpu_count()"
3712,30 get rid of all null values in array python,"mylist = [1, 2, 3, '', 4]
mylist = [i for i in mylist if i]"
3713,31 get the most common number in python,"from statistics import mode
mode((1, 2, 4, 4, 5, 4, 4, 2, 3, 8, 4, 4, 4))"
3714,32 print current version of python,"import sys
print(sys.version)"
3715,33 write a python function to flatten nested lists,"from collections import Iterable
def flatten(lis):
    for item in lis:
        if isinstance(item, Iterable) and not isinstance(item, str):
            for x in flatten(item):
                yield x
        else:
            yield item"
3716,34 write a python function to convert a string  into xml,"import xml.etree.ElementTree as ET
root = ET.fromstring(country_data_as_string)"
3717,35 how to open xml file element tree,"import xml.etree.ElementTree as ET
tree = ET.parse('filename.xml') 
tree_root = tree.getroot()"
3718,36 python parse datetime from string,"from datetime import datetime
datetime_object = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')"
3719,37 print list as matrix in python without bracketspython by Bright Butterfly on Jun 14 2020 Donate,"data = [7, 7, 7, 7]
print(*data, sep='')"
3720,38 how to read a specific line from a text file in python,"line = open(""file.txt"", ""r"").readlines()[7]"
3721,39 how to remove integer from string in python,"s = '12abcd405'
result = ''.join([i for i in s if not i.isdigit()])"
3722,40 write a function to return the nth fibonacci in python,"def Fibonacci(n): 
    if n<0: 
        print(""Incorrect input"")
    elif n==1: 
        return 0
    elif n==2: 
        return 1
    else: 
        return Fibonacci(n-1)+Fibonacci(n-2)"
3723,41 how to sort a list in python using lambda,"data = [(""Apples"", 5, ""20""), (""Pears"", 1, ""5""), (""Oranges"", 6, ""10"")]
data.sort(key=lambda x:x[0])"
3724,43 write a to time a python script,"from datetime import datetime
start = datetime.now()
do_something():...
print(datetime.now() - start)"
3725,44 write a  Python function to find intersection of two sorted arrays,"def printIntersection(arr1, arr2, m, n): 
    i, j = 0, 0
    while i < m and j < n: 
        if arr1[i] < arr2[j]: 
            i += 1
        elif arr2[j] < arr1[i]: 
            j+= 1
        else: 
            print(arr2[j]) 
            j += 1
            i += 1
arr1 = [1, 2, 4, 5, 6] 
arr2 = [2, 3, 5, 7] 
m = len(arr1) 
n = len(arr2) 
printIntersection(arr1, arr2, m, n)"
3726,46 write Python Function to print leaders in array,"def printLeaders(arr,size):
    for i in range(0, size):
        for j in range(i+1, size):
            if arr[i]<arr[j]:
                break
        if j == size-1:  
            print(arr[i])
arr=[16, 17, 4, 3, 5, 2] 
printLeaders(arr, len(arr))"
3727,47 write a python function to print lcm of n numbers python,"import math
def LCMofArray(a):
  lcm = a[0]
  for i in range(1,len(a)):
    lcm = lcm*a[i]//math.gcd(lcm, a[i])
  return lcm
arr1 = [1,2,3]
print(""LCM of arr1 elements:"", LCMofArray(arr1))"
3728,48 write a python Program to multiply two matrices and print the result,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]
for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
3729,48 write a python program to merge a list of dictionaires,"result = {}
for d in L:
    result.update(d)"
3730,50 write a python function to find the median on an array of numbers,"def median(arr):
  if len(arr) == 1:
    return arr[0]
  else:
    arr = sorted(arr)
    a = arr[0:round(len(arr)/2)]
    b = arr[len(a):len(arr)]
    if len(arr)%2 == 0:
      return (a[len(a)-1]+b[0])/2
    else:
      return a[len(a)-1]"
3731,51 write a python function to find a missing number in a list of consecutive natural numbers,"def getMissingNo(A): 
    n = len(A) 
    total = (n + 1)*(n + 2)/2
    sum_of_A = sum(A) 
    return total - sum_of_A"
3732,52 write a python program to normalize a list of numbers and print the result,"a = [2,4,10,6,8,4]
amin, amax = min(a), max(a)
for i, val in enumerate(a):
    a[i] = (val-amin) / (amax-amin)
print(a)"
3733,53  write a python program to permutations of a given string in python and print the result,"from itertools import permutations 
import string 
s = ""GEEK""
a = string.ascii_letters 
p = permutations(s) 
d = [] 
for i in list(p): 
    if (i not in d): 
        d.append(i) 
        print(''.join(i))"
3734,54 Write a Python function to check if a number is a perfect square,"def is_perfect_square(n):
    x = n // 2
    y = set([x])
    while x * x != n:
        x = (x + (n // x)) // 2
        if x in y: return False
        y.add(x)
    return True"
3735,55 Write a Python function to check if a number is a power of a given base.,"import math
def isPower (n, base):
    if base == 1 and n != 1:
        return False
    if base == 1 and n == 1:
        return True
    if base == 0 and n != 1:
        return False
    power = int (math.log(n, base) + 0.5)
    return base ** power == n"
3736,57 Write a Python function to find the single number in a list that doesn't occur twice.,"def single_number(arr):
    result = 0
    for i in arr:
        result ^= i
    return result"
3737,58 Write a Python function to find the single element in a list where every element appears three times except for one.,"def single_number(arr):
    ones, twos = 0, 0
    for x in arr:
        ones, twos = (ones ^ x) & ~twos, (ones & x) | (twos & ~x)
    assert twos == 0
    return ones"
3738,59 Write a function program to add the digits of a positive integer repeatedly until the result has a single digit.,"def add_digits(num):
        return (num - 1) % 9 + 1 if num > 0 else 0"
3739,"60 Write a function program to reverse the digits of an integer.
         Remove leading zero in the reversed integer
         string manipulation","def reverse_integer(x):
        sign = -1 if x < 0 else 1
        x *= sign
        while x:
            if x % 10 == 0:
                x /= 10
            else:
                break
        x = str(x)
        lst = list(x)  # list('234') returns ['2', '3', '4']
        lst.reverse()
        x = """".join(lst)
        x = int(x)
        return sign*x"
3740,61 Write a Python function to reverse the bits of an integer (32 bits unsigned).,"def reverse_Bits(n):
        result = 0
        for i in range(32):
            result <<= 1
            result |= n & 1
            n >>= 1
        return result"
3741,62 Write a Python function to check a sequence of numbers is an arithmetic progression or not.,"def is_arithmetic(l):
    delta = l[1] - l[0]
    for index in range(len(l) - 1):
        if not (l[index + 1] - l[index] == delta):
             return False
    return True"
3742,"63 Python Challenges: Check a sequence of numbers is a geometric progression or not
     Calculate ratio
     Check the ratio of the remaining","def is_geometric(li):
    if len(li) <= 1:
        return True
    ratio = li[1]/float(li[0])
    for i in range(1, len(li)):
        if li[i]/float(li[i-1]) != ratio: 
            return False
    return True"
3743,64 Write a Python function to compute the sum of the two reversed numbers and display the sum in reversed form.,"def reverse_sum(n1, n2):
    return int(str(int(str(n1)[::-1]) + int(str(n2)[::-1]))[::-1])"
3744,"65 Write a Python function where you take any positive integer n, if n is even, divide it by 2 to get n / 2. If n is odd, multiply it by 3 and add 1 to obtain 3n + 1. Repeat the process until you reach 1.","def collatz_sequence(x):
    num_seq = [x]
    if x < 1:
       return []
    while x > 1:
       if x % 2 == 0:
         x = x / 2
       else:
         x = 3 * x + 1
       num_seq.append(x)    
    return num_seq"
3745,65 Write a Python function to check if a given string is an anagram of another given string.,"def is_anagram(str1, str2):
    list_str1 = list(str1)
    list_str1.sort()
    list_str2 = list(str2)
    list_str2.sort()
    return (list_str1 == list_str2)"
3746,66 Write a Python function to push all zeros to the end of a list.,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return(x)"
3747,67 Write a Python function to the push the first number to the end of a list.,"def move_last(num_list):
    a = [num_list[0] for i in range(num_list.count(num_list[0]))]
    x = [ i for i in num_list if i != num_list[0]]
    x.extend(a)
    return(x)"
3748,68 Write a Python function to find the length of the last word.,"def length_of_last_word(s):
        words = s.split()
        if len(words) == 0:
            return 0
        return len(words[-1])"
3749,"70 Write a Python function to find the single number which occurs odd numbers and other numbers occur even number.
     Initialize result
     Traverse the array
         XOR","def odd_occurrence(arr):
    result = 0
    for element in arr:
        result = result ^ element
    return result"
3750,71 Write a Python function that takes a string and encode it that the amount of symbols would be represented by integer and the symbol.,"For example, the string ""AAAABBBCCDAAA"" would be encoded as ""4A3B2C1D3A""
def encode_string(str1):
    encoded = """"
    ctr = 1
    last_char = str1[0]
    for i in range(1, len(str1)):
        if last_char == str1[i]:
            ctr += 1
        else:
            encoded += str(ctr) + last_char
            ctr = 0
            last_char = str1[i]
            ctr += 1
    encoded += str(ctr) + last_char
    return encoded"
3751,72 Write a Python function to create a new array such that each element at index i of the new array is the product of all the numbers of a given array of integers except the one at i.,"def product(nums):
    new_nums = []
    for i in nums:
        nums_product = 1
        for j in nums:     
            if j != i:
                nums_product = nums_product * j
        new_nums.append(nums_product)
    return new_nums"
3752,73 Write a python function to find the difference between the sum of the squares of the first two hundred natural numbers and the square of the sum.,"r = range(1, 201)
a = sum(r)
print (a * a - sum(i*i for i in r))"
3753,74 Write a Python function to compute s the sum of the digits of the number 2 to the power 20.,"def digits_sum():
	n = 2**20
	ans = sum(int(c) for c in str(n))
	return str(ans)"
3754,75 Write a Python program to compute the sum of all the multiples of 3 or 5 below 500.,"n = 0
for i in range(1,500):
     if not i % 5 or not i % 3:
         n = n + i
print(n)"
3755,76 Write a Python function to converting an integer to a string in any base.,"def to_string(n,base):
   conver_tString = ""0123456789ABCDEF""
   if n < base:
      return conver_tString[n]
   else:
      return to_string(n//base,base) + conver_tString[n % base"
3756,77 Write a Python function to calculate the geometric sum of n-1.,"def geometric_sum(n):
  if n < 0:
    return 0
  else:
    return 1 / (pow(2, n)) + geometric_sum(n - 1)"
3757,78 Write a Python function to find the greatest common divisor (gcd) of two integers.,"def Recurgcd(a, b):
	low = min(a, b)
	high = max(a, b)
	if low == 0:
		return high
	elif low == 1:
		return 1
	else:
		return Recurgcd(low, high%low)"
3758,"79 Write a program to print which will find all such numbers which are divisible by 7 but are not a multiple of 5,","between 2000 and 3200 (both included).  
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print ','.join(l)"
3759,81 Write a Python program to convert a given Bytearray to Hexadecimal string.,"def bytearray_to_hexadecimal(list_val):
     result = ''.join('{:02x}'.format(x) for x in list_val)  
     return(result)"
3760,82 Write a Python program to count number of substrings with same first and last characters of a given string.,"def no_of_substring_with_equalEnds(str1): 
	result = 0; 
	n = len(str1); 
	for i in range(n): 
		for j in range(i, n): 
			if (str1[i] == str1[j]): 
				result = result + 1
	return result"
3761,83 Write a Python program to move all spaces to the front of a given string in single traversal.,"def moveSpaces(str1): 
    no_spaces = [char for char in str1 if char!=' ']   
    space= len(str1) - len(no_spaces)
    result = ' '*space    
    return result + ''.join(no_spaces)"
3762,84 Write a Python program to find maximum length of consecutive 0’s in a given binary string.,"def max_consecutive_0(input_str): 
     return  max(map(len,input_str.split('1')))
str1 = '111000010000110'
print(""Original string:"" + str1)
print(""Maximum length of consecutive 0’s:"")"
3763,85 Write a Python program that iterate over elements repeating each as many times as its count.,"from collections import Counter
c = Counter(p=4, q=2, r=0, s=-2)
print(list(c.elements()))"
3764,86 Write a Python program to find the second smallest number in a list.,"def second_smallest(numbers):
  if (len(numbers)<2):
    return
  if ((len(numbers)==2)  and (numbers[0] == numbers[1]) ):
    return
  dup_items = set()
  uniq_items = []
  for x in numbers:
    if x not in dup_items:
      uniq_items.append(x)
      dup_items.add(x)
  uniq_items.sort()    
  return  uniq_items[1]"
3765,87 Write a Python function to check whether a list contains a sublist.,"def is_Sublist(l, s):
	sub_set = False
	if s == []:
		sub_set = True
	elif s == l:
		sub_set = True
	elif len(s) > len(l):
		sub_set = False
	else:
		for i in range(len(l)):
			if l[i] == s[0]:
				n = 1
				while (n < len(s)) and (l[i+n] == s[n]):
					n += 1
				if n == len(s):
					sub_set = True
	return sub_set"
3766,86 Write a Python program to generate groups of five consecutive numbers in a list,"l = [[5*i + j for j in range(1,6)] for i in range(5)]
print(l)"
3767,87 Write a Python program to print the list in a list of lists whose sum of elements is the highest.,"print(max(num, key=sum))"
3768,88 Write a Python fuction to print the depth of a dictionary.,"def dict_depth(d):
    if isinstance(d, dict):
        return 1 + (max(map(dict_depth, d.values())) if d else 0)
    return 0
dic = {'a':1, 'b': {'c': {'d': {}}}}
print(dict_depth(dic))"
3769,89 Write a Python function to pack consecutive duplicates of a given list elements into sublists and print the output.,"from itertools import groupby
def pack_consecutive_duplicates(l_nums):
    return [list(group) for key, group in groupby(l_nums)]
n_list = [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ]
print(""Original list:"") 
print(n_list)
print(""\nAfter packing consecutive duplicates of the said list elements into sublists:"")
print(pack_consecutive_duplicates(n_list))"
3770,90 Write a Python function to create a list reflecting the modified run-length encoding from a given list of integers or a given list of characters and print the output.,"from itertools import groupby
def modified_encode(alist):
        def ctr_ele(el):
            if len(el)>1: return [len(el), el[0]]
            else: return el[0]
        return [ctr_ele(list(group)) for key, group in groupby(alist)]
n_list = [1,1,2,3,4,4,5, 1]
print(""Original list:"") 
print(n_list)
print(""\nList reflecting the modified run-length encoding from the said list:"")
print(modified_encode(n_list))"
3771,91 Write a Python function to create a multidimensional list (lists of lists) with zeros and print the output.,"nums = []
for i in range(3):
    nums.append([])
    for j in range(2):
        nums[i].append(0)
print(""Multidimensional list:"")
print(nums)"
3772,92 Write a Python function to read a square matrix from console and print the sum of matrix primary diagonal.Accept the size of the square matrix and elements for each column separated with a space (for every row) as input from the user and print the output.,"size = int(input(""Input the size of the matrix: ""))
matrix = [[0] * size for row in range(0, size)]
for x in range(0, size):
    line = list(map(int, input().split()))
    for y in range(0, size):
        matrix[x][y] = line[y]
matrix_sum_diagonal = sum(matrix[size - i - 1][size - i - 1] for i in range(size))"
3773,93 Write a Python function to check if a nested list is a subset of another nested list and print the output.,"def checkSubset(input_list1, input_list2): 
    return all(map(input_list1.__contains__, input_list2)) 
list1 = [[1, 3], [5, 7], [9, 11], [13, 15, 17]] 
list2 = [[1, 3],[13,15,17]]   
print(""Original list:"")
print(list1)
print(list2)
print(""\nIf the one of the said list is a subset of another.:"")
print(checkSubset(list1, list2))"
3774,94 Write a Python function to print all permutations with given repetition number of characters of a given string and print the output.,"from itertools import product
def all_repeat(str1, rno):
  chars = list(str1)
  results = []
  for c in product(chars, repeat = rno):
    results.append(c)
  return results
print(all_repeat('xyz', 3))"
3775,95 Write a Python function to find the index of a given string at which a given substring starts. If the substring is not found in the given string return 'Not found' and print the output.,"def find_Index(str1, pos):
    if len(pos) > len(str1):
        return 'Not found'
    for i in range(len(str1)):
        for j in range(len(pos)):
            if str1[i + j] == pos[j] and j == len(pos) - 1:
                return i
            elif str1[i + j] != pos[j]:
                break
    return 'Not found"
3776,"96 Write a Python program to find the smallest multiple of the first n numbers. Also, display the factors.","def smallest_multiple(n):
    if (n<=2):
      return n
    i = n * 2
    factors = [number  for number in range(n, 1, -1) if number * 2 > n]
    print(factors)
    while True:
        for a in factors:
            if i % a != 0:
                i += n
                break
            if (a == factors[-1] and i % a == 0):
                return i"
3777,97 Write a Python program to print all permutations of a given string (including duplicates).,"def permute_string(str):
    if len(str) == 0:
        return ['']
    prev_list = permute_string(str[1:len(str)])
    next_list = []
    for i in range(0,len(prev_list)):
        for j in range(0,len(str)):
            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]
            if new_str not in next_list:
                next_list.append(new_str)
    return next_lis"
3778,98 Write a Python program to multiply two integers without using the '*' operator in python.,"def multiply(x, y):
    if y < 0:
        return -multiply(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply(x, y - 1)"
3779,99 Write a Python program to calculate distance between two points using latitude and longitude.,"from math import radians, sin, cos, acos
print(""Input coordinates of two points:"")
slat = radians(float(input(""Starting latitude: "")))
slon = radians(float(input(""Ending longitude: "")))
elat = radians(float(input(""Starting latitude: "")))
elon = radians(float(input(""Ending longitude: "")))
dist = 6371.01 * acos(sin(slat)*sin(elat) + cos(slat)*cos(elat)*cos(slon - elon))
print(""The distance is %.2fkm."" % dist)"
3780,99 Write a Python class to convert a roman numeral to an integer.,"class Solution:
    def roman_to_int(self, s):
        rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        int_val = 0
        for i in range(len(s)):
            if i > 0 and rom_val[s[i]] > rom_val[s[i - 1]]:
                int_val += rom_val[s[i]] - 2 * rom_val[s[i - 1]]
            else:
                int_val += rom_val[s[i]]
        return int_val"
3781,"Implement a function which modifies a list so that each index has a product of all the numbers present in the list except the number stored at that index.
     get product start from left
     get product starting from right","def find_product(lst):
    left = 1
    product = []
    for ele in lst:
        product.append(left)
        left = left * ele
    right = 1
    for i in range(len(lst)-1, -1, -1):
        product[i] = product[i] * right
        right = right * lst[i]
    return product"
3782,write a function to find out the second maximum number in the given list,"def find_second_maximum(lst):
    max = float('-inf')
    sec_max = float('-inf')
    for elem in list:
        if elem > max:
            sec_max = max
            max = elem
        elif elem > sec_max:
            sec_max = elem
    return sec_max"
3783,write a function to right rotate a given list by given input,"def right_rotate(lst, n):
    n = n % len(lst)
    return lst[-n:] + lst[:-n]"
3784,"write a function which rearranges the elements such that all the negative elements appear on the left and positive elements appear at the right of the list. Note that it is not necessary to maintain the sorted order of the input list.
     iterate the list
         if negative number
             if not the last negative number
                 swap the two
             update the last position","def rearrange(lst):
    leftMostPosEle = 0  # index of left most element
    for curr in range(len(lst)):
        if (lst[curr] < 0):
            if (curr is not leftMostPosEle):
                lst[curr], lst[leftMostPosEle] = lst[leftMostPosEle], lst[curr]
            leftMostPosEle += 1
    return lst"
3785,"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)"
3786,"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","s= input()
if s==""yes"" or s==""YES"" or s==""Yes"":
    print(""Yes"")
else:
    print(""No"")"
3787,"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print(evenNumbers)"
3788,"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print(squaredNumbers)"
3789,"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10] and print it","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)"
3790,Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"evenNumbers = filter(lambda x: x%2==0, range(1,21))
print(evenNumbers)"
3791,Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).,"squaredNumbers = map(lambda x: x**2, range(1,21))
print(squaredNumbers)"
3792,Define a class named American which has a static method called printNationality.,"class American(object):
    @staticmethod
    def printNationality():
        print(""America"")
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
3793,Define a class named American and its subclass NewYorker.,"class American(object):
    pass
class NewYorker(American):
    pass"
3794,Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area.,"class Circle(object):
    def __init__(self, r):
        self.radius = r
    def area(self):
        return self.radius**2*3.14"
3795,Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area.,"class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w
    def area(self):
        return self.length*self.width"
3796,Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.,"class Shape(object):
    def __init__(self):
        pass
    def area(self):
        return 0
class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l
    def area(self):
        return self.length*self.length"
3797,Please raise a RuntimeError exception.,raise RuntimeError('something wrong')
3798,Write a function to compute 5/0 and use try/except to catch the exceptions.,"def throws():
    return 5/0
try:
    throws()
except ZeroDivisionError:
    print(""division by zero!"")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')"
3799,Define a custom exception class which takes a string message as attribute.,"class MyError(Exception):
    def __init__(self, msg):
        self.msg = msg"
3800,"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the user name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress = 'bing@google.com'
pat2 = ""(\w+)@((\w+\.)+(com))""
r2 = re.match(pat2,emailAddress)
print(r2.group(1))"
3801,"Assuming that we have some email addresses in the ""username@companyname.com"" format, please write program to print the company name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress = 'bing@google.com'
pat2 = ""(\w+)@(\w+)\.(com)""
r2 = re.match(pat2,emailAddress)
print(r2.group(2))"
3802,Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"import re
s = input()
print(re.findall(""\d+"",s))"
3803,"Print a unicode string ""hello world"".","unicodeString = u""hello world!""
print(unicodeString)"
3804,Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"s = input()
u = unicode( s ,""utf-8"")
print(u)"
3805,Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by input parameters.,"n=int(input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print(sum)"
3806,Write a function to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1 with a given n input by input parameters.,"def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100"
3807,Please write a function to compute the Fibonacci sequence until a given number via input paramters.,"def fibo(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)"
3808,Please write a function using generator to print the even numbers between 0 and n in comma separated form while n is input by console.,"def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1"
3809,Please write a function using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.,"def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i"
3810,"Please write assert statements to verify that every number in the list [2,4,6,8] is even.","li = [2,4,6,8]
for i in li:
    assert i%2==0"
3811,Please write a program which accepts basic mathematic expression from console and print the evaluation result.,"expression = input()
print(eval(expression))"
3812,Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.,"import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1
    return index"
3813,Please write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.,"import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1
    return index"
3814,Please generate a random float where the value is between 10 and 100 using Python math module.,"import random
print(random.random()*100)"
3815,Please generate a random float where the value is between 5 and 95 using Python math module.,"import random
print(random.random()*100-5)"
3816,Please write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print(random.choice([i for i in range(11) if i%2==0]))"
3817,"Please write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension","import random
print(random.choice([i for i in range(201) if i%5==0 and i%7==0]))"
3818,Please write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print(random.sample(range(100), 5))"
3819,Please write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))"
3820,"Please write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))"
3821,Please write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print(random.randrange(7,16))"
3822,"Please write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","import zlib
s = b'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print(t)
print(zlib.decompress(t))"
3823,"Please write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t = Timer(""for i in range(100):1+1"")
print(t.timeit())"
3824,"Please write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)"
3825,"Please write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3,6,7,8]
shuffle(li)
print(li)"
3826,"Please write a program to generate all sentences where subject is in [""I"", ""You""] and verb is in [""Play"", ""Love""] and the object is in [""Hockey"",""Football""].","subjects=[""I"", ""You""]
verbs=[""Play"", ""Love""]
objects=[""Hockey"",""Football""]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = ""%s %s %s."" % (subjects[i], verbs[j], objects[k])
            print(sentence)"
3827,"Please write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)"
3828,"By using list comprehension, please write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print(li)"
3829,"By using list comprehension, please write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)"
3830,"By using list comprehension, please write a program generate a 3*5*8 3D array whose each element is 0.","array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)"
3831,"By using list comprehension, please write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)"
3832,"By using list comprehension, please write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)"
3833,"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print(li)"
3834,"With a given list [12,24,35,24,88,120,155,88,120,155], write a program to print this list after removing all duplicate values with original order reserved.","def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)
    return newli"
3835,"Define a class Person and its two child classes: Male and Female. All classes have a method ""getGender"" which can print ""Male"" for Male class and ""Female"" for Female class.","class Person(object):
    def getGender( self ):
        return ""Unknown""
class Male( Person ):
    def getGender( self ):
        return ""Male""
class Female( Person ):
    def getGender( self ):
        return ""Female"""
3836,Please write a program which count and print the numbers of each character in a string input by console.,"dic = {}
s=input()
for s in s:
    dic[s] = dic.get(s,0)+1
print('\n'.join(['%s,%s' % (k, v) for k, v in dic.items()]))"
3837,Please write a program which accepts a string from console and print it in reverse order.,"s=input()
s = s[::-1]
print(s)"
3838,Please write a program which accepts a string from console and print the characters that have even indexes.,"s=input()
s = s[::2]
print(s)"
3839,"Please write a program which prints all permutations of [1,2,3]","import itertools
print(list(itertools.permutations([1,2,3])))"
3840,Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve(numheads,numlegs):
    ns='No solutions!'
    for i in range(numheads+1):
        j=numheads-i
        if 2*i+4*j==numlegs:
            return i,j
    return ns,ns"
3841,"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included).
 The numbers obtained should be printed in a comma-separated sequence on a single line.","l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print(','.join(l))"
3842,"Write a function which can compute the factorial of a given numbers.
 The results should be printed in a comma-separated sequence on a single line.","def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)
x=int(input())
print(fact(x))"
3843,"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n=int(input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i
print(d)"
3844,Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values=input()
l=values.split("","")
t=tuple(l)
print(l)
print(t)"
3845,Define a class which has at least two methods:,"class InputOutString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = input()
    def printString(self):
        print(self.s.upper())
strObj = InputOutString()
strObj.getString()
strObj.printString()"
3846,"Write a program that calculates and prints the value according to the given formula:
 Q = Square root of [(2 * C * D)/H]
 Following are the fixed values of C and H:
 C is 50. H is 30.
 D is the variable whose values should be input to your program in a comma-separated sequence.","import math
c=50
h=30
value = []
items=[x for x in input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))
print(','.join(value))"
3847,"Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.","input_str = input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]
for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col
print(multilist)"
3848,Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"items=[x for x in input().split(',')]
items.sort()
print(','.join(items))"
3849,Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,"lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;
for sentence in lines:
    print(sentence)"
3850,Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"s = input()
words = [word for word in s.split("" "")]
print("" "".join(sorted(list(set(words)))))"
3851,Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"value = []
items=[x for x in input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)
print(','.join(value))"
3852,"Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.","values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print("","".join(values))"
3853,Write a program that accepts a sentence and calculate the number of letters and digits.,"s = input()
d={""DIGITS"":0, ""LETTERS"":0}
for c in s:
    if c.isdigit():
        d[""DIGITS""]+=1
    elif c.isalpha():
        d[""LETTERS""]+=1
    else:
        pass
print(""LETTERS"", d[""LETTERS""])
print(""DIGITS"", d[""DIGITS""])"
3854,Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.,"s = input()
d={""UPPER CASE"":0, ""LOWER CASE"":0}
for c in s:
    if c.isupper():
        d[""UPPER CASE""]+=1
    elif c.islower():
        d[""LOWER CASE""]+=1
    else:
        pass
print(""UPPER CASE"", d[""UPPER CASE""])
print(""LOWER CASE"", d[""LOWER CASE""])"
3855,Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.,"a = input()
n1 = int( ""%s"" % a )
n2 = int( ""%s%s"" % (a,a) )
n3 = int( ""%s%s%s"" % (a,a,a) )
n4 = int( ""%s%s%s%s"" % (a,a,a,a) )
print(n1+n2+n3+n4)"
3856,Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.,"values = input()
numbers = [x for x in values.split("","") if int(x)%2!=0]
print("","".join(numbers))"
3857,"Write a function with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.","def putNumbers(n):
    i = 0
    while i<n:
        j=i
        i=i+1
        if j%7==0:
            yield j
for i in reverse(100):
    print(i)"
3858,Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically.,"freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1
words = freq.keys()
words.sort()
for w in words:
    print(""%s:%d"" % (w,freq[w]))"
3859,Write a method which can calculate and return square value of number,"def square(num):
    return num ** 2"
3860,Please write a program to print Python built-in functions document of abs(),print(abs.__doc__)
3861,Please write a program to print Python built-in functions document of int(),print(int.__doc__)
3862,Please write a program to print Python built-in functions document of input(),print(input.__doc__)
3863,"Define a class, which has a class parameter and have a same instance parameter.","class Person:
    name = ""Person""
    def __init__(self, name = None):
        self.name = name"
3864,Define a function which can compute the sum of two numbers.,"def sum_nums(number1, number2):
	return number1+number2"
3865,Define a function that can convert a integer into a string and print it in console.,"def convert_to_str(n):
    print(str(n))"
3866,Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"def sum_of_ints(s1,s2):
    print(int(s1)+int(s2))"
3867,Define a function that can accept two strings as input and concatenate them and then print it in console.,"def add(s1,s2):
    print(s1+s2)"
3868,"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","def max_len_str(s1,s2):
    len1 = len(s1)
    len2 = len(s2)
    if len1>len2:
        print(s1)
    elif len2>len1:
        print(s2)
    else:
        print(s1)
        print(s2)"
3869,"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","def even_or_odd_num(n):
    if n%2 == 0:
        print(""It is an even number"")
    else:
        print(""It is an odd number"")"
3870,Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,"def print_dict_keys_val_1():
    d=dict()
    d[1]=1
    d[2]=2**2
    d[3]=3**2
    print(d)"
3871,Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"def print_dict_keys_val_2():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)"
3872,Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"def print_dict_keys_val_3():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():	
		print(v)"
3873,Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"def print_dict_keys_val_4():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():	
		print(k)"
3874,Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li)"
3875,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[:5])"
3876,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[-5:])"
3877,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])"
3878,Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(tuple(li))"
3879,write a python function to check if the user provided string is palindrome or not a palindrome,"def ifPalindrome(inVar):
    revInvar = []
    for _ in range((len(inVar)-1), -1, -1):
        revInvar.append(inVar[_])
    if revInvar == inVar:
        return ""Palindrome""
    else:
        return ""Not a palindrome"""
3880,write a python function to Calculate the date of n days from the given date.,"from datetime import datetime, timedelta
def add_days(n, d = datetime.today()):
  return d + timedelta(n)"
3881,write a python function to check if all elements in a list are equal.,"def all_equal(lst):
  return len(set(lst)) == 1"
3882,write a python function to check if all elements in a list are unique.,"def all_unique(lst):
  return len(lst) == len(set(lst))"
3883,write a python function to find the average of two or more numbers and return the average,"def average(*args):
  return sum(args, 0.0) / len(args)"
3884,write a python function to convert a user provided string to camelcase,"from re import sub
def camel(s):
  s = sub(r""(_|-)+"", "" "", s).title().replace("" "", """")
  return ''.join([s[0].lower(), s[1:]])"
3885,write a python function to capitalize the first letter of a string,"def capitalize(s, lower_rest = False):
  return ''.join([s[:1].upper(), (s[1:].lower() if lower_rest else s[1:])])"
3886,write a python function to convert Celsius to Fahrenheit.,"def celsius_to_fahrenheit(degrees):
  return ((degrees * 1.8) + 32)"
3887,write a python function to convert a given string into a list of words.,"import re
def words(s, pattern = '[a-zA-Z-]+'):
  return re.findall(pattern, s)"
3888,write a python function thats returns a flat list of all the values in a flat dictionary,"def values_only(flat_dict):
  return list(flat_dict.values())"
3889,write a python function thats accepts a list and returns most frequent element that appears in a list,"def most_frequent(list):
    return max(set(list), key = list.count)"
3890,write a python program to create multiplication table of 5,"n=5
for i in range(1,11):
   print(n,'x',i,'=',n*i)"
3891,write a python function to create multiplication table from the user provided number,"def multiplication_table(n):
  for i in range(1,11):
    print(n,'x',i,'=',n*i)"
3892,write a python program to print a dictionary where the keys are numbers between 1 and 10 (both included) and the values are square of keys.,"d=dict()
for x in range(1,11):
    d[x]=x**2
print(d)"
3893,write a python program to sort a list of tuples using Lambda.,"marks = [('Computer Science', 88), ('Physics', 90), ('Maths', 97), ('Chemistry', 82)]
print(""Original list of tuples:"")
print(marks)
marks.sort(key = lambda x: x[1])
print(""\nSorting the List of Tuples:"")
print(marks)"
3894,write a python function to calculate the median of user provided list of numbers,"def median(list):
  list.sort()
  list_length = len(list)
  if list_length % 2 == 0:
    return (list[int(list_length / 2) - 1] + list[int(list_length / 2)]) / 2
  return float(list[int(list_length / 2)])"
3895,write a Python program to calculate simple interest,"p = 10000
t = 6
r = 8
si = (p * t * r)/100
print(f'Simple interest is {si}')"
3896,write a python program to check if year is a leap year or not,"year = 2004
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(f""{year} is a leap year"")
       else:
           print(f""{year} is not a leap year"")
   else:
      print(f""{year} is a leap year"")
else:
   print(f""{year} is not a leap year"")"
3897,Write a python function to check if user provided year is a leap year or not,"def is_leap(year):
  if (year % 4) == 0:
    if (year % 100) == 0:
        if (year % 400) == 0:
            print(f""{year} is a leap year"")
        else:
            print(f""{year} is not a leap year"")
    else:
        print(f""{year} is a leap year"")
  else:
    print(f""{year} is not a leap year"")"
3898,write a python Program to find area of circle,"PI = 3.14
radius = float(6)
area = PI * radius * radius
circumference = 2 * PI * radius
print(f'Area Of a Circle {area}')
print(f'Circumference Of a Circle {circumference}')"
3899,write a python function to find the area of a circle using the user provided radius,"def area_of_circle(radius):
  PI = 3.14
  radius = float(radius)
  area = PI * radius * radius
  circumference = 2 * PI * radius
  print(f'Area Of a Circle {area}')
  print(f'Circumference Of a Circle {circumference}')"
3900,write a python function to find the area of a circle using the user provided circumference,"def area_of_circle(circumference):
  circumference = float(circumference)
  PI = 3.14
  area = (circumference * circumference)/(4 * PI)
  print(f'Area Of a Circle {area}')"
3901,write a python function to find the area of a circle using the user provided diameter,"def area_of_circle(diameter):
  PI = 3.14
  area = (PI/4) * (diameter * diameter)
  print(f'Area Of a Circle {area}')"
3902,write a python function to generate 4 digit OTP,"import math, random 
def generateOTP() : 
    digits = ""0123456789""
    OTP = """" 
    for i in range(4) : 
        OTP += digits[math.floor(random.random() * 10)] 
    return OTP"
3903,write a python function to generate 6 digit OTP,"import math, random 
def generateOTP() :  
    digits = ""0123456789""
    OTP = """" 
    for i in range(6) : 
        OTP += digits[math.floor(random.random() * 10)]  
    return OTP"
3904,write a python program to calculate distance between tao points,"import math
p1 = [4, 0]
p2 = [6, 6]
distance = math.sqrt( ((p1[0]-p2[0])**2)+((p1[1]-p2[1])**2) )
print(f""The distance between {p1} and {p2} is {distance}"")"
3905,write a python function to calculate compound interest,"def compound_interest(principle, rate, time): 
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    print(f""Compound interest is {CI}"")"
3906,write a python function to convert hours to minutes,"def convert_to_minutes(num_hours):
    minutes = num_hours * 60
    return minutes"
3907,write a python function to convert hours to seconds,"def convert_to_seconds(num_hours):
    minutes = num_hours * 60
    seconds = minutes * 60
    return seconds"
3908,write a python function to remove vowels from a string,"def vowel_remover(text):
    string = """"
    for l in text:
        if l.lower() != ""a"" and l.lower() != ""e"" and l.lower() != ""i"" and l.lower() != ""o"" and l.lower() != ""u"":
            string += l
    return string"
3909,write a python program to print all integers that aren’t divisible by either 2 or 3 and lies between 1 and 50.,"for i in range(0,50):
  if((i%2!=0) & (i%3!=0)):
      print(i)"
3910,write a python function to print odd numbers between user provided ranges,"def odd_numbers(lower,upper):
  for i in range(lower,upper+1):
    if(i%2!=0):
        print(i)"
3911,"write a python program to find sum of natural numbers up to a 16
    use while loop to iterate until zero","num = 16
if num < 0:
   print(""Enter a positive number"")
else:
   sum = 0
   while(num > 0):
       sum += num
       num -= 1
   print(""The sum is"", sum)"
3912,write a python program to remove punctuations from a string,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, she said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char"
3913,write a python function to find the resolution on the user provided image,"def jpeg_res(filename):
   with open(filename,'rb') as img_file:
       img_file.seek(163)
       a = img_file.read(2)
       height = (a[0] << 8) + a[1]
       a = img_file.read(2)
       width = (a[0] << 8) + a[1]
   print(f""The resolution of the image is {width}x{height}"")"
3914,write a python program to count the number of each vowels in a given text,"vowels = 'aeiou'
text = 'Hello, have you tried our tutorial section yet?'
text = text.casefold()
count = {}.fromkeys(vowels,0)
for char in text:
   if char in count:
       count[char] += 1
print(count)"
3915,write a python function to check if a key exists in a dictionary,"d = {'key1': 'value1', 'key2': 'value2', 'key3': 'value3', 'key4': 'value4'}
def is_key_present(x):
  if x in d:
      print('Key is present in the dictionary')
  else:
      print('Key is not present in the dictionary')"
3916,write a python program to check if the list is empty,"l = []
if not l:
  print(""List is empty"")
else:
  print(""List is not empty"")"
3917,write a python program to get index values for a list in the form of key:value pair using enumerate,"my_list = ['a', 'b', 'c', 'd', 'e']
for index, value in enumerate(my_list):
    print('{0}: {1}'.format(index, value))"
3918,write a python program to merge two dictionaries,"dict_1 = {'apple': 9, 'banana': 6}
dict_2 = {'banana': 4, 'orange': 8}
combined_dict = {**dict_1, **dict_2}
print(combined_dict)"
3919,write a python function to check if all elements in a list are unique or not,"def unique(l):
    if len(l)==len(set(l)):
        print(""All elements are unique"")
    else:
        print(""List has duplicates"")"
3920,write a python function to validate the email,"import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'      
def check(email):  
    if(re.search(regex,email)):  
        print(""Valid Email"")         
    else:  
        print(""Invalid Email"")"
3921,write a python function to calculate the age with the user provided date of birth,"from datetime import date
def calculate_age(dtob):
    today = date.today()
    return today.year - dtob.year - ((today.month, today.day) < (dtob.month, dtob.day))"
3922,write a python function to check if a user provided number is a perfect square.,"def is_perfect_square(n):
    x = n // 2
    y = set([x])
    while x * x != n:
        x = (x + (n // x)) // 2
        if x in y: return False
        y.add(x)
    return True"
3923,write a python function that removes element from a list using a user provided number,"def drop(a, n = 1):
  return a[n:]"
3924,write a program function to check if given words appear together in a list of sentence,"def check(sentence, words): 
    res = [all([k in s for k in words]) for s in sentence] 
    return [sentence[i] for i in range(0, len(res)) if res[i]]"
3925,write a python program  to convert list of tuples into list,"lt = [('English', 2), ('Maths', 4), ('Science', '6')] 
out = [item for t in lt for item in t]  
print(out)"
3926,write a python program to count the number of words in a sentence,"test_string = ""This is a good book""
res = len(test_string.split()) 
print (f""The number of words in string are :{str(res)}"")"
3927,write a python function to count the occurrences of a value in a list.,"def count_occurrences(lst, val):
  return lst.count(val)"
3928,write a python function to return the length of user provided string in bytes,"def byte_size(s):
  return len(s.encode('utf-8'))"
3929,write a python function to calculate the greatest common divisor (GCD) of two user provided positive integers.,"def gcd(num1, num2):
    gcd = 1  
    if num1 % num2 == 0:
        return num2
    for k in range(int(num2 / 2), 0, -1):
        if num1 % k == 0 and num2 % k == 0:
            gcd = k
            break  
    return gcd"
3930,write a python function to calculate the least common multiple (LCM) of two user provided positive integers.,"def lcm(num1, num2):
   if num1 > num2:
       z = num1
   else:
       z = num2
   while(True):
       if((z % num1 == 0) and (z % num2 == 0)):
           lcm = z
           break
       z += 1
   return lcm"
3931,write a python program to split the string into chunks of size 3,"str = 'CarBadBoxNumKeyValRayCppSan'
n = 3
chunks = [str[i:i+n] for i in range(0, len(str), n)]
print(chunks)"
3932,write a python function to read first n lines from a file,"def file_read_from_head(fname, nlines):
    from itertools import islice
    with open(fname) as f:
      for line in islice(f, nlines):
        print(line)"
3933,write a python program to check whether a person is eligible to vote or not,"age=23
if age>=18:
        status=""Eligible""
else:
    status=""Not Eligible""
print(""You are "",status,"" for Vote."")"
3934,"write a python program to check if a number is positive, negative or zero.","num = 5
if num > 0:
   print(""It is positive number"")
elif num == 0:
   print(""It is Zero"")
else:
   print(""It is a negative number"")"
3935,write a python program to get numbers divisible by fifteen from a list,"num_list = [45, 55, 60, 37, 100, 105, 220]
result = list(filter(lambda x: (x % 15 == 0), num_list))
print(f""Numbers divisible by 15 are {result}"")"
3936,write a python function to append text to a user provided file,"def file_read(fname):
    with open(fname, ""w"") as myfile:
      myfile.write(""Appending line one\n"")
      myfile.write(""Appending line two"")
      txt = open(fname)
      print(txt.read())"
3937,write a python function to pad a user provided number to specified length,"def pad_number(n, l):
  return str(n).zfill(l)"
3938,write a python function to convert a user provided list of dictionaries into a list of values corresponding to the user specified key,"def pluck(lst, key):
  return [x.get(key) for x in lst]"
3939,write a python function to convert the values of RGB components to a hexadecimal color code.,"def rgb_to_hex(r, g, b):
  return ('{:02X}' * 3).format(r, g, b)"
3940,write a python function to reverse a user provided list or string,"def reverse(itr):
  return itr[::-1]"
3941,write a python function to convert an angle from radians to degrees.,"def rads_to_degrees(rad):
  return (rad * 180.0) / 3.14"
3942,write a python function that returns a list of elements that exist in both user provided lists.,"def similarity(a, b):
  return [item for item in a if item in b]"
3943,write a python function that converts a user provided string to snake case,"from re import sub
def snake(s):
  return '_'.join(
    sub('([A-Z][a-z]+)', r' \1',
    sub('([A-Z]+)', r' \1',
    s.replace('-', ' '))).split()).lower()"
3944,write a python function that sorts a list based on the user provided list of indexes.,"def sort_by_indexes(lst, indexes, reverse=False):
  return [val for (_, val) in sorted(zip(indexes, lst), key=lambda x: \
          x[0], reverse=reverse)]"
3945,write a python function to sort the dictionary by key,"def sort_dict_by_key(d, reverse = False):
  return dict(sorted(d.items(), reverse = reverse))"
3946,write a python function to sort the dictionary by values,"def sort_dict_by_value(d, reverse = False):
  return dict(sorted(d.items(), key = lambda x: x[1], reverse = reverse))"
3947,write a python function to capitalize first letter of a string,"def capitalize(s, lower_rest = False):
  return ''.join([s[:1].upper(), (s[1:].lower() if lower_rest else s[1:])])"
3948,write a python function that chunks a list into smaller lists of a specified size,"from math import ceil
def chunk(lst, size):
  return list(
    map(lambda x: lst[x * size:x * size + size],
      list(range(ceil(len(lst) / size)))))"
3949,write a python function to calculate a sigmoid value for any user provided real numbers,"def sigmoid(x):
  return 1 / (1 + math.exp(-x))"
3950,write a python program to count the number of lines in a text file,"!touch abc.txt
file = open(""abc.txt"",""r"") 
Counter = 0
Content = file.read() 
CoList = Content.split(""\n"")  
for i in CoList: 
    if i: 
        Counter += 1          
print(f""There are {Counter} number of lines in the file"")"
3951,write a python program to count the number of lower case in a string,"string=""This is a very good place to Visit""
count=0
for i in string:
      if(i.islower()):
            count=count+1
print(f""The number of lowercase characters is:{count}"")"
3952,write a python program to find the sequences of one upper case letter followed by lower case letters.,"import re
text=""Albert""
patterns = '[A-Z]+[a-z]+$'
if re.search(patterns, text):
  print('Found a match!')
else:
  print('Not matched!')"
3953,write a python program to find the number of files in a directory,"import os
dir='.'
list = os.listdir(dir) 
number_files = len(list)
print(f'There are {number_files} file in the directory')"
3954,write a python function to clamp a number within a user specified range,"def clamp_number(num, a, b):
  return max(min(num, max(a, b)), min(a, b))"
3955,write a python function that returns every nth element in a list,"def every_nth(lst, nth):
  return lst[nth - 1::nth]"
3956,write a python function that returns first element of a list,"def head(lst):
  return lst[0]"
3957,write a python function to check if two lists contains same elements regardless of order,"def have_same_contents(a, b):
  for v in set(a + b):
    if a.count(v) != b.count(v):
      return False
  return True"
3958,write a python function to rotate the given list by n times toward left,"def rotate(lst, offset):
  return lst[offset:] + lst[:offset]"
3959,write a python function to transpose a user provided two dimensional list,"def transpose(lst):
  return list(zip(*lst))"
3960,write a python function to convert a user provided date to iso representation,"from datetime import datetime
def to_iso_date(d):
  return d.isoformat()"
3961,write a python function to convert an integer to its roman numeral representation,"def to_roman_numeral(num):
  lookup = [
    (1000, 'M'),
    (900, 'CM'),
    (500, 'D'),
    (400, 'CD'),
    (100, 'C'),
    (90, 'XC'),
    (50, 'L'),
    (40, 'XL'),
    (10, 'X'),
    (9, 'IX'),
    (5, 'V'),
    (4, 'IV'),
    (1, 'I'),
  ]
  res = ''
  for (n, roman) in lookup:
    (d, num) = divmod(num, n)
    res += roman * d
  return res"
3962,write a python function that returns binary representation of given number,"def to_binary(n):
  return bin(n)"
3963,write a python function to calculate weighted average of two or more numbers,"def weighted_average(nums, weights):
  return sum(x * y for x, y in zip(nums, weights)) / sum(weights)"
3964,write a python program to filter out non-empty rows of a matrix,"test_list = [[4, 5, 6, 7], [], [], [9, 8, 1], []] 
print(f""The original list is :{test_list} "") 
res = [row for row in test_list if len(row) > 0]
print(f""Filtered Matrix {res}"")"
3965,write a python program to print prime factors of user provided number,"import math 
def primeFactors(n): 
	while n % 2 == 0: 
		print(2), 
		n = n / 2
	for i in range(3,int(math.sqrt(n))+1,2): 
		while n % i== 0: 
			print(i), 
			n = n / i 
	if n > 2: 
		print(n)"
3966,write a python function to return sum of the powers between two numbers,"def sum_of_powers(end, power = 2, start = 1):
  return sum([(i) ** power for i in range(start, end + 1)])"
3967,write a python function to implement odd-even sort,"def oddEvenSort(arr, n): 
	isSorted = 0
	while isSorted == 0: 
		isSorted = 1
		temp = 0
		for i in range(1, n-1, 2): 
			if arr[i] > arr[i+1]: 
				arr[i], arr[i+1] = arr[i+1], arr[i] 
				isSorted = 0
		for i in range(0, n-1, 2): 
			if arr[i] > arr[i+1]: 
				arr[i], arr[i+1] = arr[i+1], arr[i] 
				isSorted = 0	
	return"
3968,write a python program to find the smallest multiple of the first n numbers.,"def smallest_multiple(n):
    if (n<=2):
      return n
    i = n * 2
    factors = [number  for number in range(n, 1, -1) if number * 2 > n]
    print(factors)
    while True:
        for a in factors:
            if i % a != 0:
                i += n
                break
            if (a == factors[-1] and i % a == 0):
                return i"
3969,write a python program to generate random float numbers in a specific numerical range.,"import random
for x in range(6):
    print('{:04.3f}'.format(random.uniform(x, 100)), end=' ')"
3970,write a python program to drop microseconds from datetime.,"import datetime
dt = datetime.datetime.today().replace(microsecond=0)
dt"
3971,write a python program to convert unix timestamp string to readable date.,"import datetime
unix_timestamp=""1284105682""
print(
    datetime.datetime.fromtimestamp(
        int(unix_timestamp)
    ).strftime('%Y-%m-%d %H:%M:%S')
)"
3972,"write a python program to add two matrices
    iterate through columns","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
3973,write a python program to multiply two matrices,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]
for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
3974,write a python function to calculate the day difference between two user provided dates,"def days_diff(start, end):
  return (end - start).days"
3975,write a python function to decapitalize the first letter of user provided string.,"def decapitalize(s, upper_rest = False):
  return ''.join([s[:1].lower(), (s[1:].upper() if upper_rest else s[1:])])"
3976,write a python program to reverse user provided number,"n = 4562; 
rev = 0
while(n > 0): 
    a = n % 10
    rev = rev * 10 + a 
    n = n // 10   
print(rev)"
3977,-*- coding: utf-8 -*-,"""""""Python Assignment Codes.ipynb
Automatically generated by Colaboratory.
Original file is located at
    https://colab.research.google.com/github/piyushjain220/TSAI/blob/main/NLP/Session8/Python_Assignment_Codes.ipynb
"""""""
3978,"Given an array of integers, return indices of the two numbers such that they add up to a specific target.","input_array = [2, 7, 11, 15]
target = 26
result = []
for i, num in enumerate(input_array):
    for j in range(i+1, len(input_array)):
        print(i,j)"
3979,"Given a sorted integer array without duplicates, return the summary of its ranges.","input_array = [0,1,2,4,5,7]
start=0
result = []
while start < len(input_array):
    end = start 
    while end+1<len(input_array) and ((input_array[end+1] - input_array[end]) == 1):
        end = end + 1
    if end!=start:
        result.append(""{0}-->{1}"".format(input_array[start], input_array[end]))
        print(result)
    else:
        result.append(""{0}"".format(input_array[start]))
        print(result)
    start = end+1
print(result)"
3980,Rotate an array of n elements to the right by k steps.,"org = [1,2,3,4,5,6,7]
result = org[:]
steps = 3
for idx,num in enumerate(org):
    if idx+steps < len(org):
        result[idx+steps] = org[idx]
    else:
        result[idx+steps-len(org)] = org[idx]
print(result)"
3981,"Consider an array of non-negative integers. A second array is formed by shuffling the elements of the first array and deleting a random element. Given these two arrays, find which element is missing in the second array.","first_array = [1,2,3,4,5,6,7]
second_array = [3,7,2,1,4,6]
def finder(first_array, second_array):
    return(sum(first_array) - sum(second_array))
missing_number = finder(first_array, second_array)
print(missing_number)"
3982,"Given a collection of intervals which are already sorted by start number, merge all overlapping intervals.","org_intervals = [[1,3],[2,6],[5,10],[11,16],[15,18],[19,22]]
i = 0
while i < len(org_intervals)-1:
    if org_intervals[i+1][0] < org_intervals[i][1]:
        org_intervals[i][1]=org_intervals[i+1][1]
        del org_intervals[i+1]
        i = i - 1
    i = i + 1
print(org_intervals)"
3983,Given a list slice it into a 3 equal chunks and revert each list,"sampleList = [11, 45, 8, 23, 14, 12, 78, 45, 89]
length = len(sampleList)
chunkSize  = int(length/3)
start = 0
end = chunkSize
for i in range(1, 4, 1):
  indexes = slice(start, end, 1)
  listChunk = sampleList[indexes]
  mylist = [i for i in listChunk]
  print(""After reversing it "", mylist)
  start = end
  if(i != 2):
    end +=chunkSize
  else:
    end += length - chunkSize"
3984,write a program to calculate exponents of an input,"input = 9
exponent = 2
final = pow(input, exponent)
print(f'Exponent Value is:{final}')"
3985,"write a program to multiply two Matrix 
 3x3 matrix
 3x4 matrix
 result is 3x4","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
3986,"iterate through rows of X
    iterate through columns of Y
        iterate through rows of Y","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
print(f""Final Result is{result}"")"
3987,write a program to find and print the remainder of two number,"num1 = 12
num2 = 10
ratio = num1 % num2
print(f'remainder:{ratio}')"
3988,reverse a number in Python,"number = 1367891
revs_number = 0  
while (number > 0):
  remainder = number % 10
  revs_number = (revs_number * 10) + remainder
  number = number // 10
print(""The reverse number is : {}"".format(revs_number))"
3989,Python program to compute sum of digits in number,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
3990,Find the middle element of a random number list,"my_list = [4,3,2,9,10,44,1]
print(""mid value is "",my_list[int(len(my_list)/2)])"
3991,Sort the list in ascending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort()
print(f""Ascending Order list:,{my_list}"")"
3992,Sort the list in descending order,"my_list = [4,3,2,9,10,44,1]
my_list.sort(reverse=True)
print(f""Descending Order list:,{my_list}"")"
3993,Concatenation of two List,"my_list1 = [4,3,2,9,10,44,1]
my_list2 = [5,6,2,8,15,14,12]
print(f""Sum of two list:,{my_list1+my_list2}"")"
3994,Removes the item at the given index from the list and returns the removed item,"my_list1 = [4,3,2,9,10,44,1,9,12]
index = 4
print(f""Sum of two list:,{my_list1.pop(index)}"")"
3995,Adding Element to a List,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
3996,Returns the number of times the specified element appears in the list,"vowels = ['a', 'e', 'i', 'o', 'i', 'u']
count = vowels.count('i')
print('The count of i is:', count)"
3997,Count Tuple Elements Inside List,"random = ['a', ('a', 'b'), ('a', 'b'), [3, 4]]
count = random.count(('a', 'b'))
print(""The count of ('a', 'b') is:"", count)"
3998,Removes all items from the list,"list = [{1, 2}, ('a'), ['1.1', '2.2']]
list.clear()
print('List:', list)"
3999,access first characters in a string,"word = ""Hello World""
letter=word[0]
print(f""First Charecter in String:{letter}"")"
4000,access Last characters in a string,"word = ""Hello World""
letter=word[-1]
print(f""First Charecter in String:{letter}"")"
4001,Generate a list by list comprehension,"list = [x for x in range(10)]
print(f""List Generated by list comprehension:{list}"")"
4002,Sort the string list alphabetically,"thislist = [""orange"", ""mango"", ""kiwi"", ""pineapple"", ""banana""]
thislist.sort()
print(f""Sorted List:{thislist}"")"
4003,Join Two Sets,"set1 = {""a"", ""b"" , ""c""}
set2 = {1, 2, 3}
set3 = set2.union(set1)
print(f""Joined Set:{set3}"")"
4004,keep only the items that are present in both sets,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.intersection_update(y)
print(f""Duplicate Value in Two set:{x}"")"
4005,Keep All items from List But NOT the Duplicates,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.symmetric_difference_update(y)
print(f""Duplicate Value in Two set:{x}"")"
4006,Create and print a dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Sample Dictionary:{thisdict}"")"
4007,Calculate the length of dictionary,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Length of Dictionary:{len(thisdict)}"")"
4008,Evaluate a string and a number,"print(bool(""Hello""))
print(bool(15))"
4009,Calculate length of a string,"word = ""Hello World""
print(f""Length of string: {len(word)}"")"
4010,Count the number of spaces in a sring,"s = ""Count, the number of spaces""
lenx = s.count(' ')
print(f""number of spaces in sring: {lenx}"")"
4011,Split Strings,"word = ""Hello World""
ksplit = word.split(' ') 
print(f""Splited Strings: {ksplit}"")"
4012,Prints ten dots,"ten = ""."" * 10
print(f""Ten dots: {ten}"")"
4013,Replacing a string with another string,"word = ""Hello World""
replace = ""Bye""
input = ""Hello""
after_replace = word.replace(input, replace)
print(f""String ater replacement: {after_replace}"")"
4014,removes leading characters,"word = "" xyz ""
lstrip = word.lstrip()
print(f""String ater removal of leading characters:{lstrip}"")"
4015,removes trailing characters,"word = "" xyz ""
rstrip = word.rstrip()
print(f""String ater removal of trailing characters:{rstrip}"")"
4016,check if all char are alphanumeric,"word = ""Hello World""
check = word.isalnum()
print(f""All char are alphanumeric?:{check}"")"
4017,check if all char in the string are alphabetic,"word = ""Hello World""
check = word.isalpha()
print(f""All char are alphabetic?:{check}"")"
4018,test if string contains digits,"word = ""Hello World""
check = word.isdigit()
print(f""String contains digits?:{check}"")"
4019,Test if string contains upper case,"word = ""Hello World""
check = word.isupper()
print(f""String contains upper case?:{check}"")"
4020,Test if string starts with H,"word = ""Hello World""
check = word.startswith('H')
print(f""String starts with H?:{check}"")"
4021,Returns an integer value for the given character,"str = ""A""
val = ord(str)
print(f""Integer value for the given character?:{val}"")"
4022,Fibonacci series up to 100,"n = 100
result = []
a, b = 0 , 1
while b < n:
  result. append( b)
  a, b = b, a + b
final = result
print(f""Fibonacci series up to 100:{final}"")"
4023,Counting total Digits in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isdigit()):
    digitCount += 1
print('Number of digits: ',digitCount)"
4024,Counting total alphanumeric in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isalpha()):
    digitCount += 1
print('Number of alphanumeric: ',digitCount)"
4025,Counting total Upper Case in a string,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.upper()):
    digitCount += 1
print('Number total Upper Case: ',digitCount)"
4026,Counting total lower Case in a string,"str1 = ""abc4234AFdeaa""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.lower()):
    digitCount += 1
print('Number total lower Case: ',digitCount)"
4027,Bubble sort in python,"list1 = [1, 5, 3, 4]
for i in range(len(list1)-1):
  for j in range(i+1,len(list1)):
    if(list1[i] > list1[j]):
      temp = list1[i]
      list1[i] = list1[j]
      list1[j] = temp
print(""Bubble Sorted list: "",list1)"
4028,Compute the product of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
4029,Calculate the sum of every pair of numbers from two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a+b for a in list1 for b in list2]
print(f""sum of every pair of numbers from two lists:{final}"")"
4030,Calculate the pair-wise product of two lists,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [list1[i]*list2[i] for i in range(len(list1))]
print(f""pair-wise product of two lists:{final}"")"
4031,Remove the last element from the stack,"s = [1,2,3,4]
print(f""last element from the stack:{s.pop()}"")"
4032,Insert a number at the beginning of the queue,"q = [1,2,3,4]
q.insert(0,5)
print(f""Revised List:{q}"")"
4033,Addition of two vector,"v1 = [1,2,3]
v2 = [1,2,3]
s1 = [0,0,0]
for i in range(len(v1)):
  s1[i] = v1[i] + v2[i]
print(f""New Vector:{s1}"")"
4034,Replace negative prices with 0 and leave the positive values unchanged in a list,"original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
prices = [i if i > 0 else 0 for i in original_prices]
print(f""Final List:{prices}"")"
4035,Convert dictionary to JSON,"import json
person_dict = {'name': 'Bob',
'age': 12,
'children': None
}
person_json = json.dumps(person_dict)
print(person_json)"
4036,Writing JSON to a file,"import json
person_dict = {""name"": ""Bob"",
""languages"": [""English"", ""Fench""],
""married"": True,
""age"": 32
}
with open('person.txt', 'w') as json_file:
  json.dump(person_dict, json_file)"
4037,Pretty print JSON,"import json
person_string = '{""name"": ""Bob"", ""languages"": ""English"", ""numbers"": [2, 1.6, null]}'
person_dict = json.loads(person_string)
print(json.dumps(person_dict, indent = 4, sort_keys=True))"
4038,Check if the key exists or not in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Piyush Jain"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""piyushjain220@gmail.com""
}""""""
print(""Checking if percentage key exists in JSON"")
student = json.loads(studentJson)
if ""percentage"" in student:
    print(""Key exist in JSON data"")
    print(student[""name""], ""marks is: "", student[""percentage""])
else:
    print(""Key doesn't exist in JSON data"")"
4039,Check if there is a value for a key in JSON,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Piyush Jain"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""piyushjain220@gmail.com""
}""""""
student = json.loads(studentJson)
if not (student.get('email') is None):
     print(""value is present for given JSON key"")
     print(student.get('email'))
else:
    print(""value is not present for given JSON key"")"
4040,Sort JSON keys in Python and write it into a file,"import json
sampleJson = {""id"" : 1, ""name"" : ""value2"", ""age"" : 29}
with open(""sampleJson.json"", ""w"") as write_file:
    json.dump(sampleJson, write_file, indent=4, sort_keys=True)
print(""Done writing JSON data into a file"")"
4041,Given a Python list. Turn every item of a list into its square,"aList = [1, 2, 3, 4, 5, 6, 7]
aList =  [x * x for x in aList]
print(aList)"
4042,Remove empty strings from the list of strings,"list1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]
resList = [i for i in (filter(None, list1))]
print(resList)"
4043,"Write a program which will achieve given a Python list, remove all occurrence of an input from the list","list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, 20)
print(resList)"
4044,Generate 3 random integers between 100 and 999 which is divisible by 5,"import random
print(""Generating 3 random integer number between 100 and 999 divisible by 5"")
for num in range(3):
    print(random.randrange(100, 999, 5), end=', ')"
4045,Pick a random character from a given String,"import random
name = 'pynative'
char = random.choice(name)
print(""random char is "", char)"
4046,Generate  random String of length 5,"import random
import string
def randomString(stringLength):
    """"""Generate a random string of 5 charcters""""""
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(stringLength))
print (""Random String is "", randomString(5) )"
4047,"Write a program which will create a new string by appending s2 in the middle of s1 given two strings, s1 and s2","def appendMiddle(s1, s2):
  middleIndex = int(len(s1) /2)
  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
  print(""After appending new string in middle"", middleThree)
appendMiddle(""Ault"", ""Kelly"")"
4048,Arrange string characters such that lowercase letters should come first,"str1 = ""PyNaTive""
lower = []
upper = []
for char in str1:
    if char.islower():
        lower.append(char)
    else:
        upper.append(char)
sorted_string = ''.join(lower + upper)
print(sorted_string)"
4049,"Given a string, return the sum and average of the digits that appear in the string, ignoring all other characters","import re
inputStr = ""English = 78 Science = 83 Math = 68 History = 65""
markList = [int(num) for num in re.findall(r'\b\d+\b', inputStr)]
totalMarks = 0
for mark in markList:
  totalMarks+=mark
percentage = totalMarks/len(markList)  
print(""Total Marks is:"", totalMarks, ""Percentage is "", percentage)"
4050,"Given an input string, count occurrences of all characters within a string","str1 = ""Apple""
countDict = dict()
for char in str1:
  count = str1.count(char)
  countDict[char]=count
print(countDict)"
4051,Reverse a given string,"str1 = ""PYnative""
print(""Original String is:"", str1)
str1 = str1[::-1]
print(""Reversed String is:"", str1)"
4052,Remove special symbols/Punctuation from a given string,"import string
str1 = ""/*Jon is @developer & musician""
new_str = str1.translate(str.maketrans('', '', string.punctuation))
print(""New string is "", new_str)"
4053,Removal all the characters other than integers from string,"str1 = 'I am 25 years and 10 months old'
res = """".join([item for item in str1 if item.isdigit()])
print(res)"
4054,From given string replace each punctuation with,"from string import punctuation
str1 = '/*Jon is @developer & musician!!'
replace_char = '#'
for char in punctuation:
    str1 = str1.replace(char, replace_char)
print(""The strings after replacement : "", str1)"
4055,Given a list iterate it and count the occurrence of each element and create a dictionary to show the count of each elemen,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
4056,Given a two list of equal size create a set such that it shows the element from both lists in the pair,"firstList = [2, 3, 4, 5, 6, 7, 8]
secondList = [4, 9, 16, 25, 36, 49, 64]
result = zip(firstList, secondList)
resultSet = set(result)
print(resultSet)"
4057,Given a two sets find the intersection and remove those elements from the first set,"firstSet  = {23, 42, 65, 57, 78, 83, 29}
secondSet = {57, 83, 29, 67, 73, 43, 48}
intersection = firstSet.intersection(secondSet)
for item in intersection:
  firstSet.remove(item)
print(""First Set after removing common element "", firstSet)"
4058,Given a dictionary get all values from the dictionary and add it in a list but don’t add duplicates,"speed  ={'jan':47, 'feb':52, 'march':47, 'April':44, 'May':52, 'June':53,
          'july':54, 'Aug':44, 'Sept':54} 
speedList = []
for item in speed.values():
  if item not in speedList:
    speedList.append(item)
print(""unique list"", speedList)"
4059,Convert decimal number to octal,"print('%o,' % (8))"
4060,Convert string into a datetime object,"from datetime import datetime
date_string = ""Feb 25 2020  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
4061,Subtract a week from a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
4062,Find the day of week of a given date?,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
4063,Add week (7 days) and 12 hours to a given date,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
4064,Calculate number of days between two given dates,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
4065,Write a recursive function to calculate the sum of numbers from 0 to 10,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
4066,Generate a Python list of all the even numbers between two given numbers,"num1 = 4
num2 = 30
myval = [i for i in range(num1, num2, 2)]
print(myval)"
4067,Return the largest item from the given list,"aList = [4, 6, 8, 24, 12, 2]
print(max(aList))"
4068,"Write a program to extract each digit from an integer, in the reverse order","number = 7536
while (number > 0):
    digit = number % 10
    number = number // 10
    print(digit, end="" "")"
4069,"Given a Python list, remove all occurrence of a given number from the list","num1 = 20
list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, num1)
print(resList)"
4070,Shuffle a list randomly,"import random
list = [2,5,8,9,12]
random.shuffle(list)
print (""Printing shuffled list "", list)"
4071,Generate a random n-dimensional array of float numbers,"import numpy
random_float_array = numpy.random.rand(2, 2)
print(""2 X 2 random float array in [0.0, 1.0] \n"", random_float_array,""\n"")"
4072,Generate random Universally unique IDs,"import uuid
safeId = uuid.uuid4()
print(""safe unique id is "", safeId)"
4073,Choose given number of elements from the list with different probability,"import random
num1 =5
numberList = [111, 222, 333, 444, 555]
print(random.choices(numberList, weights=(10, 20, 30, 40, 50), k=num1))"
4074,Generate weighted random numbers,"import random
randomList = random.choices(range(10, 40, 5), cum_weights=(5, 15, 10, 25, 40, 65), k=6)
print(randomList)"
4075,generating a reliable secure random number,"import secrets
print(""Random integer number generated using secrets module is "")
number = secrets.randbelow(30)
print(number)"
4076,Calculate memory is being used by an list in Python,"import sys
list1 = ['Scott', 'Eric', 'Kelly', 'Emma', 'Smith']
print(""size of list = "",sys.getsizeof(list1))"
4077,Find if all elements in a list are identical,"listOne = [20, 20, 20, 20]
print(""All element are duplicate in listOne:"", listOne.count(listOne[0]) == len(listOne))"
4078,Merge two dictionaries in a single expression,"currentEmployee = {1: 'Scott', 2: ""Eric"", 3:""Kelly""}
formerEmployee  = {2: 'Eric', 4: ""Emma""}
allEmployee = {**currentEmployee, **formerEmployee}
print(allEmployee)"
4079,Convert two lists into a dictionary,"ItemId = [54, 65, 76]
names = [""Hard Disk"", ""Laptop"", ""RAM""]
itemDictionary = dict(zip(ItemId, names))
print(itemDictionary)"
4080,Alternate cases in String,"test_str = ""geeksforgeeks""
res = """" 
for idx in range(len(test_str)): 
    if not idx % 2 : 
       res = res + test_str[idx].upper() 
    else: 
       res = res + test_str[idx].lower() 
print(res)"
4081,1 write a python function to add to add two numbers,"def return_exponential(num1, num2):
    return num1 ** num2"
4082,2 write a python function to split a string at space,"def string_split_at_space(string):
    return string.split()"
4083,3 write a python program to convert a string to a char array,"def char_array(string):
    return list(string)"
4084,4 write a python function to print the factorial of a number,"def factorial(x):
    prod = 1
    for i in range(1, x + 1):
        prod *= i
    return prod"
4085,5 write a python function to accept a number and return all the numbers from 0 to that number,"def print_numbers(x):
    for i in range(x):
        print(i)"
4086,6 write a python function that concatenates two stings,"def concat(s1, s2):
    return s1 + s2"
4087,7 write a python function to return every second number from a list,"def every_other_number(lst):
    return lst[::2]"
4088,7 write a python function to return every nth number from a list,"def every_nth_number(lst, n):
    return lst[::n]"
4089,"8 write a python function to accept a key, value pair and return a dictionary","def create_dictionary(key, value):
    return {str(key): value}"
4090,"9 write a python function to update a dictionary with a new key, value pair","def update_dictionary(dict, key, value):
    dict[str(key)] = value
    return dict"
4091,10 write a python function to return the median of a list,"def calc_median(arr):
    arr = sorted(arr)
    if len(arr) / 2 == 0:
        return arr[len(arr) / 2]
    else:
        return (arr[len(arr) // 2] + arr[(len(arr) - 1) // 2]) / 2"
4092,11 write a python function to return the length of an array plus 27,"def return_length(arr):
    return len(arr) + 27"
4093,12  write a python function to return the third last element of an array,"def return_last(arr):
    return arr[-3]"
4094,13  write a function to calculate the mean of an array,"def calc_mean(arr):
    sum = 0
    for i in range(len(arr)):
        sum += arr[i]
    return sum / len(arr)"
4095,14 write a function to perform insertion sort on an arary,"def sort_insertion(arr):
    for i in range(1, len(arr)):
        tmp = arr[i]
        j = i
        while (j > 0) & (tmp < arr[j - 1]):
            arr[j] = arr[j - 1]
            j = j - 1
        arr[j] = tmp
    return arr"
4096,15 write a function to implement a binary tree,"class BinTree:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key"
4097,17 write a function to initialize a linked list,"class Cell:
    def __init__(self, val):
        self.val = val
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None"
4098,18 write a function to create a linked list with given length and print the list after,"class Node:
    def __init__(self, val):
        self.val = val
        self.next = None
class LList:
    def __init__(self):
        self.head = None
def create_linked_list(*args):
    linked_list = LList()
    linked_list.head = Node(args[0])
    prev = linked_list.head
    for i in range(1, len(args)):
        entry = Node(args[i])
        prev.next = entry
        prev = entry
    return"
4099,20 write a function which returns the count of each token in a given sentence as a dictionary,"from collections import Counter
def count_tokens(sent):
    sent = list(sent)
    return dict(Counter(sent))"
4100,21 write a function that removes all the punctuations from a string,"import string
def remove_punct(s):
    return """".join(ch for ch in s if ch not in set(string.punctuation))"
4101,22 write a function that counts the sum of every element in the odd place in a list,"from functools import reduce
def count_second(lst):
    return reduce(lambda x, y: x + y, lst[::2])"
4102,23 write a function that returns the square root of the third power of every number in a list,"def comp_power(lst):
    return list(map(lambda x: x ** 1.5, lst))"
4103,23 write a function to calculate the residual sum of squares between two lists of the same size,"def rss(lst1, lst2):
    diff = [lst1[x] - lst2[x] for x in range(len(lst1))]
    return sum(list(map(lambda x: x ** 2, diff)))"
4104,24 write a program to caclulate the approximate value of pi using the monte carlo method,"import random
def pi_monte_carlo(n=1000000):
    count = 0
    for _ in range(n):
        x = random.random()
        y = random.random()
        if x ** 2 + y ** 2 <= 1:
            count += 1
    return 4 * count / n
print(pi_monte_carlo())"
4105,25 write a funtion to print all the files in the current directory,"import os
def list_files():
    return os.listdir()"
4106,26 write a generator in python which returns a random number between 0 and a million,"import random
def yield_a_number():
    yield random.randint(0, 1000000)"
4107,27 write a program that filters a list for even numbers only and returns their sum,"def map_reduce(lst):
    return reduce(lambda x, y: x + y, filter(lambda x: x % 2 == 0, lst))
print(map_reduce([1, 2, 3, 4, 5]))"
4108,28 write a program that return the first n numbers from a list,"def sub_list(lst, ind):
    return lst[:ind]
print(sub_list([1, 2, 3, 4, 5, 56], 3))"
4109,29 write a program to sort a list using bubblesort,"def bubblesort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr
print(bubblesort([1, 33, 192, 21, 0]))"
4110,"30 write a function that accepts two numbers or lists or dictionaries and returns True if the two are equal, and False otherwise","def check_assert(item1, item2):
    try:
        assert item1 == item2
        return True
    except AssertionError:
        return False"
4111,31 write a function that checks if a number is an Armstrong number (sum of digits of the number = the number),"from itertools import chain
def check_armstrong(n):
    sum_of_digits = sum(map(lambda x: int(x) ** 3, chain(str(n))))
    if sum_of_digits == n:
        return True
    else:
        return False"
4112,"32 write a program in python to create a directed graph, and add an edge between two vertices","from collections import defaultdict
class Graph:
    def __init__(self):
        self.graph = defaultdict(list)
    def addEdge(self, f, t):
        self.graph[f].append(t)
    def printEdge(self):
        for ed in list(self.graph.keys()):
            print(f""From : {ed}, To : {self.graph[ed]}"")
g = Graph()
g.addEdge(""a"", ""b"")
g.addEdge(""a"", ""e"")
g.addEdge(""b"", ""d"")
g.addEdge(""c"", ""d"")
g.addEdge(""c"", ""a"")
g.printEdge()"
4113,33 write a program that shows how child class can access the init method of the parent class using super,"class A:
    def __init__(self):
        print(""My name is GYOBU MASATAKA ONIWA!"")
class B(A):
    def __init__(self):
        super(B, self).__init__()
        print(""as I breath, you WILL not pass the castle gates!"")
tmp = B()"
4114,34 write a program to generate a random number between two ranges,"import random
def rand_range(low, high):
    return random.randrange(low, high)"
4115,35 Write a python function that sorts a list of strings by their length in the descending order,"def sort_by_len(arr):
    return sorted(arr, reverse=True, key=lambda x: len(x))"
4116,36 Write a  python function that returns the Highest Common Factor of two given numbers,"def calculate_hcf(x1, x2):
    if x1 == 0:
        return x2
    else:
        return hcf(x2 % x1, x1)"
4117,"37 Write a python program to calculate the LCM and HCF of two given numbers
 38 write a python program which takes in a dictionary with unique values and converts keys into values and vice versa","def hcf(x1, x2):
    if x1 == 0:
        return x2
    else:
        return hcf(x2 % x1, x1)
def lcm_hcf(x1, x2):
    h_c_f = hcf(x1, x2)
    lcm = x1 * x2 / h_c_f
    return lcm, h_c_f
l, h = lcm_hcf(18, 12)
print(f""LCM : {l}, HCF: {h}"")
def flip_dict(d):
    tmp_dict = {}
    for pair in d.items():
        tmp_dict[pair[1]] = pair[0]
    return tmp_dict
print(flip_dict({""a"": 10, ""b"": 20, ""c"": 15}))"
4118,39 write a python function to return a list of all punctuations from the string library,"import string
def return_punct():
    return string.punctuation"
4119,40 write a python function that takes in a string and returns it in lowercase,"def to_lower(s):
    return s.lower()"
4120,41 write a python function that takes in a string and returns it in uppercase,"def to_upper(s):
    return s.upper()"
4121,42 write a python program that converts lower case letters to uppercase and vice versa,"def flip_case(s):
    s = [int(ord(x)) for x in s]
    s = [x - 32 if x >= 97 else x + 32 for x in s]
    s = [chr(x) for x in s]
    return """".join(s)"
4122,43 Define a function which returns the current working directory,"import os
def get_cwd():
    return os.getcwd()"
4123,44 Define a python function that can read text file from a given URL,"import requests
def read_data(url):
    data = requests.get(url).text
    return data"
4124,45 Define a python function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"import requests
def get_status(url):
    data = requests.get(url)
    return data.status_code"
4125,46 Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"import requests
def get_encoding(url):
    data = requests.get(url)
    return data.encoding"
4126,47 write a python function that accepts a valid path and changes the current working directory,"import os
def change_dir(path):
    return os.chdir(path)"
4127,48 write a python function that checks if a given key is present in the environment,"import os
def get_env_path(key):
    return os.getenv(key)"
4128,49 Write a generator that returns True / False randomly,"import random
def generate_tf():
    rand = random.random()
    if rand > 0.5:
        yield True
    else:
        yield False"
4129,50 write a python program to normalize an array such that it sums upto 1,"def normalize(arr):
    return [float(i) / sum(arr) for i in arr]
print(normalize([1, 2, 3, 4, 5]))"
4130,51 write a python program to perform Softmax operation on an input array,"import math
def softmax(arr):
    e_arr = [math.exp(x) for x in arr]
    e_soft = [i / sum(e_arr) for i in e_arr]
    return e_soft
print(softmax([3.0, 1.0, 0.2]))"
4131,52 Write a python program to calculate the slope of a line given two points,"def slope_of_a_line(x1, x2, y1, y2):
    del_x = x2 - x1
    del_y = y2 - y1
    return float(del_y) / del_x
print(slope_of_a_line(0, 10, 0, 10))"
4132,53 write a python function which checks if a number is a perfect square,"import math
def is_perfect_square(num):
    sq_root = round(math.sqrt(num))
    if num == sq_root ** 2:
        return True
    else:
        return False"
4133,54 Write a python function that implements the ReLU function,"def relu(arr):
    return [x if x > 0 else 0 for x in arr]"
4134,55 Write a python program that pads a given python list to a given length at the end and prints the modified list,"def pad_arr_end(arr, pad_len):
    pad_arr = [0] * (pad_len - len(arr))
    return arr.extend(pad_arr)
tmp = [1, 2, 3, 4, 5]
pad_arr_end(tmp, 10)
print(tmp)"
4135,55 Write a python program that pads a given python list to a given length at the start and prints the modified list,"def pad_arr_start(arr, pad_len):
    pad_arr = [0] * (pad_len - len(arr))
    pad_arr.extend(arr)
    return pad_arr
tmp = [1, 2, 3, 4, 5]
x = pad_arr_start(tmp, 10)
print(x)"
4136,56 write a python function to implement the sigmoid activation function,"import math
def sigmoid(x):
    return 1 / (1 + math.exp(-x))"
4137,57 write a python function to implement the tanh activation function,"import math
def tanh(x):
    return (math.exp(2 * x) - 1) / (math.exp(2 * x) + 1)"
4138,58 Write a python program that calculates and prints the area of an ellipse,"import math
class Ellipse:
    def __init__(self, a, b):
        self.major_axis = b
        self.minor_axis = a
    def area(self):
        return math.pi * self.major_axis * self.minor_axis
ellipse = Ellipse(2, 10)
print(ellipse.area())"
4139,59 Write a python program that adds a time delay between a loop that prints numbers between 0 and 10,"import time
def print_loop_with_delay(sec):
    for i in range(0, 10):
        time.sleep(sec)
        print(i)"
4140,60 Write a function to return the the unique tokens from a string,"def unique_tokens(st):
    return set(st)"
4141,61 write a python function to return the standard deviation of a list of numbers,"import math
def st_dev(arr):
    avg = sum(arr) / len(arr)
    ss_dev = sum([(x - avg) ** 2 for x in arr])
    return math.sqrt(ss_dev / (len(arr) - 1))"
4142,62 write a python function to return mode of the data,"import statistics
def mode(arr):
    return statistics.mode(arr)"
4143,"63 Write a python function which returns true if all the numbers in a list negative, else return False","def are_all_negative(arr):
    filt_arr = list(filter(lambda x: x < 0, arr))
    if len(filt_arr) == len(arr):
        return True
    else:
        return False"
4144,64 Write a python function that checks if all the numbers in a list sum upto 1. Returns False otherwise,"def sum_upto_one(arr):
    arr_sum = sum(arr)
    try:
        assert float(arr_sum) == 1.0
        return True
    except AssertionError:
        return False"
4145,65 write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print(random.choice([i for i in range(11) if i % 2 == 0]))"
4146,"66 write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.","import random
print(random.choice([i for i in range(201) if i % 5 == 0 and i % 7 == 0]))"
4147,67 write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print(random.sample(range(100), 5))"
4148,68 write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print(random.sample([i for i in range(100, 201) if i % 2 == 0], 5))"
4149,"69 write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print(random.sample([i for i in range(1, 1001) if i % 5 == 0 and i % 7 == 0], 5))"
4150,70 write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print(random.randrange(7, 16))"
4151,71 write a python function to count the length of the string,"def len_str(st):
    return len(st)"
4152,"72 write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t = Timer(""for i in range(100):1+1"")
print(t.timeit())"
4153,"73 write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3, 6, 7, 8]
shuffle(li)
print(li)"
4154,"74 write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3, 6, 7, 8]
shuffle(li)
print(li)"
4155,"75 write a program to generate all sentences where subject is in [""I"", ""You""] and verb is in [""Play"", ""Love""] and the object is in [""Hockey"",""Football""].","subjects = [""I"", ""You""]
verbs = [""Play"", ""Love""]
objects = [""Hockey"", ""Football""]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = ""%s %s %s."" % (subjects[i], verbs[j], objects[k])
            print(sentence)"
4156,"76 Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li = [5, 6, 77, 45, 22, 12, 24]
li = [x for x in li if x % 2 != 0]
print(li)"
4157,"77 By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li = [12, 24, 35, 70, 88, 120, 155]
li = [x for x in li if x % 5 != 0 and x % 7 != 0]
print(li)"
4158,"78 By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li = [12, 24, 35, 70, 88, 120, 155]
li = [x for (i, x) in enumerate(li) if i % 2 != 0]
print(li)"
4159,"79 By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.","array = [[[0 for col in range(8)] for col in range(5)] for row in range(3)]
print(array)"
4160,"80 By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li = [12, 24, 35, 70, 88, 120, 155]
li = [x for (i, x) in enumerate(li) if i not in (0, 4, 5)]
print(li)"
4161,"81 By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li = [12, 24, 35, 24, 88, 120, 155]
li = [x for x in li if x != 24]
print(li)"
4162,"82 With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1 = set([1, 3, 6, 78, 35, 55])
set2 = set([12, 24, 35, 24, 88, 120, 155])
set1 &= set2
li = list(set1)
print(li)"
4163,"83 With a given list [12,24,35,24,88,120,155,88,120,155], write a program to print this list after removing all duplicate values with original order reserved.","def removeDuplicate(li):
    newli = []
    seen = set()
    for item in li:
        if item not in seen:
            seen.add(item)
            newli.append(item)
    return newli
li = [12, 24, 35, 24, 88, 120, 155, 88, 120, 155]
print(removeDuplicate(li))"
4164,"84 Define a class Person and its two child classes: Male and Female. All classes have a method ""getGender"" which can print ""Male"" for Male class and ""Female"" for Female class.","class Person(object):
    def getGender(self):
        return ""Unknown""
class Male(Person):
    def getGender(self):
        return ""Male""
class Female(Person):
    def getGender(self):
        return ""Female""
aMale = Male()
aFemale = Female()
print(aMale.getGender())
print(aFemale.getGender())"
4165,85 write a program which count and print the numbers of each character in a string,"dic = {}
s = ""JRR Tolkien""
for s in s:
    dic[s] = dic.get(s, 0) + 1
print(""\n"".join([""%s,%s"" % (k, v) for k, v in dic.items()]))"
4166,86 write a program which accepts a string and counts the number of words in it,"def num_of_words(st):
    return len(st.split())"
4167,87 write a function which accepts a string prints the characters that have even indexes.,"def every_alternate_char(s):
    s = s[::2]
    return s"
4168,"88 write a program which prints all permutations of [1,2,3]","import itertools
print(list(itertools.permutations([1, 2, 3])))"
4169,89 Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve(numheads, numlegs):
    ns = ""No solutions!""
    for i in range(numheads + 1):
        j = numheads - i
        if 2 * i + 4 * j == numlegs:
            return i, j
    return ns, ns"
4170,90 Write a python function to round down a given decimal number,"import math
def apply_ceil(num):
    return math.ceil(x)"
4171,91 Write a python function to round up a given decimal number,"import math
def apply_floor(num):
    return math.floor(num)"
4172,92 Write a python function to round off a given decimal number,"def apply_round(num):
    return round(num)"
4173,93 write a python function to find One's compliment of a number,"import math
def OnesComplement(num):
    bits = int(math.floor(math.log(num) / math.log(2)) + 1)
    return ((1 << bits) - 1) ^ num"
4174,94 write a python function that takes in a decimal number and prints it's binary representation,"def dec2bin(num):
    print(format(num, ""b""))"
4175,95 write a python function that accepts a binary string and converts it into an equivalent decimal number,"def bin2dec(num):
    return int(num, 2)"
4176,96 write a python function that takes a number and returns an array of the number duplicated n times,"def duplicate_array(num, n):
    num = [num] * n
    return num"
4177,"97 write a python function that accepts a number, and returns the nearest square number","import math
def nearest_square(n):
    upp = math.floor(math.sqrt(n))
    low = math.floor(math.sqrt(n))
    upp_diff = upp ** 2 - n
    low_diff = n - low ** 2
    if upp_diff > low_diff:
        return upp
    else:
        return low"
4178,98 write a python function that calculates the midpoint between two numbers,"def midpoint(a, b):
    lar = b if b > a else a
    sm = a if b > a else b
    return float(lar + sm) / 2"
4179,99 write a  python function that accepts a string and reverses it,"def reverse(st):
    return st[::-1]"
4180,100 write a python program that checks if a string is a pallindrome,"def is_palindrome(st):
    st = st.lower()
    rev_st = st[::-1]
    try:
        assert rev_st == st
        return True
    except AssertionError:
        return False
st = ""Nitin""
print(is_palindrome(st))"
4181,"coding: utf-8
 write a python program to add two numbers","num1 = 5465461
num2 = 8765468
sum = num1 + num2
print(f'Sum: {sum}')"
4182,write a python function to add two user provided numbers and return the sum,"def add_two_numbers(num1, num2):    
    sum = num1 + num2    
    return sum"
4183,write a program to find and print the largest among three numbers,"num1 = 123
num2 = 125
num3 = 148
if (num1 >= num2) and (num1 >= num3):   
    largest = num1
elif (num2 >= num1) and (num2 >= num3):   
    largest = num2
else:   largest = num3
print(f'largest:{largest}')"
4184,write a program to find length of list,"l = [1,2,3,4,5]
print(len(l))"
4185,write a function to find length of list,"def get_list_length(l):
    return len(l)"
4186,write a program to convert tuple to list,"t = (1,2,4,5,6)
print(f'list:{list(t)}')"
4187,write a function to convert tuple to list,"def convert_tuple2list(t):
    return list(t)"
4188,write a program to convert list to tuple,"l = ['a',4,5]
print(f'tuple:{tuple(l)}')"
4189,write a function to convert list to tuple,"def list2tuple(l):
    return tuple(l)"
4190,write a function to find length of list,"def tuple_lenght(t):
    return len(t)"
4191,write a program to find length of list,"t = 1,2,3,4,5
print(f'tuple length: {len(t)}')"
4192,write a program to concat two list,"l1 = [1,2,3]
l2 = [4,5,6]
print(f'sum : {l1 + l2}')"
4193,write a functiom to concat two list,"l1 = [1,2,3]
l2 = [4,5,6]
def list_concat(l1,l2):
    return l1 + l2"
4194,write Python code to convert Celsius scale to Fahrenheit scale,"def Cel_To_Fah(n): 
    return (n*1.8)+32
n = 20
print(int(Cel_To_Fah(n)))"
4195,write Python program to convert temperature from Fahrenheit to Kelvin,"def Fahrenheit_to_Kelvin(F): 
    return 273.5 + ((F - 32.0) * (5.0/9.0)) 
F = 100
print(""Temperature in Kelvin ( K ) = {:.3f}"" 
            .format(Fahrenheit_to_Kelvin( F )))"
4196,write Function to convert temperature  from degree Celsius to Kelvin,"def Celsius_to_Kelvin(C): 
    return (C + 273.15) 
C = 100 
print(""Temperature in Kelvin ( K ) = "",  
                    Celsius_to_Kelvin(C))"
4197,write Python code to convert radian to degree,"def Convert(radian): 
    pi = 3.14159
    degree = radian * (180/pi) 
    return degree 
radian = 5
print(""degree ="",(Convert(radian)))"
4198,write  Function to Rotate  the matrix by 180 degree,"def rotateMatrix(mat): 
    N = 3  
    i = N - 1;  
    while(i >= 0): 
        j = N - 1; 
        while(j >= 0): 
            print(mat[i][j], end = "" ""); 
            j = j - 1; 
        print(); 
        i = i - 1;"
4199,Driven code,"mat = [[1, 2, 3], 
       [ 4, 5, 6 ], 
       [ 7, 8, 9 ]]; 
rotateMatrix(mat);"
4200,write  Function to left rotate n by d bits,"def leftRotate(n, d): 
    INT_BITS = 32
    return (n << d)|(n >> (INT_BITS - d)) 
n = 16
d = 2
print(""Left Rotation of"",n,""by"",d,""is"",end="" "") 
print(leftRotate(n, d))"
4201,write Function to right rotate n by d bits,"def rightRotate(n, d): 
    INT_BITS = 32
    return (n >> d)|(n << (INT_BITS - d)) & 0xFFFFFFFF
n = 16
d = 2
print(""Right Rotation of"",n,""by"",d,""is"",end="" "") 
print(rightRotate(n, d))"
4202,Function to rotate string left and right by d length,"def rotate(input,d): 
    Lfirst = input[0 : d] 
    Lsecond = input[d :] 
    Rfirst = input[0 : len(input)-d] 
    Rsecond = input[len(input)-d : ] 
    print (""Left Rotation : "", (Lsecond + Lfirst) ) 
    print (""Right Rotation : "", (Rsecond + Rfirst)) 
input = 'GeeksforGeeks'
d=2
rotate(input,d)"
4203,write Python3 code to demonstrate to create a substring from a string,"ini_string = 'xbzefdgstb'
print (""initial_strings : "", ini_string) 
sstring_strt = ini_string[:2] 
sstring_end = ini_string[3:] 
print (""print resultant substring from start"", sstring_strt) 
print (""print resultant substring from end"", sstring_end)"
4204,write Python3 code to demonstrate to create a substring from string,"ini_string = 'xbzefdgstb'
print (""initial_strings : "", ini_string) 
sstring_alt = ini_string[::2] 
sstring_gap2 = ini_string[::3] 
print (""print resultant substring from start"", sstring_alt) 
print (""print resultant substring from end"", sstring_gap2)"
4205,write Python3 code to demonstrate to create a substring from string,"ini_string = 'xbzefdgstb'
sstring = ini_string[2:7:2] 
print ('resultant substring{sstring}')"
4206,Program to cyclically rotate an array by one,"def cyclicRotate(input): 
    print ([input[-1]] + input[0:-1])"
4207,write Python3 code to demonstrate list slicing from K to end using None,"test_list = [5, 6, 2, 3, 9] 
K = 2
res = test_list[K : None] 
print (f""The sliced list is :{str(res)} ""  )"
4208,write Python code t get difference of two lists Using set(),"def Diff(li1, li2):
	return (list(list(set(li1)-set(li2)) + list(set(li2)-set(li1))))
li1 = [10, 15, 20, 25, 30, 35, 40]
li2 = [25, 40, 35]
print(Diff(li1, li2))"
4209,write a program for round for integers,"integer = 18
print(f""Round off value : {round(integer , -1)}"")"
4210,write a program for floating pointwrite a program,"print(f""Round off value : {round(51.6)}"")"
4211,write Program to demonstrate conditional operator,"a, b = 10, 20
min = a if a < b else b 
print(min)"
4212,"write Python program to demonstrate ternary operator using tuples, Dictionary and lambda","a, b = 10, 20
print( (b, a) [a < b] ) 
print({True: a, False: b} [a < b]) 
print((lambda: b, lambda: a)[a < b]())"
4213,"write a python program using ""any"" function","print (any([False, True, False, False]))"
4214,"write a python program using ""all"" function","print (all([False, True, False, False]))"
4215,write Python3 code to demonstrate working of Check if tuple has any None value using any() + map() + lambda,"test_tup = (10, 4, 5, 6, None) 
res = any(map(lambda ele: ele is None, test_tup)) 
print(""Does tuple contain any None value ? : "" + str(res))"
4216,write Python3 code to demonstrate working of Check if tuple has any None value using not + all(),"test_tup = (10, 4, 5, 6, None) 
print(""The original tuple : "" + str(test_tup))  
res = not all(test_tup) 
print(""Does tuple contain any None value ? : "" + str(res))"
4217,write Python3 code to demonstrate working of  Sort tuple list by Nth element of tuple  using sort() + lambda,"test_list = [(4, 5, 1), (6, 1, 5), (7, 4, 2), (6, 2, 4)] 
print(""The original list is : "" + str(test_list)) 
N = 1
test_list.sort(key = lambda x: x[N]) 
print(""List after sorting tuple by Nth index sort : "" + str(test_list))"
4218,write Python program to demonstrate printing of complete multidimensional list row by row.,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
for record in a: 
	print(record)"
4219,write Python program to demonstrate that we can access multidimensional list using square brackets,"a = [ [2, 4, 6, 8 ], 
    [ 1, 3, 5, 7 ], 
    [ 8, 6, 4, 2 ], 
    [ 7, 5, 3, 1 ] ] 
for i in range(len(a)) : 
    for j in range(len(a[i])) : 
        print(a[i][j], end="" "") 
    print()"
4220,write a program for Adding a sublist,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
a.append([5, 10, 15, 20, 25]) 
print(a)"
4221,write a program for  Extending a sublist,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
a[0].extend([12, 14, 16, 18]) 
print(a)"
4222,write a program for Reversing a sublist,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
a[2].reverse() 
print(a)"
4223,write a Python3 program to demonstrate the use of replace() method,"string = ""geeks for geeks geeks geeks geeks""
print(string.replace(""geeks"", ""Geeks"")) 
print(string.replace(""geeks"", ""GeeksforGeeks"", 3))"
4224,write Python3 code to demonstrate working of Rear word replace in String using split() + join(),"test_str = ""GFG is good""
print(""The original string is : "" + test_str) 
rep_str = ""best""
res = "" "".join(test_str.split(' ')[:-1] + [rep_str]) 
print(""The String after performing replace : "" + res)"
4225,write Python3 code to demonstrate working of Rear word replace in String using rfind() + join(),"test_str = ""GFG is good""
print(""The original string is : "" + test_str) 
rep_str = ""best""
res = test_str[: test_str.rfind(' ')] + ' ' + rep_str 
print(""The String after performing replace : "" + res)"
4226,"write Python3 code to demonstrate Shift from Front to Rear in List using list slicing and ""+"" operator","test_list = [1, 4, 5, 6, 7, 8, 9, 12] 
print (""The original list is : "" + str(test_list)) 
test_list = test_list[1 :] + test_list[: 1] 
print (""The list after shift is : "" + str(test_list))"
4227,Python3 code to demonstrate Shift from Front to Rear in List using insert() + pop(),"test_list = [1, 4, 5, 6, 7, 8, 9, 12] 
print (""The original list is : "" + str(test_list)) 
test_list.insert(len(test_list) - 1, test_list.pop(0)) 
print (""The list after shift is : "" + str(test_list))"
4228,write Python3 code to demonstrate working of Sort by Rear Character in Strings List Using sort(),"def get_rear(sub): 
    return sub[-1] 
test_list = ['gfg', 'is', 'best', 'for', 'geeks'] 
print(""The original list is : "" + str(test_list)) 
test_list.sort(key = get_rear) 
print(""Sorted List : "" + str(test_list))"
4229,write Python3 code to demonstrate working of Sort by Rear Character in Strings List Using sorted() + lambda,"test_list = ['gfg', 'is', 'best', 'for', 'geeks'] 
print(""The original list is : "" + str(test_list)) 
res = sorted(test_list, key = lambda sub : sub[-1]) 
print(""Sorted List : "" + str(res))"
4230,write Python3 code to demonstrate Remove Rear K characters from String List using list comprehension + list slicing,"test_list = ['Manjeets', 'Akashs', 'Akshats', 'Nikhils'] 
print(""The original list : "" + str(test_list)) 
K = 4
res = [sub[ : len(sub) - K] for sub in test_list] 
print(""The list after removing last characters : "" + str(res))"
4231,write Python3 code to demonstrate Remove Rear K characters from String List using map() + lambda,"test_list = ['Manjeets', 'Akashs', 'Akshats', 'Nikhils'] 
print(""The original list : "" + str(test_list)) 
K = 4
res = list(map(lambda i: i[ : (len(i) - K)], test_list)) 
print(""The list after removing last characters : "" + str(res))"
4232,write Python3 code to demonstrate Kth Non-None String from Rear using next() + list comprehension,"test_list = ["""", """", ""Akshat"", ""Nikhil""] 
print(""The original list : "" + str(test_list)) 
K = 2
test_list.reverse() 
test_list = iter(test_list) 
for idx in range(0, K): 
    res = next(sub for sub in test_list if sub) 
print(""The Kth non empty string from rear is : "" + str(res))"
4233,write Python code to demonstrate Kth Non-None String from Rear using filter(),"test_list = ["""", """", ""Akshat"", ""Nikhil""] 
print(""The original list : "" + str(test_list)) 
K = 2
res = list (filter(None, test_list))[-K] 
print(""The Kth non empty string from rear is : "" + str(res))"
4234,write a program Creating a Dictionary  with Integer Keys,"Dict = {1: 'Geeks', 2: 'For', 3: 'Geeks'} 
print(""\nDictionary with the use of Integer Keys: "") 
print(Dict)"
4235,program Creating a Dictionary with Mixed keys,"Dict = {'Name': 'Geeks', 1: [1, 2, 3, 4]} 
print(""\nDictionary with the use of Mixed Keys: "") 
print(Dict)"
4236,write a program Creating an empty Dictionary,"Dict = {} 
print(""Empty Dictionary: "") 
print(Dict)"
4237,write a program Creating a Dictionary  with dict() method,"Dict = dict({1: 'Geeks', 2: 'For', 3:'Geeks'}) 
print(""\nDictionary with the use of dict(): "") 
print(Dict)"
4238,write a program Creating a Dictionary with each item as a Pair,"Dict = dict([(1, 'Geeks'), (2, 'For')]) 
print(""\nDictionary with each item as a pair: "") 
print(Dict)"
4239,write a program Creating a Nested Dictionary as shown in the below image,"Dict = {1: 'Geeks', 2: 'For', 
        3:{'A' : 'Welcome', 'B' : 'To', 'C' : 'Geeks'}} 
print(Dict)"
4240,write a program Creating a Dictionary,"Dict = {1: 'Geeks', 'name': 'For', 3: 'Geeks'} 
print(""Accessing a element using get:"") 
print(Dict.get(3))"
4241,write a python Creating a Dictionary and  Accessing element using key,"Dict = {'Dict1': {1: 'Geeks'}, 
    'Dict2': {'Name': 'For'}} 
print(Dict['Dict1']) 
print(Dict['Dict1'][1]) 
print(Dict['Dict2']['Name'])"
4242,write a program that uses delete function on  Dictionary,"Dict = { 5 : 'Welcome', 6 : 'To', 7 : 'Geeks', 
        'A' : {1 : 'Geeks', 2 : 'For', 3 : 'Geeks'}, 
        'B' : {1 : 'Geeks', 2 : 'Life'}} 
print(""Initial Dictionary: "") 
print(Dict) 
del Dict[6] 
print(""\nDeleting a specific key: "") 
print(Dict) 
del Dict['A'][2] 
print(""\nDeleting a key from Nested Dictionary: "") 
print(Dict)"
4243,write a rpogram Deleting an arbitrary key  using popitem() function in dictionary,"Dict = {1: 'Geeks', 'name': 'For', 3: 'Geeks'} 
pop_ele = Dict.popitem() 
print(""\nDictionary after deletion: "" + str(Dict)) 
print(""The arbitrary pair returned is: "" + str(pop_ele))"
4244,write a  program for Deleting entire Dictionary,"Dict = {1: 'Geeks', 'name': 'For', 3: 'Geeks'} 
Dict.clear() 
print(""\nDeleting Entire Dictionary: "") 
print(Dict)"
4245,write a  Python3 code to demonstrate  set difference in dictionary list  using list comprehension,"test_list1 = [{""HpY"" : 22}, {""BirthdaY"" : 2}, ] 
test_list2 = [{""HpY"" : 22}, {""BirthdaY"" : 2}, {""Shambhavi"" : 2019}] 
print (""The original list 1 is : "" + str(test_list1)) 
print (""The original list 2 is : "" + str(test_list2)) 
res = [i for i in test_list1 if i not in test_list2] + [j for j in test_list2 if j not in test_list1] 
print (""The set difference of list is : "" + str(res))"
4246,write Python code to demonstrate sort a list of dictionary where value date is in string,"ini_list = [{'name':'akash', 'd.o.b':'1997-03-02'}, 
            {'name':'manjeet', 'd.o.b':'1997-01-04'}, 
            {'name':'nikhil', 'd.o.b':'1997-09-13'}] 
print (""initial list : "", str(ini_list)) 
ini_list.sort(key = lambda x:x['d.o.b']) 
print (""result"", str(ini_list))"
4247,write a  Python3 code to demonstrate working of Convert Dictionaries List to Order Key Nested dictionaries Using loop + enumerate(),"test_list = [{""Gfg"" : 3, 4 : 9}, {""is"": 8, ""Good"" : 2}, {""Best"": 10, ""CS"" : 1}] 
print(""The original list : "" + str(test_list)) 
res = dict() 
for idx, val in enumerate(test_list): 
    res[idx] = val 
print(""The constructed dictionary : "" + str(res))"
4248,write Python3 code to demonstrate working of Convert Dictionaries List to Order Key Nested dictionaries Using dictionary comprehension + enumerate(),"test_list = [{""Gfg"" : 3, 4 : 9}, {""is"": 8, ""Good"" : 2}, {""Best"": 10, ""CS"" : 1}] 
print(""The original list : "" + str(test_list)) 
res = {idx : val for idx, val in enumerate(test_list)} 
print(""The constructed dictionary : "" + str(res))"
4249,write Python3 code to demonstrate working of Segregating key's value in list of dictionaries Using generator expression,"test_list = [{'gfg' : 1, 'best' : 2}, {'gfg' : 4, 'best': 5}] 
print(""The original list : "" + str(test_list)) 
res = [tuple(sub[""gfg""] for sub in test_list), 
    tuple(sub[""best""] for sub in test_list)] 
print(""Segregated values of keys are : "" + str(res))"
4250,write Python3 code to demonstrate working of Segregating key's value in list of dictionaries Using zip() + map() + values(),"test_list = [{'gfg' : 1, 'best' : 2}, {'gfg' : 4, 'best': 5}] 
print(""The original list : "" + str(test_list)) 
res = list(zip(*map(dict.values, test_list))) 
print(""Segregated values of keys are : "" + str(res))"
4251,write a  Python3 code to demonstrate working of Sort dictionaries list by Key's Value list index Using sorted() + lambda,"test_list = [{""Gfg"" : [6, 7, 8], ""is"" : 9, ""best"" : 10}, 
            {""Gfg"" : [2, 0, 3], ""is"" : 11, ""best"" : 19}, 
            {""Gfg"" : [4, 6, 9], ""is"" : 16, ""best"" : 1}] 
print(""The original list : "" + str(test_list)) 
K = ""Gfg""
idx = 2
res = sorted(test_list, key = lambda ele: ele[K][idx]) 
print(""The required sort order : "" + str(res))"
4252,write  Python3 code to demonstrate working of Sort dictionaries list by Key's Value list index Using sorted() + lambda (Additional parameter in case of tie),"test_list = [{""Gfg"" : [6, 7, 9], ""is"" : 9, ""best"" : 10}, 
            {""Gfg"" : [2, 0, 3], ""is"" : 11, ""best"" : 19}, 
            {""Gfg"" : [4, 6, 9], ""is"" : 16, ""best"" : 1}] 
print(""The original list : "" + str(test_list)) 
K = ""Gfg""
idx = 2
K2 = ""best""
res = sorted(sorted(test_list, key = lambda ele: ele[K2]), key = lambda ele: ele[K][idx]) 
print(""The required sort order : "" + str(res))"
4253,write a Python3 code to demonstrate working of Convert List of Dictionaries to List of Lists Using list comprehension,"test_list = [{'Nikhil' : 17, 'Akash' : 18, 'Akshat' : 20}, 
            {'Nikhil' : 21, 'Akash' : 30, 'Akshat' : 10}, 
            {'Nikhil' : 31, 'Akash' : 12, 'Akshat' : 19}] 
print(""The original list is : "" + str(test_list)) 
res = [[key for key in test_list[0].keys()], *[list(idx.values()) for idx in test_list ]] 
print(""The converted list : "" + str(res))"
4254,write a Python code demonstrate the working of sorted() with lambda,"lis = [{ ""name"" : ""Nandini"", ""age"" : 20}, 
{ ""name"" : ""Manjeet"", ""age"" : 20 },
{ ""name"" : ""Nikhil"" , ""age"" : 19 }]
print (""The list printed sorting by age: "")
print (sorted(lis, key = lambda i: i['age']))
print (""\r"")"
4255,write a Python3 code to demonstrate working of Extract dictionaries with values sum greater than K,"test_list = [{""Gfg"" : 4, ""is"" : 8, ""best"" : 9}, 
            {""Gfg"" : 5, ""is"": 8, ""best"" : 1}, 
            {""Gfg"" : 3, ""is"": 7, ""best"" : 6}, 
            {""Gfg"" : 3, ""is"": 7, ""best"" : 5}] 
print(""The original list : "" + str(test_list)) 
K = 15
res = [] 
for sub in test_list: 
    sum = 0
    for key in sub: 
        sum += sub[key] 
    if sum > K: 
        res.append(sub) 
print(""Dictionaries with summation greater than K : "" + str(res))"
4256,write Python3 program for illustration of values() method of dictionary,"dictionary = {""raj"": 2, ""striver"": 3, ""vikram"": 4} 
print(dictionary.values())"
4257,write Python program to illustrate enumerate function,"l1 = [""eat"",""sleep"",""repeat""] 
s1 = ""geek""
obj1 = enumerate(l1) 
obj2 = enumerate(s1) 
print (""Return type:"",type(obj1) )
print( list(enumerate(l1)) )
print( list(enumerate(s1,2)) )"
4258,write Python program to illustrate  enumerate function in loops,"l1 = [""eat"",""sleep"",""repeat""] 
for count,ele in enumerate(l1,100): 
    print (count,ele )"
4259,write Python3 code to demonstrate working of  Merge Python key values to list  Using setdefault() + loop,"test_list = [{'gfg' : 2, 'is' : 4, 'best' : 6}, 
            {'it' : 5, 'is' : 7, 'best' : 8}, 
            {'CS' : 10}] 
print(""The original list is : "" + str(test_list)) 
res = {} 
for sub in test_list: 
    for key, val in sub.items(): 
        res.setdefault(key, []).append(val) 
print(""The merged values encapsulated dictionary is : "" + str(res))"
4260,write Python3 code to demonstrate working of Merge Python key values to list Using list comprehension + dictionary comprehension,"test_list = [{'gfg' : 2, 'is' : 4, 'best' : 6}, 
            {'it' : 5, 'is' : 7, 'best' : 8}, 
            {'CS' : 10}] 
print(""The original list is : "" + str(test_list)) 
res = {key: list({sub[key] for sub in test_list if key in sub}) 
    for key in {key for sub in test_list for key in sub}} 
print(""The merged values encapsulated dictionary is : "" + str(res))"
4261,write Python3 code to demonstrate working of Merge List value Keys to Matrix Using loop + pop(),"test_dict = {'gfg' : [4, 5, 6], 
            'is' : [8, 8, 9], 
            'CS' : [1, 3, 8], 
            'Maths' : [1, 2]} 
print(""The original dictionary : "" + str(test_dict)) 
que_list = ['gfg', 'CS', 'Maths'] 
new_data = [test_dict.pop(ele) for ele in que_list] 
test_dict[""merge_key""] = new_data 
print(""The dictionary after merging : "" + str(test_dict))"
4262,write Python code to convert string to list,"def Convert_1(string): 
    li = list(string.split("" "")) 
    return li 
str1 = ""Geeks for Geeks""
print(Convert(str1))"
4263,Python code to convert string to list,"def Convert_2(string): 
    li = list(string.split(""-"")) 
    return li 
str1 = ""Geeks-for-Geeks""
print(Convert(str1))"
4264,write Python code to convert string to list character-wise,"def Convert_3(string): 
    list1=[] 
    list1[:0]=string 
    return list1 
str1=""ABCD""
print(Convert(str1))"
4265,write Python3 code to demonstrate convert list of strings to list of tuples Using map() + split() + tuple(),"test_list = ['4, 1', '3, 2', '5, 3'] 
print(""The original list : "" + str(test_list)) 
res = [tuple(map(int, sub.split(', '))) for sub in test_list] 
print(""The list after conversion to tuple list : "" + str(res))"
4266,write Python3 code to demonstrate convert list of strings to list of tuples Using map() + eval,"test_list = ['4, 1', '3, 2', '5, 3'] 
print(""The original list : "" + str(test_list)) 
res = list(map(eval, test_list)) 
print(""The list after conversion to tuple list : "" + str(res))"
4267,write Python3 code to demonstrate Combining tuples in list of tuples Using list comprehension,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')] 
print(""The original list : "" + str(test_list)) 
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
4268,"write Python3 code to demonstrate working of Add list elements to tuples list Using list comprehension + ""+"" operator","test_list = [(5, 6), (2, 4), (5, 7), (2, 5)] 
print(""The original list is : "" + str(test_list)) 
sub_list = [7, 2, 4, 6] 
res = [sub + tuple(sub_list) for sub in test_list] 
print(""The modified list : "" + str(res))"
4269,"write Python3 code to demonstrate working of Add list elements to tuples list Using list comprehension + ""*"" operator","test_list = [(5, 6), (2, 4), (5, 7), (2, 5)] 
print(""The original list is : "" + str(test_list)) 
sub_list = [7, 2, 4, 6] 
res = [(*sub, *sub_list) for sub in test_list] 
print(""The modified list : "" + str(res))"
4270,write Python3 code to demonstrate conversion of list of tuple to list of list using list comprehension + join(),"test_list = [('G', 'E', 'E', 'K', 'S'), ('F', 'O', 'R'), 
                            ('G', 'E', 'E', 'K', 'S')] 
print (""The original list is : "" + str(test_list)) 
res = [''.join(i) for i in test_list] 
print (""The list after conversion to list of string : "" + str(res))"
4271,write Python3 code to demonstrate conversion of list of tuple to list of list using map() + join(),"test_list = [('G', 'E', 'E', 'K', 'S'), ('F', 'O', 'R'), 
                            ('G', 'E', 'E', 'K', 'S')] 
print (""The original list is : "" + str(test_list)) 
res = list(map(''.join, test_list)) 
print (""The list after conversion to list of string : "" + str(res))"
4272,"write Python3 code to demonstrate working of Concatenating tuples to nested tuples using + operator + "", "" operator during initialization","test_tup1 = (3, 4), 
test_tup2 = (5, 6), 
print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2)) 
res = test_tup1 + test_tup2 
print(""Tuples after Concatenating : "" + str(res))"
4273,"write Python3 code to demonstrate working of Concatenating tuples to nested tuples Using "", "" operator during concatenation","test_tup1 = (3, 4) 
test_tup2 = (5, 6) 
print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2)) 
res = ((test_tup1, ) + (test_tup2, )) 
print(""Tuples after Concatenating : "" + str(res))"
4274,write Python code to demonstrate to remove the tuples if certain criteria met,"ini_tuple = [('b', 100), ('c', 200), ('c', 45), 
                        ('d', 876), ('e', 75)] 
print(""intial_list"", str(ini_tuple))
result = [i for i in ini_tuple if i[1] <= 100] 
print (""Resultant tuple list: "", str(result))"
4275,write Python code to demonstrate to remove the tuples if certain criteria met,"ini_tuple = [('b', 100), ('c', 200), ('c', 45), 
                        ('d', 876), ('e', 75)] 
print(""intial_list"", str(ini_tuple)) 
result = list(filter(lambda x: x[1] <= 100, ini_tuple)) 
print (""Resultant tuple list: "", str(result))"
4276,Python code to demonstrate to remove the tuples if certain criteria met,"ini_tuple = [('b', 100), ('c', 200), ('c', 45), 
                        ('d', 876), ('e', 75)] 
print(""intial_list"", str(ini_tuple)) 
result = [] 
for i in ini_tuple: 
    if i[1] <= 100: 
        result.append(i) 
print (""Resultant tuple list: "", str(result))"
4277,write Python code to demonstrate to remove the tuples if certain criteria met,"ini_tuple = [('b', 100), ('c', 200), ('c', 45), 
                        ('d', 876), ('e', 75)] 
print(""intial_list"", str(ini_tuple)) 
result = [] 
for i in ini_tuple: 
    if i[1] <= 100: 
        result.append(i) 
print (""Resultant tuple list: "", str(result))"
4278,write Python code to remove all strings from a list of tuples,"listOfTuples = [('string', 'Geeks'), (2, 225), (3, '111'), (4, 'Cyware'), (5, 'Noida')]	 
output = [tuple(j for j in i if not isinstance(j, str)) for i in listOfTuples] 
print(output)"
4279,write Python3 code to demonstrate working of Extract Tuples with all Numeric Strings Using all() + list comprehension + isdigit(),"test_list = [(""45"", ""86""), (""Gfg"", ""1""), (""98"", ""10""), (""Gfg"", ""Best"")] 
print(""The original list is : "" + str(test_list)) 
res = [sub for sub in test_list if all(ele.isdigit() for ele in sub)] 
print(""Filtered Tuples : "" + str(res))"
4280,write Python3 code to demonstrate working of Extract Tuples with all Numeric Strings Using lambda + filter() + isdigit(),"test_list = [(""45"", ""86""), (""Gfg"", ""1""), (""98"", ""10""), (""Gfg"", ""Best"")] 
print(""The original list is : "" + str(test_list)) 
res = list(filter(lambda sub : all(ele.isdigit() for ele in sub), test_list)) 
print(""Filtered Tuples : "" + str(res))"
4281,"Write a program which will find all such numbers which are divisible by 7 but are not a multiple of 5, between 2000 and 3200 (both included). The numbers obtained should be printed in a comma-separated sequence on a single line.","l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print ','.join(l)"
4282,Write a program which can compute the factorial of a given numbers. The results should be printed in a comma-separated sequence on a single line.,"def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)
x=int(raw_input())
print fact(x)"
4283,"With a given integral number n, write a program to generate a dictionary that contains (i, i*i) such that is an integral number between 1 and n (both included). and then the program should print the dictionary.","n=int(raw_input())
d=dict()
for i in range(1,n+1):
    d[i]=i*i
print d"
4284,Write a program which accepts a sequence of comma-separated numbers from console and generate a list and a tuple which contains every number.,"values=raw_input()
l=values.split("","")
t=tuple(l)
print l
print t"
4285,"Define a class which has at least two methods: getString: to get a string from console input
 Write a program that calculates and prints the value according to the given formula: Q = Square root of [(2 * C * D)/H]","class InputOutString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = raw_input()
strObj = InputOutString()
strObj.getString()
import math
c=50
h=30
value = []
items=[x for x in raw_input().split(',')]
for d in items:
    value.append(str(int(round(math.sqrt(2*c*float(d)/h)))))
print ','.join(value)"
4286,"Write a program which takes 2 digits, X,Y as input and generates a 2-dimensional array. The element value in the i-th row and j-th column of the array should be i*j.","input_str = raw_input()
dimensions=[int(x) for x in input_str.split(',')]
rowNum=dimensions[0]
colNum=dimensions[1]
multilist = [[0 for col in range(colNum)] for row in range(rowNum)]
for row in range(rowNum):
    for col in range(colNum):
        multilist[row][col]= row*col
print multilist"
4287,Write a program that accepts a comma separated sequence of words as input and prints the words in a comma-separated sequence after sorting them alphabetically.,"items=[x for x in raw_input().split(',')]
items.sort()
print ','.join(items)"
4288,Write a program that accepts sequence of lines as input and prints the lines after making all characters in the sentence capitalized.,"lines = []
while True:
    s = raw_input()
    if s:
        lines.append(s.upper())
    else:
        break;
for sentence in lines:
    print sentence"
4289,Write a program that accepts a sequence of whitespace separated words as input and prints the words after removing all duplicate words and sorting them alphanumerically.,"s = raw_input()
words = [word for word in s.split("" "")]
print "" "".join(sorted(list(set(words))))"
4290,Write a program which accepts a sequence of comma separated 4 digit binary numbers as its input and then check whether they are divisible by 5 or not. The numbers that are divisible by 5 are to be printed in a comma separated sequence.,"value = []
items=[x for x in raw_input().split(',')]
for p in items:
    intp = int(p, 2)
    if not intp%5:
        value.append(p)
print ','.join(value)"
4291,"Write a program, which will find all such numbers between 1000 and 3000 (both included) such that each digit of the number is an even number. The numbers obtained should be printed in a comma-separated sequence on a single line.","values = []
for i in range(1000, 3001):
    s = str(i)
    if (int(s[0])%2==0) and (int(s[1])%2==0) and (int(s[2])%2==0) and (int(s[3])%2==0):
        values.append(s)
print "","".join(values)"
4292,Write a program that accepts a sentence and calculate the number of letters and digits.,"s = raw_input()
d={""DIGITS"":0, ""LETTERS"":0}
for c in s:
    if c.isdigit():
        d[""DIGITS""]+=1
    elif c.isalpha():
        d[""LETTERS""]+=1
    else:
        pass
print ""LETTERS"", d[""LETTERS""]
print ""DIGITS"", d[""DIGITS""]"
4293,Write a program that accepts a sentence and calculate the number of upper case letters and lower case letters.,"s = raw_input()
d={""UPPER CASE"":0, ""LOWER CASE"":0}
for c in s:
    if c.isupper():
        d[""UPPER CASE""]+=1
    elif c.islower():
        d[""LOWER CASE""]+=1
    else:
        pass
print ""UPPER CASE"", d[""UPPER CASE""]
print ""LOWER CASE"", d[""LOWER CASE""]"
4294,Write a program that computes the value of a+aa+aaa+aaaa with a given digit as the value of a.,"a = raw_input()
n1 = int( ""%s"" % a )
n2 = int( ""%s%s"" % (a,a) )
n3 = int( ""%s%s%s"" % (a,a,a) )
n4 = int( ""%s%s%s%s"" % (a,a,a,a) )
print n1+n2+n3+n4"
4295,Use a list comprehension to square each odd number in a list. The list is input by a sequence of comma-separated numbers.,"values = raw_input()
numbers = [x for x in values.split("","") if int(x)%2!=0]
print "","".join(numbers)"
4296,Write a program to compute the frequency of the words from the input. The output should output after sorting the key alphanumerically.,"freq = {}  
line = raw_input()
for word in line.split():
    freq[word] = freq.get(word,0)+1
words = freq.keys()
words.sort()
for w in words:
    print ""%s:%d"" % (w,freq[w])"
4297,Write a method which can calculate square value of number,"def square(num):
    return num ** 2"
4298,Write a function te return cube of a number,"def cube(num):
    return num ** 3"
4299,"Define a class, which have a class parameter and have a same instance parameter.","class Person:    
    name = ""Person""
    def __init__(self, name = None):
        self.name = name
jeffrey = Person(""Jeffrey"")
print ""%s name is %s"" % (Person.name, jeffrey.name)
nico = Person()
nico.name = ""Nico""
print ""%s name is %s"" % (Person.name, nico.name)"
4300,Define a function which can compute the sum of two numbers.,"def SumFunction(number1, number2):
	return number1+number2"
4301,Define a function that can convert a integer into a string and print it in console.,"def printValue(n):
	print str(n)"
4302,Define a function that can convert a integer into a string and print it in console.,"def printValue(n):
	print str(n)"
4303,Define a function that can receive two integral numbers in string form and compute their sum and then print it in console.,"def printValue(s1,s2):
	print int(s1)+int(s2)"
4304,Define a function that can accept two strings as input and concatenate them and then print it in console.,"def printValue(s1,s2):
	print s1+s2"
4305,"Define a function that can accept two strings as input and print the string with maximum length in console. If two strings have the same length, then the function should print al l strings line by line.","def printValue(s1,s2):
	len1 = len(s1)
	len2 = len(s2)
	if len1>len2:
		print s1
	elif len2>len1:
		print s2
	else:
		print s1
		print s2"
4306,"Define a function that can accept an integer number as input and print the ""It is an even number"" if the number is even, otherwise print ""It is an odd number"".","def checkValue(n):
	if n%2 == 0:
		print ""It is an even number""
	else:
		print ""It is an odd number"""
4307,Define a function which can print a dictionary where the keys are numbers between 1 and 3 (both included) and the values are square of keys.,"def printDict():
	d=dict()
	d[1]=1
	d[2]=2**2
	d[3]=3**2
	print d"
4308,Define a function which can print a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys.,"def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print d"
4309,Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the values only.,"def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():	
		print v"
4310,Define a function which can generate a dictionary where the keys are numbers between 1 and 20 (both included) and the values are square of keys. The function should just print the keys only.,"def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for k in d.keys():	
		print k"
4311,Define a function which can generate and print a list where the values are square of numbers between 1 and 20 (both included).,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li"
4312,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the first 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li[:5]"
4313,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print the last 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li[-5:]"
4314,Define a function which can generate a list where the values are square of numbers between 1 and 20 (both included). Then the function needs to print all values except the first 5 elements in the list.,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li[5:]"
4315,Define a function which can generate and print a tuple where the value are square of numbers between 1 and 20 (both included).,"def printTuple():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print tuple(li)"
4316,"With a given tuple (1,2,3,4,5,6,7,8,9,10), write a program to print the first half values in one line and the last half values in one line.","tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print tp1
print tp2"
4317,"Write a program to generate and print another tuple whose values are even numbers in the given tuple (1,2,3,4,5,6,7,8,9,10).","tp=(1,2,3,4,5,6,7,8,9,10)
li=list()
for i in tp:
	if tp[i]%2==0:
		li.append(tp[i])
tp2=tuple(li)
print tp2"
4318,"Write a program which accepts a string as input to print ""Yes"" if the string is ""yes"" or ""YES"" or ""Yes"", otherwise print ""No"".","s= raw_input()
if s==""yes"" or s==""YES"" or s==""Yes"":
    print ""Yes""
else:
    print ""No"""
4319,"Write a program which can filter even numbers in a list by using filter function. The list is: [1,2,3,4,5,6,7,8,9,10].","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print evenNumbers"
4320,"Write a program which can map() to make a list whose elements are square of elements in [1,2,3,4,5,6,7,8,9,10].","li = [1,2,3,4,5,6,7,8,9,10]
squaredNumbers = map(lambda x: x**2, li)
print squaredNumbers"
4321,"Write a program which can map() and filter() to make a list whose elements are square of even number in [1,2,3,4,5,6,7,8,9,10].","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print evenNumbers"
4322,Write a program which can filter() to make a list whose elements are even number between 1 and 20 (both included).,"evenNumbers = filter(lambda x: x%2==0, range(1,21))
print evenNumbers"
4323,Write a program which can map() to make a list whose elements are square of numbers between 1 and 20 (both included).,"squaredNumbers = map(lambda x: x**2, range(1,21))
print squaredNumbers"
4324,Define a class named American which has a static method called printNationality.,"class American(object):
    @staticmethod
    def printNationality():
        print ""America""
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
4325,Define a class named American and its subclass NewYorker.,"class American(object):
    pass
class NewYorker(American):
    pass
anAmerican = American()
aNewYorker = NewYorker()
print anAmerican
print aNewYorker"
4326,Define a class named Circle which can be constructed by a radius. The Circle class has a method which can compute the area.,"class Circle(object):
    def __init__(self, r):
        self.radius = r
    def area(self):
        return self.radius**2*3.14
aCircle = Circle(2)
print aCircle.area()"
4327,Define a class named Rectangle which can be constructed by a length and width. The Rectangle class has a method which can compute the area.,"class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w
    def area(self):
        return self.length*self.width
aRectangle = Rectangle(2,10)
print aRectangle.area()"
4328,Define a class named Shape and its subclass Square. The Square class has an init function which takes a length as argument. Both classes have a area function which can print the area of the shape where Shape's area is 0 by default.,"class Shape(object):
    def __init__(self):
        pass
    def area(self):
        return 0
class Square(Shape):
    def __init__(self, l):
        Shape.__init__(self)
        self.length = l
    def area(self):
        return self.length*self.length
aSquare= Square(3)
print aSquare.area()"
4329,raise a RuntimeError exception.,raise RuntimeError('something wrong')
4330,Write a function to compute 5/0 and use try/except to catch the exceptions.,"def throws():
    return 5/0
try:
    throws()
except ZeroDivisionError:
    print ""division by zero!""
except Exception, err:
    print 'Caught an exception'
finally:
    print 'In finally block for cleanup'"
4331,Define a custom exception class which takes a string message as attribute.,"class MyError(Exception):
    def __init__(self, msg):
        self.msg = msg
error = MyError(""something wrong"")"
4332,"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the user name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress = raw_input()
pat2 = ""(\w+)@((\w+\.)+(com))""
r2 = re.match(pat2,emailAddress)
print r2.group(1)"
4333,"Assuming that we have some email addresses in the ""username@companyname.com"" format, write program to print the company name of a given email address. Both user names and company names are composed of letters only.","import re
emailAddress = raw_input()
pat2 = ""(\w+)@(\w+)\.(com)""
r2 = re.match(pat2,emailAddress)
print r2.group(2)"
4334,Write a program which accepts a sequence of words separated by whitespace as input to print the words composed of digits only.,"import re
s = raw_input()
print re.findall(""\d+"",s)"
4335,"Print a unicode string ""hello world"".","unicodeString = u""hello world!""
print unicodeString"
4336,Write a program to read an ASCII string and to convert it to a unicode string encoded by utf-8.,"s = raw_input()
u = unicode( s ,""utf-8"")
print u"
4337,Write a program to compute 1/2+2/3+3/4+...+n/n+1 with a given n input by console (n>0).,"n=int(raw_input())
sum=0.0
for i in range(1,n+1):
    sum += float(float(i)/(i+1))
print sum"
4338,Write a program to compute: f(n)=f(n-1)+100 when n>0 and f(0)=1,"def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100
n=int(raw_input())
print f(n)"
4339,Write a program to add an integer and [revious non negative integer,"Solution:
def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)"
4340,Write a program using list comprehension to print the Fibonacci Sequence in comma separated form with a given n input by console.,"def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)
n=int(raw_input())
values = [str(f(x)) for x in range(0, n+1)]
print "","".join(values)"
4341,write a program using generator to print the even numbers between 0 and n in comma separated form while n is input by console.,"def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1
n=int(raw_input())
values = []
for i in EvenGenerator(n):
    values.append(str(i))
print "","".join(values)"
4342,write a program using generator to print the numbers which can be divisible by 5 and 7 between 0 and n in comma separated form while n is input by console.,"def NumGenerator(n):
    for i in range(n+1):
        if i%5==0 and i%7==0:
            yield i
n=int(raw_input())
values = []
for i in NumGenerator(n):
    values.append(str(i))
print "","".join(values)"
4343,"write assert statements to verify that every number in the list [2,4,6,8] is even.","li = [2,4,6,8]
for i in li:
    assert i%2==0"
4344,write a program which accepts basic mathematic expression from console and print the evaluation result.,"expression = raw_input()
print eval(expression)"
4345,write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.,"import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1
    return index
li=[2,5,7,9,11,17,222]
print bin_search(li,11)
print bin_search(li,12)"
4346,write a binary search function which searches an item in a sorted list. The function should return the index of element to be searched in the list.,"import math
def bin_search(li, element):
    bottom = 0
    top = len(li)-1
    index = -1
    while top>=bottom and index==-1:
        mid = int(math.floor((top+bottom)/2.0))
        if li[mid]==element:
            index = mid
        elif li[mid]>element:
            top = mid-1
        else:
            bottom = mid+1
    return index"
4347,generate a random float where the value is between 10 and 100 using Python math module.,"import random
print random.random()*100"
4348,generate a random float where the value is between 5 and 95 using Python math module.,"import random
print random.random()*100-5"
4349,write a program to output a random even number between 0 and 10 inclusive using random module and list comprehension.,"import random
print random.choice([i for i in range(11) if i%2==0])"
4350,"write a program to output a random number, which is divisible by 5 and 7, between 0 and 10 inclusive using random module and list comprehension.","import random
print random.choice([i for i in range(201) if i%5==0 and i%7==0])"
4351,write a program to generate a list with 5 random numbers between 100 and 200 inclusive.,"import random
print random.sample(range(100), 5)"
4352,write a program to randomly generate a list with 5 even numbers between 100 and 200 inclusive.,"import random
print random.sample([i for i in range(100,201) if i%2==0], 5)"
4353,"write a program to randomly generate a list with 5 numbers, which are divisible by 5 and 7 , between 1 and 1000 inclusive.","import random
print random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5)"
4354,write a program to randomly print a integer number between 7 and 15 inclusive.,"import random
print random.randrange(7,16)"
4355,"write a program to compress and decompress the string ""hello world!hello world!hello world!hello world!"".","import zlib
s = 'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print t
print zlib.decompress(t)"
4356,"write a program to print the running time of execution of ""1+1"" for 100 times.","from timeit import Timer
t = Timer(""for i in range(100):1+1"")
print t.timeit()"
4357,"write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3,6,7,8]
shuffle(li)
print li"
4358,"write a program to shuffle and print the list [3,6,7,8].","from random import shuffle
li = [3,6,7,8]
shuffle(li)
print li"
4359,"write a program to generate all sentences where subject is in [""I"", ""You""] and verb is in [""Play"", ""Love""] and the object is in [""Hockey"",""Football""].","subjects=[""I"", ""You""]
verbs=[""Play"", ""Love""]
objects=[""Hockey"",""Football""]
for i in range(len(subjects)):
    for j in range(len(verbs)):
        for k in range(len(objects)):
            sentence = ""%s %s %s."" % (subjects[i], verbs[j], objects[k])
            print sentence"
4360,"Write a program to print the list after removing delete even numbers in [5,6,77,45,22,12,24].","li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print li"
4361,"By using list comprehension, write a program to print the list after removing delete numbers which are divisible by 5 and 7 in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for x in li if x%5!=0 and x%7!=0]
print li"
4362,"By using list comprehension, write a program to print the list after removing the 0th, 2nd, 4th,6th numbers in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print li"
4363,"By using list comprehension, write a program generate a 3*5*8 3D array whose each element is 0.","array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print array"
4364,"By using list comprehension, write a program to print the list after removing the 0th,4th,5th numbers in [12,24,35,70,88,120,155].","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print li"
4365,"By using list comprehension, write a program to print the list after removing the value 24 in [12,24,35,24,88,120,155].","li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print li"
4366,"With two given lists [1,3,6,78,35,55] and [12,24,35,24,88,120,155], write a program to make a list whose elements are intersection of the above given lists.","set1=set([1,3,6,78,35,55])
set2=set([12,24,35,24,88,120,155])
set1 &= set2
li=list(set1)
print li"
4367,"With a given list [12,24,35,24,88,120,155,88,120,155], write a program to print this list after removing all duplicate values with original order reserved.","def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)
    return newli
li=[12,24,35,24,88,120,155,88,120,155]
print removeDuplicate(li)"
4368,"Define a class Person and its two child classes: Male and Female. All classes have a method ""getGender"" which can print ""Male"" for Male class and ""Female"" for Female class.","class Person(object):
    def getGender( self ):
        return ""Unknown""
class Male( Person ):
    def getGender( self ):
        return ""Male""
class Female( Person ):
    def getGender( self ):
        return ""Female""
aMale = Male()
aFemale= Female()
print aMale.getGender()
print aFemale.getGender()"
4369,write a program which count and print the numbers of each character in a string input by console.,"dic = {}
s=raw_input()
for s in s:
    dic[s] = dic.get(s,0)+1
print '\n'.join(['%s,%s' % (k, v) for k, v in dic.items()])"
4370,write a program which accepts a string from console and print it in reverse order.,"s=raw_input()
s = s[::-1]
print s"
4371,write a program which accepts a string from console and print the characters that have even indexes.,"s=raw_input()
s = s[::2]
print s"
4372,"write a program which prints all permutations of [1,2,3]","import itertools
print list(itertools.permutations([1,2,3]))"
4373,Write a program to solve a classic ancient Chinese puzzle:  We count 35 heads and 94 legs among the chickens and rabbits in a farm. How many rabbits and how many chickens do we have?,"def solve(numheads,numlegs):
    ns='No solutions!'
    for i in range(numheads+1):
        j=numheads-i
        if 2*i+4*j==numlegs:
            return i,j
    return ns,ns"
4374,write a program to count characters in a string,"st = ""AmmarAdil""
count = {}
for a in st:
    if a in count:
        count[a]+=1
    else:
        count[a] = 1
print('Count', count)"
4375,write a program to print count of vowels in a string,"st = ""ammaradil""
vowle = ['a', 'e', 'i', 'o', 'u']
count = 0
for s in st:
    if s in vowle:
        count = count+1
print(""Count"", count)"
4376,write program to convert string to upper case,"st = ""ammar adil""
upper_st = st.upper()
print(""Upper Case"", upper_st)"
4377,write program to convert string to lower case,"st = ""AMMAR ADIL""
lower_st = st.lower()
print(""Lower Case"", lower_st)"
4378,write a program to find union of 2 arrays,"a = {1, 2, 3, 4}
b = {3, 4, 5, 6}
union_both = a.union(b)
print(""Union"", union_both)"
4379,write a program to find intersection,"a = {1, 2, 3, 4}
b = {3, 4, 5, 6}
intersection_both = a.intersection(b)
print(""Intersection"", intersection_both)"
4380,write a program to create print array in beautiful format,"a = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
for i in a:
    row = '|'
    for b in i:
        row = row + ' ' + str(b)
    print(row + ' ' + '|')"
4381,write a program to create zero matrix,"rows = 2
cols = 3
M = []
while len(M) < rows:
    M.append([])
    while len(M[-1]) < cols:
        M[-1].append(0.0)
print(""Zero Matrix"")
for i in range(rows):
    row = '|'
    for b in range(cols):
        row = row + ' ' + str(M[i][b])
    print(row + ' ' + '|')"
4382,write a program to create identity matrix with dimension provided,"dim = 3
M = []
while len(M) < dim:
    M.append([])
    while len(M[-1]) < dim:
        M[-1].append(0.0)
for i in range(dim):
    M[i][i] = 1.0
print('Identity Matrix')
for i in range(dim):
    row = '|'
    for b in range(dim):
        row = row + ' ' + str(M[i][b])
    print(row + ' ' + '|')"
4383,Write a program to copy a given array,"M = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
rows = len(M)
cols = len(M[0])
MC = []
while len(MC) < rows:
    MC.append([])
    while len(MC[-1]) < cols:
        MC[-1].append(0.0)
for i in range(rows):
    for j in range(cols):
        MC[i][j] = M[i][j]
print(""Copied Array"")
for i in range(rows):
    row = '|'
    for b in range(cols):
        row = row + ' ' + str(MC[i][b])
    print(row + ' ' + '|')"
4384,write a program to transpose a matrix,"M = [[1, 2, 3], [4, 5, 6], [7, 8, 9]]
if not isinstance(M[0], list):
    M = [M]
rows = len(M)
cols = len(M[0])
MT = []
while len(MT) < dim:
    MT.append([])
    while len(MT[-1]) < dim:
        MT[-1].append(0.0)
for i in range(rows):
    for j in range(cols):
        MT[j][i] = M[i][j]
print(""Transpose Array"")
for i in range(rows):
    row = '|'
    for b in range(cols):
        row = row + ' ' + str(MT[i][b])
    print(row + ' ' + '|')"
4385,"write a program to join all items in a tuple into a string, using a hash character as separator","myTuple = (""John"", ""Peter"", ""Vicky"")
x = ""#"".join(myTuple)
print(x)"
4386,write a program to remove spaces at the beginning and at the end of the string,"txt = ""     banana     ""
x = txt.strip()
print(""of all fruits"", x, ""is my favorite"")"
4387,write a program to remove the leading and trailing characters,"txt = "",,,,,rrttgg.....banana....rrr""
x = txt.strip("",.grt"")
print(x)"
4388,write a program to split a string into a list where each line is a list item,"txt = ""Thank you for the music\nWelcome to the jungle""
x = txt.splitlines()
print(x)"
4389,write a program to find index of a word in given string,"txt = ""Hello, welcome to my world.""
x = txt.index(""welcome"")
print(x)"
4390,write a program to find ceil of a number,"import math
number = 34.564
ce = math.ceil(number)
print('Ceil', ce)"
4391,write a program to find absoluute number of a given number,"import math
number = 34.564
fa = math.fabs(number)
print('Fabs', fa)"
4392,write a program to find factorinal of a number,"import math
number = 8
fa = math.factorial(number)
print('Factorial', fa)"
4393,write a program to find exponential of a number,"import math
number = 3
print('Exponential', math.exp(number))"
4394,write a program to find log of a number,"import math
num = 5
base = 7
print(""Log_x_b"", math.log(num, base))"
4395,write a program to find cosine of a number,"import math
num = 45
print(""Cosine"", math.cos(num))"
4396,write a program to find sin of a number,"import math
num = 45
print(""Sin"", math.sin(num))"
4397,write a program to find tangent of a number,"import math
num = 45
print(""Tangent"", math.tan(num))"
4398,Write a program to print bit wise AND of two numbers,"a = 60            # 60 = 0011 1100
b = 13            # 13 = 0000 1101
c = a & b        # 12 = 0000 1100
print(""AND"", c)"
4399,Write a program to print bit wise OR of two numbers,"a = 60
b = 13
c = a | b
print(""OR"", c)"
4400,Write a program to print bit wise XOR of two numbers,"a = 60
b = 13
c = a ^ b
print(""XOR"", c)"
4401,Write a program to calculate Binary Ones Complement of a number,"a = 60
c = ~a
print(""Binary Ones Complement"", c)"
4402,write a program to Binary Left Shift a number,"c = a << 2
print(""Binary Left Shift"", c)"
4403,one into lists given two merge to function python a Write,"def merge_lists(l1, l2):
    return l1 + l2"
4404,not or prime is number a whether check to program a Write,"num = 337
if num > 1:
   for i in range(2, num//2 + 1):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(f""{i} times {num//i} is {num}"")
           break
   else:
       print(f""{num} is a prime number"")
else:
   print(f""{num} is not a prime number"")"
4405,number given a of table multiplication the print to program a Write,"num = 9
for i in range(1, 11):
   print(f""{num} x {i} = {num*i}"")"
4406,"terms of number given for 2, of powers print to function python a Write","def two_power(terms):
    result = list(map(lambda x: 2 ** x, range(terms)))
    print(f""The total terms are: {terms}"")
    for i in range(terms):
       print(f""2^{i} = {result[i]}"")"
4407,list a in elements last and first swap to program a Write,"my_list = [1, 2, 3, 4, 5, 6]
my_list[0], my_list[-1] = my_list[-1], my_list[0]"
4408,"given is radius whose circle, a of area the find to function python a Write","def findArea(r): 
    PI = 3.142
    return PI * (r*r)"
4409,numbers natural n first of squares of sum the print to program a Write,"n = 21
sum_n = 0
for i in range(1, n+1):
    sum_n += i**2
print(sum_n)"
4410,list a in elements unique the print to program a Write,"my_list = [1, 2, 4, 5, 2, 3, 1, 5, 4, 7, 8, 2, 4, 5, 2, 7, 3]
print(set(my_list))"
4411,not or palindrome is number a whether print and check to program a Write,"num = 12321
temp = num
rev = 0
while num > 0:
    dig = num % 10
    rev = rev*10 + dig
    num//=10
if temp==rev :
    print(""The number is a palindrome!"")
else:
    print(""The number isn't a palindrome!"")"
4412,"times of number n value, given a prints that function a Write","def print_n(val, n):
    for _ in range(n):
        print(val)"
4413,sqaure of area the find to function a Write,"def square_area(a):
    return a*a"
4414,square a of perimeter the find to function a Write,"def square_perimeter(a):
    return 4*a"
4415,rectangle a of permieter the find to function a Write,"def rectangle_perimeter(l, b):
    return 2*(l+b)"
4416,numbers input of average the return and calculate to function a Write,"def calc_avg(*args):
    if len(args) > 0:
        return sum(args)/len(args)
    return None"
4417,"'_' with vowels the all replacing string, given a print to program a Write","st = ""Where is this going? Could you please help me understand!""
vowels = ""AEIOUaeiou""
for v in vowels:
    st = st.replace(v, '_')
print(st)"
4418,not or perfect if number a whether check to functio a Write,"def is_perfect(n):
    sum_ = 0
    for i in range(1, n//2 + 1):
        if n%i == 0:
            sum_+=i
    if sum_ == n:
        return True
    return False"
4419,"given. are width and hight whose triangle, a of area the print and find to program a Write","h = 12
w = 11
area = 0.5*h*w
print(area)"
4420,numbers two multiply to function lambda a Write,"multiply = lambda a, b: a*b"
4421,"angles three all it's given not, or valid is triangle a if check to to program a Write","def is_valid_triangle_angle(a, b c):
    if a+b+c == 180:
        return True
    return False"
4422,"length sides' three all it's given not, or valid is triangle a if check to to program a Write","def is_valid_triangle_length(a, b c):
    if a>0 and b>0 and c>0:
        if a+b > c and a+c > b and b+c > a:
            return True
    return False"
4423,user. from input is number The order. reverse in number a of digits print and extract to program a Write,"num = int(input(""Enter a number with multiple digit: ""))
n=0
while num>0:
    a = num%10
    num = num - a
    num = num/10
    print(int(a),end="""")
    n = n + 1"
4424,required steps of number minimum the returns and problem hanaoi of tower in disks of number takes that function a Write,"def hanoi(x):
    if x == 1:
        return 1
    else:
        return 2*hanoi(x-1) + 1"
4425,lists two of union the find to function lambda a Write,"union = lambda a, b: list(set(a)|set(b))"
4426,lists two of intersection the find to function lambda a Write,"intersection = lambda a, b: list(set(a)&set(b))"
4427,seperator for choice a also there's and strings input the concat to function python a Write,"def con_str(*args, sep = ' '):
  return sep.join(args)"
4428,dates. two between days of number calculate to program Python a write,"from datetime import date
f_date = date(2019, 4, 15) # YYYY/MM/DD
l_date = date(2020, 4, 15) # YYYY/MM/DD
delta = l_date - f_date
print(f'No of days between {f_date} and {l_date} is:{delta.days}')"
4429,strings. JSON into objects Python convert to program Python a write,"import json
python_dict =  {""name"": ""David"", ""age"": 6, ""class"":""I""}
json_dict = json.dumps(python_dict, sort_keys=True, indent=4)
print(f""json dict : {json_dict}"")"
4430,list a from duplicates remove to program Python a write,"a = [10,20,30,20,10,50,60,40,80,50,40]
dup_items = set()
uniq_items = []
for x in a:
    if x not in dup_items:
        uniq_items.append(x)
        dup_items.add(x)
print(f'dup_items:{dup_items}')"
4431,list multiple create to program Python a write,"obj = {}
for i in range(1, 11):
    obj[str(i)] = []
print(f'create multiple list:{obj}')"
4432,dictionary a in value minimum and maximum the Get to program python a write,"my_dict = {'x':500, 'y':5874, 'z': 560}
key_max = max(my_dict.keys(), key=(lambda k: my_dict[k]))
key_min = min(my_dict.keys(), key=(lambda k: my_dict[k]))
print('Maximum Value in a dictionary: ',my_dict[key_max])
print('Minimum Value in a dictionary: ',my_dict[key_min])"
4433,condition a for nothing do to program python a write,"if 1 + 1 == 2:
    pass # Nothing"
4434,scope global and enclosing explain to program python a write,"x = 'global'
def f():
    x = 'enclosing'
    def g():
        print(x)
    g()
    return x
obj1 = f()
print('explain global scope:',obj1)"
4435,scope global and local expain to program python a write,"def f1():
    x = 'enclosing'
    def g():
        x = 'local'
        return x
    x=g()
    return x
obj2 = f1()
print('explain local scope:',obj2)"
4436,matching for expression regular of use make to program python a write,"s = 'foo123bar'
m = re.findall('123', s)
print('find the number position:',m)"
4437,lower to string uppercase convert to program python a write,"a = 'STRING'
print(f'convert lowercase to uppercase:{a.lower()}')"
4438,Root Square the Find to Program Python a write,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
4439,Miles to Kilometers Convert to Program Python a write,"kilometers = 10.0
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
4440,Even or Odd is Number a if Check to Program Python,"num = 100
if (num % 2) == 0:
   print(""{0} is Even"".format(num))
else:
   print(""{0} is Odd"".format(num))"
4441,elements of list for upper to case lower convert to program python a write,"x = ['ab', 'cd']
for i in x:
    print(i.upper())"
4442,taken time the calculate to program python a write,"from time import localtime
activities = {8: 'Sleeping',
              9: 'Commuting',
              17: 'Working',
              18: 'Commuting',
              20: 'Eating',
              22: 'Resting' }
time_now = localtime()
hour = time_now.tm_hour
for activity_time in sorted(activities.keys()):
    if hour < activity_time:
        print (activities[activity_time])
        break
else:
    print ('Unknown, AFK or sleeping!')"
4443,file text the in key a search to program python a write,"fname = 'sample.txt'
l='keyword' # Enter letter to be searched
k = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        for i in words:
            if(i==l):
                k=k+1
print(""Occurrences of the letter:"",k)"
4444,values list two multiple to program python a write,"l1=[1,2,3]
l2=[4,5,6]
print('multiply two list values:',[x*y for x in l1 for y in l2])"
4445,‘l’. list given a from integers negative only out pick to comprehension list the write,"l1=[1,2,3,-4,-8]
print('negative integers:', [x for x in l1 if x<0])"
4446,method zip python using list two add to program python a write,"l1=[10, 20, 30]
l2=[-10, -20, -30]
l3=[x+y for x, y in zip(l1, l2)]
print('added two list:',l3)"
4447,cube its and number for comprehension list a write,"l=[1, 2, 3, 4, 5, 6, 7, 8, 9]
print([x**3 for x in l])"
4448,vv and columns into rows printing for comprehension list a write,"l=[[1 ,2, 3], [4, 5, 6], [7, 8, 9]]
print([[row[i] for row in l] for i in range(3)])"
4449,function lambda python use to program python a write,"lamb = lambda x: x ** 3
print(lamb(5))"
4450,than less or equal or than greater are numbers two check to python a write,"def maximum(x, y):
    if x > y:
        return x
    elif x == y:
        return 'The numbers are equal'
    else:
        return y
print(maximum(2, 3))"
4451,element dictionary an delete to program python a write,"a={1:5,2:3,3:4}
a.pop(3)
print(a)"
4452,not or equal are lists two check to program python a write,"a=[1, 4, 3, 5, 2]
b=[3, 1, 5, 2, 4]
print(a==b)"
4453,elements unqiue of set the sum to program python a write,"a={5,6,7}
print(sum(a,5))"
4454,code catch try implement to program python a write,"try:
    s={5,6}
    s*3
except Exception as e:
    print(e)"
4455,python in split to program python a write,"print('abcdefcdghcd'.split('cd', 2))"
4456,string to title add to program python a write,print('ab cd-ef'.title())
4457,string of lenght equal print to program python a write,print('ab'.zfill(5))
4458,num/int an is check to program python a write,print('11'.isnumeric())
4459,num/int are all is check to program python a write,"print('ab,12'.isalnum())"
4460,string f use to program python a write,"var1 = 'python language'
print(f'f-string is an good feature in {var1}')"
4461,generator the explain to program python a write,"def f11(x):
    yield x+1
g=f11(8)
print(next(g))"
4462,1 to space blank replace to program python a write,"a = re.compile('[0-9]')
z= a.findall('3 trees')
print(z)"
4463,directory working current print to program python a write,"import os
print(os.getcwd())"
4464,string a of value ascii the print to program python a write,print([ord(ch) for ch in 'abc'])
4465,1 to space blank replace to program python a write,"my_string = 'balaji'
k = [print(i) for i in my_string if i not in ""aeiou""]
print('Not a vowel',k)"
4466,number of range a square and add to program python a write,x = [i**+1 for i in range(3)]; print(x)
4467,1 to space blank replace to program python a write,"print([i+j for i in ""abc"" for j in ""def""])"
4468,date todays print to program python a write,"tday=datetime.date.today()
print(tday)"
4469,immutable are tuple check to program python a write,"a=(1,2,3)
try:
    a = a+1
except Exception as e:
    print(e)"
4470,characters each of len print to program python a write,"words = ['cat', 'window', 'defenestrate']
for w in words:
    print(w, len(w))"
4471,comprehensive list using sort to program python a write,"pairs = [(1, 'one'), (2, 'two'), (3, 'three'), (4, 'four')]
pairs.sort(key=lambda pair: pair[1])
print(pairs)"
4472,"argument the as provided is n where number, fibonacci nth the print to function python recursive a write","def fibonacci_recursive(n):
   if n <= 1:
       return n
   else:
       return (recur_fibo(n-1) + recur_fibo(n-2))"
4473,contents its print and path file input given the read would that function python a write,"def read_and_print_file(filepath):
    with open(filepath, ""r"") as infile:
        print( infile.read() )"
4474,loop for a using integers positive n first the print would that program python a write,"n = 62
for num in range(n):
    print(num)"
4475,"input the is n where numbers, natural n first of sum the return would that function python a write","def sum_first_n(n):
    return ( n * (n+1) ) // 2"
4476,number input given a of square the returns that function python a write,"def square(x):
    return x**2"
4477,input given the prints and input user for asks that program python a write,"a = input(""User Input"")
print(a)"
4478,deviation standard and mean given the by list given the in numbers all scales and shifts function python a write,"def shift_and_scale(list_of_nums, mean, std):
    return [ (x-mean) / std for x in list_of_nums ]"
4479,values variable swap would that program python a write,"a = 10
b = 15
a, b = b, a"
4480,values and keys its prints and dictionary a over iterates that program python a write,"a = {""a"":1, ""b"":2, ""c"":3, ""d"":4}
for k, v in a.items():
    print(k, v)"
4481,character given a of value ASCII the print would that function python a write,"def print_ascii(char):
    print(ord(char))"
4482,loop while a using number given the to equal or than less numbers natural out prints that program python a write,"input_num = 27
while input_num:
    print(input_num)
    input_num -= 1"
4483,"0 is number second the if None, returns function The answer. the returns and second the by number first the divides function The numbers. two takes that function python a write","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
4484,list a in numbers of median the return to function a Write,"def cal_median(num_list:list)->float:
    if num_list:
        if len(num_list)%2 != 0:
            return sorted(num_list)[int(len(num_list)/2) - 1]
        else:
            return (sorted(num_list)[int(len(num_list)/2) - 1] + sorted(num_list)[int(len(num_list)/2)])/2
    else:
        return None"
4485,0 = c + bx + ax**2 equation quadratic a of roots the of product the return to function a Write,"def prod_of_roots(a:float,b:float):
    if a:
        return -b/a
    else:
        return None"
4486,sides parallel between h height and b base a base with trapezium a of area the return to function a Write,"def cal_area_trapezium(a,b,h):
    return h*(a+b)/2"
4487,square a of perimeter the return to function a Write,"def cal_perimeter_square(side):
    return 4*side"
4488,cylinder a of area surface lateral the return to function a Write,"def cal_cylinder_lat_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius*height"
4489,a side of cube a of area surface total the return to function a Write,"def cal_surface_area_cube(a):
    return 6*(a**2)"
4490,cylinder a of area surface total the return to function a Write,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
4491,cone a of area surface lateral the return to function a Write,"def cal_cone_lateral_surf_area(height,radius):
    pi=3.14
    return pi*radius*(((height**2)+(radius**2))**(1/2))"
4492,cone a of volume the return to function a Write,"def cal_cone_volume(height,radius):
    pi=3.14
    return pi*(radius**2)*height/3"
4493,time given in travelled distance of based object moving of speed the return to function a Write,"def cal_speed(distance:float,time:float)->float:
    return distance/time"
4494,time given and speend on based object moving a by covered distance the return to function a Write,"def cal_distance(time:float,speed:float)->float:
    return time*speed"
4495,time given in travelled distance of based object moving of given a by taken time the return to function a Write,"def cal_time(distance:float,speed:float)->float:
    return distance/speed"
4496,list given a in parallel in resistances of resistance total the calculate to function a Write,"def cal_total_res_in_parallel(res_list:list)->float:
    return sum([1/r for r in res_list])"
4497,list given a in series in resistances of resistance total the calculate to function a Write,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
4498,R radius and M mass of ring a of inertia of moment the calculate to function a Write,"def cal_mi_ring(mass:float,radius:float)->float:
    return mass*(radius**2)"
4499,R radius and M mass of sphere a of inertia of moment the calculate to function a Write,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
4500,"given are T Temperatue and V, Volume - equation gas ideal on based gas ideal of P pressure the calculate to function a Write","def find_pressure_of_ideal_gas(volume:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/volume"
4501,given T Tempreature and P Pressure equation gas ideal on based gas ideal of V volume the calculate to function a Write,"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/pressure"
4502,"a acceleration and t time u, velocity initial with object an of displacement the calculate to function a Write","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
4503,v velocity and m mass of object an of energy kinetic the calculate to function a Write,"def cal_ke(mass:float,velocity:float)->float:
    return (mass*(velocity)**2)/2"
4504,h height at m mass of object an of energy potential the calculate to function a Write,"def cal_pe(mass:float,height:float)->float:
    g = 9.8
    return (mass*g*height)"
4505,apart d distance a at q2 and q1 charge with particles charged two between force electrostatic the calculate to function a Write,"def cal_electrostatic_force(q1,q2,d):
    k = 9*(10**9)
    return (k*q1*q2)/(d**2)"
4506,volume and mass given density the calculate to function a Write,"def cal_density(mass,volume):
    return (mass/volume)"
4507,"temprature converted the Return     celsius
 to fahrenheit or 'f' fahrenheit to 'c' celsius temprature the convert to function a Write","def temp_converter(temp,temp_given_in = 'f'):
    if temp_given_in.lower() == 'f': # Convert to C
        return (temp - 32) * (5/9)
    else: # Convert to F
        return (temp * 9/5) + 32"
4508,Matrix of Column Kth Get to code Python,"def kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2):
    print(""The original list is : "" + str(test_list))
    K =k
    res = list(zip(*test_list)[K])
    print(""The Kth column of matrix is : "" + str(res))"
4509,recursion using subarrays possible all print to code python,"def printSubArrays(arr, start, end):
    if end == len(arr):
        return
    elif start > end:
        return printSubArrays(arr, 0, end + 1)
    else:
        print(arr[start:end + 1])
        return printSubArrays(arr, start + 1, end)
arr = [1, 2, 3]
printSubArrays(arr, 0, 0)"
4510,Recursion using list nested of sum find to Program Python,"total = 0
def sum_nestedlist(l):
    global total
    for j in range(len(l)):
        if type(l[j]) == list:
            sum_nestedlist(l[j])
        else:
            total += l[j]
sum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])
print(total)"
4511,recursion using number of power find to program python,"def power(N, P):
    if (P == 0 or P == 1):
        return N
    else:
        return (N * power(N, P - 1))
print(power(5, 2))"
4512,sort stooge implement to program python,"def stoogesort(arr, l, h):
    if l >= h:
        return
    if arr[l] > arr[h]:
        t = arr[l]
        arr[l] = arr[h]
        arr[h] = t
    if h - l + 1 > 2:
        t = (int)((h - l + 1) / 3)
        stoogesort(arr, l, (h - t))
        stoogesort(arr, l + t, (h))
        stoogesort(arr, l, (h - t))
arr = [2, 4, 5, 3, 1]
n = len(arr)
stoogesort(arr, 0, n - 1)
for i in range(0, n):
    print(arr[i], end= \' \')"
4513,angle. given a for time find to program 3 Python,"def calcAngle(hh, mm):
    hour_angle = 0.5 * (hh * 60 + mm)
    minute_angle = 6 * mm
    angle = abs(hour_angle - minute_angle)
    angle = min(360 - angle, angle)
    return angle"
4514,minute and hand hour between angle when time all print to function python,"def printTime(theta):
    for hh in range(0, 12):
        for mm in range(0, 60):
            if (calcAngle(hh, mm) == theta):
                print(hh, "":"", mm, sep="""")
                return
    print(""Input angle not valid."")
    return
theta = 90.0
printTime(theta)"
4515,called is function a times of number count to function python a write,"def counter(fn):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count += 1
        print(f'Function {fn.__name__} was called {count} times.')
        return fn(*""args, **kwargs)    
    return inner"
4516,list the from items duplicate remove to function python a write,"def remove_duplicatesinlist(lst):
    return len(lst) == len(set(lst))"
4517,zip using lists multiple map to function python a write,"def map_values(*args):
  return set(zip(*args))"
4518,list a in numbers even find to comprehension list using function python a write,"def find_evennumbers(input_list):
  list_using_comp = [var for var in input_list if var % 2 == 0] 
  return list_using_comp"
4519,string a in character biggest the find to program python a write,"bigChar = lambda word: reduce(lambda x,y: x if ord(x) > ord(y) else y, word)"
4520,"n position at starting slice empty the to advance         deque
 zero-length a into iterator entire the feed         speed.
 C at iterators consume that functions Use     ahead
 n-steps iterator the advance to function python a write","def consume(iterator, n=None):
    import itertools
    from collections import deque
    ""Advance the iterator n-steps ahead. If n is None, consume entirely.""
    if n is None:
        deque(iterator, maxlen=0)
    else:
        next(itertools.islice(iterator, n, n), None)"
4521,value default a or item nth return to function python a write,"def nth(iterable, n, default=None):
    from itertools import islice
    return next(islice(iterable, n, None), default)"
4522,true is predicate the times many how count to function python a write,"def quantify(iterable, pred=bool):
    return sum(map(pred, iterable))"
4523,function map() built-in of behavior the emulate to function python a write,"def pad_none(iterable):
    """"""Returns the sequence elements and then returns None indefinitely.
    Useful for emulating the behavior of the built-in map() function.
    """"""
    from itertools import chain, repeat
    return chain(iterable, repeat(None))"
4524,times n elements sequence the return to function python a write,"def ncycles(iterable, n):
    from itertools import chain, repeat
    return chain.from_iterable(repeat(tuple(iterable), n))"
4525,"Gxx"" DEF ABC --> 'x') 3, grouper('ABCDEFG',     blocks
 or chunks fixed-length into data collect to function python a write","def grouper(iterable, n, fillvalue=None):
    from itertools import zip_longest
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)"
4526,"9 7 5 3 1  and   8 6 4 2 0 --> range(10)) partition(is_odd,     entries
 true and entries false into particition entries return and predicate a use to function python a write","def partition(pred, iterable):
    from itertools import filterfalse, tee
    t1, t2 = tee(iterable)
    return filterfalse(pred, t1), filter(pred, t2)"
4527,"r) itertools.permutations(iterable, from selection random return to function python a write","def random_permutation(iterable, r=None):
    import random
    pool = tuple(iterable)
    r = len(pool) if r is None else r
    return tuple(random.sample(pool, r))"
4528,x than greater value leftmost find to function python a write,"def find_gt(a, x):
    from bisect import bisect_right 
    i = bisect_right(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
4529,x to equal or than greater item leftmost find to function python a write,"def find_ge(a, x):
    from bisect import bisect_left 
    i = bisect_left(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
4530,content its print and file CSV a read to function python a write,"def read_csv(filename):
    import csv
    with open(filename, newline='') as f:
        reader = csv.reader(f)
        for row in reader:
            print(row)"
4531,list the of length returns that function a Write,"def list_length(l):
    return len(l)"
4532,wise element lists two merge to function a Write,"def merge_lists(l1:list, l2:list):
    return list(zip(l1,l2))"
4533,lists two append to function a Write,"def append_lists(l1:list, l2:list)->list:
    return l1.extend(l2)"
4534,wise element lists two adds to function a Write,"def adds_listelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2)]"
4535,odd are numbers if only wise element lists two multiplies to function a Write,"def adds_listoddelements(l1:list, l2:list):
    return [i*j for i, j in zip(l1,l2) if i*j%2 == 1]"
4536,list of elements to power n with elements of list returns that function a Write,"def n_power(l1:list, power:int)->list:
    return [i**power for i in l1]"
4537,input the of value tan of derivative returns that function a Write,"def derivative_tan(x:float)-> float:
    import math
    return (1/math.cos(x))**2"
4538,function a of log returns that function a Write,"def log(x:float)->float:
    import math
    return math.log(x)"
4539,collector garbage a runs returns that function a Write,"def clear_memory():
    import gc
    gc.collect()"
4540,Repetations over transaction for taken time total the averaging fn Function  by transaction any perform to taken time average the calculates that function a Write,"def time_it(fn, *args, repetitons= 1, **kwargs):
    import time
    total_time = []
    for _ in range(repetitons):
        start_time = time.perf_counter()
        fn(*args,**kwargs)
        end_time = time.perf_counter()
        ins_time = end_time - start_time
        total_time.append(ins_time)
    return sum(total_time)/len(total_time)"
4541,dictionary a inside  value a of instances of no count to identify to function a Write,"def count_value(d:dict, value)->bool:
    return list(v == value for v in dict.values()).count(True)"
4542,not or tuple a inside present is value if identify to function a Write,"def check_tuplevalue(l:tuple, value)->bool:
    return value in l"
4543,string uppercase returns that function a Write,"def str_uppercase(s:str):
    return s.upper()"
4544,characters special all removes that function a Write,"def clean_str(s):
    import re
    return re.sub('[^A-Za-z0-9]+', '', s)"
4545,ascending sorted list a returns that function a Write,"def ascending_sort(l:list):
    sorted(l, reverse=False)"
4546,string of elements the splits that function a Write,"def split_elements(s:str, seperator)-> list:
    return s.split(seperator)"
4547,list the in elements all of sum returns that function a Write,"def sum_elements(l:list):
    return sum(l)"
4548,list a in number largest the find to program a write 3,"list1 = [10, 20, 4, 45, 99] 
list1.sort() 
print(""Largest element is:"", list1[-1])"
4549,List a in Numbers Even print to program a write 4,"list1 = [10, 21, 4, 45, 66, 93] 
for num in list1: 
    if num % 2 == 0: 
       print(num, end = "" "")"
4550,range given in Numbers negative print to program a write 5,"start, end = -4, 19
for num in range(start, end + 1): 
    if num < 0: 
        print(num, end = "" "")"
4551,tuples of list a from tuples empty remove to program  a write 7,"def Remove(tuples): 
    tuples = filter(None, tuples) 
    return tuples"
4552,Code Driver,"tuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  
          ('krishna', 'akbar', '45'), ('',''),()] 
print Remove(tuples)"
4553,N size of chunks into list a break to program a write 8,"l = [1, 2, 3, 4, 5, 6, 7, 8, 9]  
n = 4 
x = [l[i:i + n] for i in range(0, len(l), n)]  
print(x)"
4554,dictionary flat to list key-values convert to program a write 12,"from itertools import product 
test_dict = {'month' : [1, 2, 3], 
             'name' : ['Jan', 'Feb', 'March']} 
print(""The original dictionary is : "" + str(test_dict)) 
res = dict(zip(test_dict['month'], test_dict['name'])) 
print(""Flattened dictionary : "" + str(res))"
4555,time and date current get to program a write 17,"import datetime  
current_time = datetime.datetime.now()  
print (""Time now at greenwich meridian is : "" , end = """")  
print (current_time)"
4556,"PM remove and hours to 12 add         
    12 are elements two first and PM is     
 time of elements two last if Checking     
     AM the remove     
 12 are elements two first and AM is     
 time of elements two last if Checking     
 format hour 24 to hour 12 from time convert to program a write 18","def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
4557,date today's Get,presentday = datetime.now() # or presentday = datetime.today()
4558,"string to them converting by need the 
 to according date format to is strftime()","print(""Yesterday = "", yesterday.strftime('%d-%m-%Y')) 
print(""Today = "", presentday.strftime('%d-%m-%Y')) 
print(""Tomorrow = "", tomorrow.strftime('%d-%m-%Y'))"
4559,alphabets and numbers except characters the all remove to program a write 21,import re
4560,string final printing,"print (""final string"", result)"
4561,code Driver,"dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
print(Merge(dict1, dict2))
print(dict2)"
4562,string a in letters duplicate all delete to program a write 24,"def removeDuplicate(str): 
    s=set(str) 
    s="""".join(s) 
    print(""Without Order:"",s) 
    t="""" 
    for i in str: 
        if(i in t): 
            pass
        else: 
            t=t+i 
        print(""With Order:"",t) 
str=""helloworld""
removeDuplicate(str)"
4563,"string initializing 
 String in character frequency Maximum print to program a write 25","test_str = ""Helloworld""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)  
print (""The maximum of all characters in Helloworld is : "" + str(res))"
4564,not or binary is string a if check to program a write 27,"def check(string) : 
    p = set(string) 
    s = {'0', '1'} 
    if s == p or p == {'0'} or p == {'1'}: 
        print(""Yes"") 
    else : 
        print(""No"")"
4565,not or Heterogram is string given a whether check to program a write 28,"def heterogram(input): 
     alphabets = [ ch for ch in input if ( ord(ch) >= ord('a') and ord(ch) <= ord('z') )] 
     if len(set(alphabets))==len(alphabets): 
         print ('Yes') 
     else: 
         print ('No')"
4566,dictionary. a in exists already key given a whether check to program a write 29,"def checkKey(dict, key): 
    if key in dict.keys(): 
        print(""Present, "", end ="" "") 
        print(""value ="", dict[key]) 
    else: 
        print(""Not present"")"
4567,"list initializing list
 A From Vowel with starting words extract that program a write 31","test_list = [""have"", ""a"", ""good"", ""one""]"
4568,result printing,"print(""The extracted words : "" + str(res))"
4569,string of words reverse to program a write 33,"def rev_sentence(sentence):  
    words = sentence.split(' ')  
    reverse_sentence = ' '.join(reversed(words))  
    return reverse_sentence  
if __name__ == ""__main__"":  
    input = 'have a good day'
    print (rev_sentence(input))"
4570,"string initializing 
 pair character every after character insert program a write 36","test_str = ""HellowWorld""
print(""The original string is : "" + test_str) 
res = ', '.join(test_str[i:i + 2] for i in range(0, len(test_str), 2)) 
print(""The string after inserting comma after every character pair : "" + res)"
4571,string a from character indexed i-th remove to program a write 37,"def remove(string, i):  
    a = string[ : i]  
    b = string[i + 1: ] 
    return a + b"
4572,result printing,"print(""The minimum occurring element is : "" + str(tar_ele))"
4573,"common one if             
 list 2nd the in traverse         common
 is element any if find and lists 2 check to program a write 40","def common_data(list1, list2): 
    result = False
    for x in list1: 
        for y in list2: 
            if x == y: 
                result = True
                return result  
    return result"
4574,miles to kilometers convert to program a write 43,"kilometers = float(input('How many kilometers?: '))  
conv_fac = 0.621371  
miles = kilometers * conv_fac  
print('%0.3f kilometers is equal to %0.3f miles' %(kilometers,miles))"
4575,Fahrenheit to Celsius convert to program a write 44,"celsius = float(input('Enter temperature in Celsius: '))  
fahrenheit = (celsius * 1.8) + 32  
print('%0.1f  Celsius is equal to %0.1f degree Fahrenheit'%(celsius,fahrenheit))"
4576,numnber prime a is number the if check to program a write 47,"num = int(input(""Enter a number: ""))  
if num > 1:  
   for i in range(2,num):  
       if (num % i) == 0:  
           print(num,""is not a prime number"")  
           print(i,""times"",num//i,""is"",num)  
           break  
   else:  
       print(num,""is a prime number"")  
else:  
   print(num,""is not a prime number"")"
4577,interval an between numbers prime all print to program a write 48,"lower = int(input(""Enter lower range: ""))  
upper = int(input(""Enter upper range: ""))  
for num in range(lower,upper + 1):  
   if num > 1:  
       for i in range(2,num):  
           if (num % i) == 0:  
               break  
       else:  
           print(num)"
4578,interval an in number Armstrong find to program a write 53,"lower = int(input(""Enter lower range: ""))  
upper = int(input(""Enter upper range: ""))  
for num in range(lower,upper + 1):  
   sum = 0  
   temp = num  
   while temp > 0:  
       digit = temp % 10  
       sum += digit ** 3  
       temp //= 10  
       if num == sum:  
            print(num)"
4579,character a of value ascii find to program python 58,"c = input(""Enter a character: "")  
print(""The ASCII value of '"" + c + ""' is"",ord(c))"
4580,"words sorted the display 
  list the sort 
  words of list a into string the breakdown order
 alphabetic in words sort to program  a write 60","my_str = input(""Enter a string: "")  
words = my_str.split()  
words.sort()  
for word in words:  
   print(word)"
4581,position even on present array an of elements the print to program a write 61,"arr = [1, 2, 3, 4, 5];     
print(""Elements of given array present on even position: "");    
for i in range(1, len(arr), 2):    
    print(arr[i]);"
4582,"columns through iterate    rows
 through iterate","for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
4583,"columns through iterate    rows
 through iterate","for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
4584,string a from punctuation remove to program a write 68,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
4585,interest compound find to program a write 72,"p = float(input(""Enter the principle amount : ""))
r = float(input(""Enter the rate of interest : ""))
t = float(input(""Enter the time in the years: ""))"
4586,"row ending     (*)
 stars of pattern a print to program a write 73","for row in range (0,5):
    for column in range (0, row+1):
        print (""*"", end="""")
    print('\r')"
4587,N to 1 from numbers the of value binary the print to program a write 76,"n = int(input(""Enter the value of N: ""))
for i in range(1, n+1):
    print(""Binary value of "", i, "" is: "", bin(i))"
4588,binary in integer an represent to necessary bits of number find to program a write 77,"num = int(input(""Enter an integer number: ""))
bits = num.bit_length()
print(""bits required to store "", num, "" = "", bits)
print(""binary value of "", num, "" is = "", bin(num))"
4589,result the printing,"print('mobile number found from the string : ',m.group())"
4590,yards into meters convert to program a write 86,"num = float(input(""Enter the distance measured in centimeter : ""))
inc = num/2.54 
print(""Distance in inch : "", inc)"
4591,dataset a of variance find to program a write 88,"def variance(X):
    mean = sum(X)/len(X)
    tot = 0.0
    for x in X:
        tot = tot + (x - mean)**2
    return tot/len(X)"
4592,information version the print to program a write 92,"import sys
print(""Python version: "", sys.version)
print(""Python version info: "", sys.version_info)"
4593,variable string the with quotes double print to program a write 94,"str1 = ""Hello world"";
print(""\""%s\"""" % str1)
print('""%s""' % str1)
print('""{}""'.format(str1))"
4594,letters lowercase and uppercase number total find and string a input to program a write 99,"print(""Input a string: "")
str1 = input()
no_of_ucase, no_of_lcase = 0,0
for c in str1:
    if c>='A' and c<='Z':
        no_of_ucase += 1
    if c>='a' and c<='z':
        no_of_lcase += 1
print(""Input string is: "", str1)
print(""Total number of uppercase letters: "", no_of_ucase)
print(""Total number of lowercase letters: "", no_of_lcase)"
4595,digits and letters of number total find and string a input to program a write 100,"print(""Input a string: "")
str1 = input()
no_of_letters, no_of_digits = 0,0
for c in str1:
    if (c>='a' and c<='z') or (c>='A' and c<='Z'):
        no_of_letters += 1
    if c>='0' and c<='9':
        no_of_digits += 1
print(""Input string is: "", str1)
print(""Total number of letters: "", no_of_letters)
print(""Total number of digits: "", no_of_digits)"
4596,radius a for vale the print and circle a of area calculate to Class python a Write,"class CircleArea():
    def __init__(self,radius):
        self.radius=radius
    def area(self):
        return 3.14 * self.radius * self.radius
a=6
obj=CircleArea(a)
print(""Area of rectangle:"",obj.area())"
4597,Integers Distinct of Set a from Subsets Possible All print to Class python a Write,"class sub:  
    def f1(self, s1):  
        return self.f2([], sorted(s1))  
    def f2(self, curr, s1):  
        if s1:  
            return self.f2(curr, s1[1:]) + self.f2(curr + [s1[0]], s1[1:])  
        return [curr]  
a=[2, 3, 5, 6, 4, 5]
print(""Subsets: "")
print(sub().f1(a))"
4598,File Text a in Words of Number the print and Count to program python a Write,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
4599,Another into File One of Contents the Copy to function python a Write,"def copy(from_file, to_file):
    with open(from_file) as f:
        with open(to_file, ""w"") as f1:
            for line in f:
                f1.write(line)"
4600,File Text the in Appears Letter Certain a Times of Number the Counts that function python a Write,"def count_letter(fname, l):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter==l):
                        k=k+1
    return k"
4601,Sets using String a in Present Vowels of Number the print and Count to function Python a Write,"def count_vowels(s):
    count = 0
    vowels = set(""aeiou"")
    for letter in s:
        if letter in vowels:
            count += 1
    return count"
4602,Strings Input Two in Letters Common prints to Program Python a Write,"s1='python'
s2='schoolofai'
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
4603,String Non-Empty a from Character Index nth the Remove to Program Python a Write,"def remove(string, n):  
      first = string[:n]   
      last = string[n+1:]  
      return first + last"
4604,Anagrams are Strings Two if Detect to Program Python a Write,"def anagram_check(s1, s2):
    if(sorted(s1)==sorted(s2)):
        return True
    else:
        return False"
4605,Exchanged been have Character Last the and Character First the where String New a Form to Program Python a Write,"def change(string):
      return string[-1:] + string[1:-1] + string[:1]"
4606,String a in Values Index Odd of Characters the Remove to Program Python a Write,"def modify(string):  
    final = """"   
    for i in range(len(string)):  
        if i % 2 == 0:  
            final = final + string[i]  
    return final"
4607,Lists Different Two into List a in elements Odd and Even Put to Program Python a Write,"a=[2, 3, 8, 9, 2, 4, 6]
even=[]
odd=[]
for j in a:
    if(j%2==0):
        even.append(j)
    else:
        odd.append(j)
print(""The even list"",even)
print(""The odd list"",odd)"
4608,Sublist in Element Second the to According List the Sort to Program Python a Write,"a=[['A',34],['B',21],['C',26]]
for i in range(0,len(a)):
    for j in range(0,len(a)-i-1):
        if(a[j][1]>a[j+1][1]):
            temp=a[j]
            a[j]=a[j+1]
            a[j+1]=temp"
4609,List a from Items Duplicate the print and Remove to Program Python a Write,"a=[2, 3, 8, 9, 2, 4, 6]
b = set()
unique = []
for x in a:
    if x not in b:
        unique.append(x)
        b.add(x)
print(""Non-duplicate items:"")
print(unique)"
4610,One Longest the of Length the Return and Words of List a Read to Program Python a Write,"a=['the', 'tsai', 'python']
max1=len(a[0])
temp=a[0]
for i in a:
    if(len(i)>max1):
       max1=len(i)
       temp=i
print(""The word with the longest length is:"")
print(temp)"
4611,Year Leap a is Year Given a Whether Check to function Python a Write,"def leapyear_check(year):
    if(year%4==0 and year%100!=0 or year%400==0):
        return True
    else:
        return False"
4612,Integer an of Divisors the all print to Program Python a Write,"n=60
print(""The divisors of the number are:"")
for i in range(1,n+1):
    if(n%i==0):
        print(i)"
4613,Number Armstrong an is Number a if Check to Program Python a Write,"def amstrong_check(n):
    a=list(map(int,str(n)))
    b=list(map(lambda x:x**3,a))
    if(sum(b)==n):
        return True
    else:
        return False"
4614,Number Perfect a is Number a if Check to Program Python a Write,"def perfect_no_check(n):
    sum1 = 0
    for i in range(1, n):
        if(n % i == 0):
            sum1 = sum1 + i
    if (sum1 == n):
        return True
    else:
        return False"
4615,List a in Occurs Number Particular a Times of Number the print to Program Python a Write,"a=[2, 3, 8, 9, 2, 4, 6]
k=0
num=int(input(""Enter the number to be counted:""))
for j in a:
    if(j==num):
        k=k+1
print(""Number of times"",num,""appears is"",k)"
4616,Number a in Bits Set Count to function Python a Write,"def count_set_bits(n):
    count = 0
    while n:
        n &= n - 1
        count += 1
    return count"
4617,Number Given a Reverse the print to Program Python a Write,"n=1023
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
4618,Digits the from Combinations Possible all Print and Digits Three Accept to Program Python a Write,"a=2
b=9
c=5
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
    for j in range(0,3):
        for k in range(0,3):
            if(i!=j&j!=k&k!=i):
                print(d[i],d[j],d[k])"
4619,Matrix Identity an Print to function Python a Write,"def print_identity_matrix(n):
    for i in range(0,n):
        for j in range(0,n):
            if(i==j):
                print(""1"",sep="" "",end="" "")
            else:
                print(""0"",sep="" "",end="" "")
        print()"
4620,class using no given a for series fibonacci of list a print to Program Python a Write,"class Fib:
    def __init__(self):
        self.cache = {1:1, 2:1}
    def fib(self, n):
        if n not in self.cache:
            print(f'Calculating fib({n})')
            self.cache[n] = self.fib(n-1) + self.fib(n-2)
        return self.cache[n]"
4621,sequence given two of product dot calculate to function Python a Write,"def dot_product(a, b):
    return sum( e[0]*e[1] for e in zip(a, b))"
4622,string a from vowels strip to function Python a Write,"def vowel_stripping(string):
    '''This function takes a string as an input strips out vowels and returns stripted out string'''
    return """".join([x for x in string if x not in('a','e','i','o','u')])"
4623,strings of character the shifts that function Python a Write,"def char_shift(string, shift_count):
    '''This function takes a string as an input and shifts each character by 5 and returns shifted string'''
    return """".join([chr(ord(x)+shift_count) if (ord(x)+shift_count) <= 122 else chr(96 + (ord(x)+shift_count) - 122) for x in string])"
4624,string a in character biggest returns that function Python a Write,"from functools import reduce
def biggest_char(string):
    '''This function takes an input as a string and returns the biggest output character in the string'''
    biggest_chr = lambda x, y: x if ord(x) > ord(y) else y
    return reduce(biggest_chr, string)"
4625,sample.py,"from datetime import datetime
from time import perf_counter
import random
val = 10
counter_67 = dict()"
4626,divisor. of count the print to function a write 4,"def divisor_count(num: int):
    """"""
    function to count the number of divisor of interger.
    """"""
    if isinstance(num, int):
        count = 0
        for i in range(1, num+1):
            if num%i == 0:
                count = count+1
        print(f'Number of divisor is {count}')
    else:
        raise ValueError('Invalid Input')"
4627,print. and list a from list empty remove to function a write 8,"def remove_empty_list(num1: list):
    if isinstance(num1, list):
        modified = list(filter(None, num1))
        print(modified)"
4628,year leap check to function 12,"def check_leap_year(year: int):
    if not year%4:
        print('Leap Year')
    else:
        print('Not a leap year')"
4629,table multiplication the print to function 13,"def maths_tables( no_ : int):
     for i in range(1, 11):
         print(f'{no_}x{i}={no_*i}')"
4630,character. a of value ascii print to function 19,"def show_ascii(a: str):
    print(ord(a))"
4631,string intern to string convert 24,"def str_to_intern_str(a):
    import sys
    b = sys.intern(a)
    if a is b:
        print('Sentence is interned')
    else:
        raise ValueError('This should not happen')"
4632,int. to base given with value other print to function a write 26,"def other_int(value, b):
    return int(value, b)"
4633,fractions. equivalent its to number any convert to function a write 27,"def no_to_fraction(no_):
    from fractions import Fractions
    return Fractions(no_)"
4634,"} 'c':3 'b':2, 'a':1, { : Output 3)]
 ('c', 2), ('b', ('a',1), [ :  Input dictionary
 into tuples of list a convert to function 34","def list_to_dict(l: list):
    final_dict = {}
    for i in l:
        final_dict[i[0]] = i[1]
    return final_dict"
4635,letter. of mirror of dictionary a create to function 39,"def letter_mirror():
    import string
    letter = string.ascii_lowercase
    rvr_letter = letter[::-1]
    dict_char = dict(zip(letter, rvr_letter))
    return dict_char"
4636,letter of value ascii the print to function 40,"def show_ascii():
    import string
    letter = string.ascii_letters
    for i in letter:
        print(i+"":""+str(ord(i)))"
4637,recursion using number of factorial 46,"def factorial(n: int):
    if n<1:
        return 1
    else:
        return n * factorial(n-1)"
4638,function class first 47,"def call_func(x, func):
    return fn(x)"
4639,method or function is name given a whether check to function 50,"def inspect_func(fn):
    from inspect import isfunction, ismethod
    print(f'{fn} is method {ismethod(func)}')
    print(f'{fn} is function {isfunction(func)}')"
4640,function a of code source the print to function 51,"def print_so(f: ""Function name/class name/module""):
    from inspect import getsource
    print(getsource(f))"
4641,tuple two zip 52,"def zip_to_tuple( tup1, tup2):
    return zip(tup1, tup2)"
4642,closures elapsed time a build to function 64,"def time_elsaped()
    start = perf_counter()
    def inner()
        nonlocal perf_counter
        return perf_counter() - start
    return inner"
4643,function another to details logs with closure function attach 66,"def attach_log(fn: ""function""):
    def inner(*args, **kwargs):
        dt = datetime.now()
        print(f'{fn.__name__} is called at {dt} with {args} {kwargs} ')
        return fn(*args, **kwargs)
    return inner"
4644,vectors two of product dot return 75,"def dot_product(a: ""Vector1"", b: ""Vector2""):
    return sum( e[0]*e[1] for e in zip(a,b) )"
4645,running is function one while values local all show 77,"def show_local():
    import math
    a = 10
    b = 'Hello There'
    print(locals())"
4646,choice user between number random intereger generate 81,"def gen_ran_int_number(lower, upper):
    import random
    final = [ random.randint(lower, upper) for _ in range(10) ]
    return final"
4647,tuple to camparison in expensive is list from values reading show to function 83,"def compare_list_tuple():
    from timeit import timeit
    import random
    l = [ random.randint(1,100) for _ in range(100) ]
    tu = tuple(l)
    list_time = timeit(stmt = 'max(l)', globals = locals(), number = 1)
    tup_time = timeit(stmt = 'max(tu)', globals = locals(), number = 1)
    if list_time > tup_time:
        print('Hence proved')
    else:
        raise ValueError('You did something Wrong')"
4648,iterators of concept the using number random generate 84,"class RandomInt:
    """"""
    This is the space to do documentation related to class.
    """"""
    def __init__(self):
       self.n = 10
    def __next__(self):
        if self.n > 0:
           print(random.randint(0,10))
           self.n -= 1
        else:
           raise StopIteration
    def __iter__(self):
        return self"
4649,inheritance multiple with dealing are we,"class A(object):
    def foo(self):
        print(""class A"")
class B(object):
    def foo(self):
        print(""class B"")
class C(A, B):
    pass"
4650,same the not are lists blank All,"a_list = []
print(a_list, '\nID (initial):',id(a_list), '\n')
a_list.append(1)
print(a_list, '\nID (append):',id(a_list), '\n')
a_list.extend([2])
print(a_list, '\nID (extend):',id(a_list))"
4651,way this works operator equality,"print('256 is 257-1', 256 is 257-1)
print('257 is 258-1', 257 is 258 - 1)
print('-5 is -6+1', -5 is -6+1)
print('-7 is -6-1', -7 is -6-1)"
4652,"example: next the in see can we as true, always not is this but equality, imply always would identity that think would We","a = float('nan')
print('a is a,', a is a)
print('a == a,', a == a)"
4653,python in copy Shallow,"list1 = [1,2]
list2 = list1        # reference
list3 = list1[:]     # shallow copy
list4 = list1.copy() # shallow copy
print('IDs:\nlist1: {}\nlist2: {}\nlist3: {}\nlist4: {}\n'
      .format(id(list1), id(list2), id(list3), id(list4)))"
4654,python in Deepcopy,"list1 = [[1],[2]]
list2 = list1.copy()    # shallow copy
list3 = deepcopy(list1) # deep copy
print('IDs:\nlist1: {}\nlist2: {}\nlist3: {}\n'
      .format(id(list1), id(list2), id(list3)))"
4655,functions! for arguments default as objects mutable use Don't,"def append_to_list(value, def_list=[]):
    def_list.append(value)
    return def_list
my_list = append_to_list(1)
print(my_list)
my_other_list = append_to_list(2)
print(my_other_list)"
4656,consumed are Generators,"gen = (i for i in range(5))
print('2 in gen,', 2 in gen)
print('3 in gen,', 3 in gen)
print('1 in gen,', 1 in gen)"
4657,class bool of Usage,"print('isinstance(True, int):', isinstance(True, int))"
4658,way right the not but function lambda using numbers of list Create,"my_list = [lambda: i for i in range(5)]
for l in my_list:
    print(l())"
4659,representation scope local,"x = 0
def in_func():
    x = 1
    print('in_func:', x)"
4660,immutable are tuples,"tup = (1,)
tup[0] += 1"
4661,TypeError the raising without tuple the of contents mutable the modify to ways are there,"tup = ([],)
print('tup before: ', tup)
tup[0].extend([1])
print('tup after: ', tup)"
4662,tuple to data append to way another,"tup = ([],)
print('tup before: ', tup)
tup[0].append(1)
print('tup after: ', tup)"
4663,mangling name and methods class private vs. Public,"def public_method(self):
        print('Hello public world!')
    def __private_method(self):
        print('Hello private world!')
    def call_private_method_in_class(self):
        self.__private_method()
my_instance = my_class()
my_instance.public_method()
my_instance._my_class__private_method()
my_instance.call_private_method_in_class()"
4664,it through looping when list a modifying of consequences The,"a = [1, 2, 3, 4, 5]
for i in a:
    if not i % 2:
        a.remove(i)
print(a)
b = [2, 4, 5, 6]
for i in b:
     if not i % 2:
         b.remove(i)
print(b)"
4665,UnboundLocalErrors and names variable global Reusing,"def my_func():
    print(var)
var = 'global'
my_func()"
4666,counterpart: local the affecting without scope local the in name variable same the use to problem No,"def my_func():
    var = 'locally changed'
var = 'global'
my_func()
print(var)"
4667,keyword! global the use to have We,"def my_func():
    global var
    print(var)  # want to access global variable
    var = 'locally changed'  # changes the gobal variable
var = 'global'
my_func()
print(var)"
4668,"sublist 2nd the of element 1st the modify objects:
 ""new"" create better should we","my_list2 = [[1, 2, 3] for i in range(2)]
print('initially:  ---> ', my_list2)
my_list2[1][0] = 'a'
print(""after my_list2[1][0] = 'a':  ---> "", my_list2)
for a, b in zip(my_list1, my_list2):
    print('id my_list1: {}, id my_list2: {}'.format(id(a), id(b)))"
4669,values as variables to types Assigning,"a_var = str
a_var(123)"
4670,choice random,"from random import choice
a, b, c = float, int, str
for i in range(5):
    j = choice([a,b,c])(i)
    print(j, type(j))"
4671,immediately evaluated is generators of clause first the Only,gen_fails = (i for i in 1/0)
4672,*args of Usge,"def a_func(*args):
    print('type of args:', type(args))
    print('args contents:', args)
    print('1st argument:', args[0])
a_func(0, 1, 'a', 'b', 'c')"
4673,kwargs of usage,"def b_func(**kwargs):
    print('type of kwargs:', type(kwargs))
    print('kwargs contents: ', kwargs)
    print('value of argument a:', kwargs['a'])
b_func(a=1, b=2, c=3, d=4)"
4674,break of usage,"for i in range(5):
    if i == 1:
        break
else:
    print('in else')
print('after for-loop')"
4675,Disassembler,"import dis
def hello1_func():
    s = 'Hello'
    return s
dis.dis(hello1_func)"
4676,docstring of usage demonstrate to example,"def greet(name):
    """"""
    This function greets to
    the person passed in as
    a parameter
    """"""
    print(""Hello, "" + name + "". Good morning!"")"
4677,function Absolute,"def absolute_value(num):
    """"""This function returns the absolute
    value of the entered number""""""
    if num >= 0:
        return num
    else:
        return -num
print(absolute_value(2))
print(absolute_value(-4))"
4678,input user accept,"str = input(""Enter your input: "")
print (""Received input is : "", str)"
4679,"catalan(i)*catalan(n-i-1) of     
  sum the is Catalan(n)     
 Case Base     
 number catalan nth find to function recursive A","def catalan(n): 
    if n <= 1: 
        return 1
    res = 0
    for i in range(n): 
        res += catalan(i) * catalan(n-i-1) 
    return res"
4680,"Call Recursive     
 implementation Python recursive naive A","def binomialCoeff(n , k): 
    if k > n : 
       return 0
    if k==0 or k ==n : 
        return 1
    return binomialCoeff(n-1 , k-1) + binomialCoeff(n-1 , k)"
4681,function above ht test to Program Driver,"n = 5
k = 2
print (""Value of C(%d,%d) is (%d)"" %(n , k , binomialCoeff(n , k)) )"
4682,problem LIS of implementation Python naive A,""""""" To make use of recursive calls, this function must return 
 two things: 
 1) Length of LIS ending with element arr[n-1]. We use 
 max_ending_here for this purpose 
 2) Overall maximum as the LIS may end with an element 
 before arr[n-1] max_ref is used this purpose. 
 The value of LIS of full array of size n is stored in 
 *max_ref which is our final result """""""
4683,function above the test to program Driver,"arr = [10 , 22 , 9 , 33 , 21 , 50 , 41 , 60] 
n = len(arr) 
print (""Length of lis is "", lis(arr) )"
4684,MPH to KM/H Convert program python a write,"kmh = 50
mph =  0.6214 * kmh
print(""Speed:"", kmh, ""KM/H = "", mph, ""MPH"")"
4685,list a sort to function a write,"raw_list = [-5, -23, 5, 0, 23, -6, 23, 67]
sorted_list = []
while raw_list:
    minimum = raw_list[0]   
    for x in raw_list: 
        if x < minimum:
            minimum = x
    sorted_list.append(minimum)
    raw_list.remove(minimum)    
print(soreted_list)"
4686,concept closure using repeated been has word the time many how record to counter a implement to funtion python a write,"def word_counter():
    counter = {}
    def count(word):
        counter[word] = counter.get(word, 0) + 1
        return counter[word]
    return count"
4687,list a from elements largest N find to program python a write,"l = [1000,298,3579,100,200,-45,900] 
n = 4
l.sort() 
print(l[-n:])"
4688,lambda and map using lists two add to program python a write,"nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
result = map(lambda x, y: x + y, nums1, nums2)
print(list(result))"
4689,numbers float the of equality the test functionto python a write,"def float_equality_testing(a, b):
    rel_tol = 1e-12
    abs_tol = 1e-05
    return abs(a-b) <= max(rel_tol * max(abs(a), abs(b)), abs_tol)"
4690,Number Random a Generate to program python a write,"import random
print(random.randint(0,9))"
4691,Year Leap Check to program python a write,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(f""{year} is a leap year"")
       else:
           print(f""{year} is not a leap year"")
   else:
       print(f""{year} is a leap year"")
else:
   print(f""{year} is not a leap year"")"
4692,digits n of number Armstrong check to program python a write,"num = 1634
order = len(str(num))
sum = 0
temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** order
   temp //= 10
if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
4693,Cards of Deck Shuffle to  program python a write,"import itertools, random
deck = list(itertools.product(range(1,14),['Spade','Heart','Diamond','Club']))
random.shuffle(deck)
print(deck)"
4694,statements necessary print and Hanoi Of Tower solve to function python a wrtie,"def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print(""Move disk 1 from source"",source,""to destination"",destination) 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print(""Move disk"",n,""from source"",source,""to destination"",destination) 
    TowerOfHanoi(n-1, auxiliary, destination, source)"
4695,Lists Two of Intersection the Find to function Python a write,"def intersection(a, b):
    return list(set(a) & set(b))"
4696,it print and File Text a in Words of Number the Count to function python a write,"def word_count(fname) : 
    num_words = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            num_words += len(words)
    print(num_words)"
4697,Recursion using without List a Flatten to Program  python a wrie,"a=[[1,[[2]],[[[3]]]],[[4],5]]
flatten=lambda l: sum(map(flatten,l),[]) if isinstance(l,list) else [l]
print(flatten(a))"
4698,,"import os
import nltk
import string
from collections import Counter
from itertools import permutations, combinations, combinations_with_replacement
letters = string.ascii_lowercase"
4699,order. sorted lexicographic in string the of size of permutations possible all get to program python a write,"def get_ordered_permutations(word, k):
    [print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"
4700,"order. sorted lexicographic in string the of size to up combinations, possible all get to program python a write","def get_ordered_combinations(string, k):
    [print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"
4701,order. sorted lexicographic in string the of combinations replacement size possible all get to function python a write,"def get_ordered_combinations_with_replacement(string, k):
    [print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"
4702,letters. all of case the swap to string a for function python a write,"def swap_case(s):
    return ''.join(x for x in (i.lower() if i.isupper() else i.upper() for i in s))"
4703,times. 'n' string given a of repetition the in 'a's count to function python a write,"def repeated_string(s, n):
    return s.count('a') * (n // len(s)) + s[:n % len(s)].count('a')"
4704,integers. five the of four exactly summing by calculated be can that values maximum and minimum the find and integers positive five given that function python a write,"def min_max():
    nums = [int(x) for x in input().strip().split(' ')]
    print(sum(nums) - max(nums), sum(nums) - min(nums))"
4705,not or anagrams are strings 2 if check to function python a Write,"def anagram(s1, s2):
    if sorted(s1) == sorted(s2):
        return True
    else:
        return False"
4706,text in word common most the get to function python a write,"def most_common(text):
    c = Counter(text)
    return c.most_common(1)"
4707,shifts given by number bin given a on multiplication bitwise do to function python a write,"def bit_mul(n, shift):
    return n << shift"
4708,shifts of number given with division bitwise for function python a write,"def bit_div(n, shift):
    return n >> shift"
4709,Number a in Digits of Number the Count to function python a write,"def count_digits():
    n = int(input(""Enter number:""))
    count = 0
    while n > 0:
        count = count + 1
        n = n // 10
    return count"
4710,string a in vowels of number count to function python a write,"def count_vowels(text):
    v = set('aeiou')
    for i in v:
        print(f'\n {i} occurs {text.count(i)} times')"
4711,text given for SHA256 generate to function python a write,"def get_sha256(text):
    import hashlib
    return hashlib.sha256(text).hexdigest()"
4712,not or data given for valid is value hashed SHA256 if check to function python a write,"def check_sha256_hash(hashed, data):
    import hashlib
    return True if hashed == hashlib.sha256(data.encode()).hexdigest() else False"
4713,"data your see     ticker
 this for prices historical the get     ticker
 this on data get     2020-12
 to 2015 from company a for prices stock get to function python a write","def get_stock_prices(tickerSymbol='TSLA'):
    import yfinance as yf
    tickerData = yf.Ticker(tickerSymbol)
    tickerDf = tickerData.history(period='1d', start='2015-1-1', end='2020-12-20')
    print(tickerDf)"
4714,iTunes Apple on playing Artists best 10 get to function python a write,"def get_artists():
    import requests
    url = 'https://itunes.apple.com/us/rss/topsongs/limit=10/json'
    response = requests.get(url)
    data = response.json()
    for artist_dict in data['feed']['entry']:
        artist_name = artist_dict['im:artist']['label']
        print(artist_name)"
4715,sequence infinite an for generator with function python a write,"def infinite_sequence():
    n = 0
    while True:
        yield n
        n += 1
import uuid"
4716,"rectangle. of area the returns and input user as breadth , length takes which function python a write","def rectangle_area(length, breadth):
    area = length * breadth    
    return area"
4717,"number the of cube and square, print and input user as number a takes which function python a write","def square_cube(number):
    print(number ** 2)  
    print(number ** 3)"
4718,inches and feet in height return and input user as centimeters in height takes that program python a write,"cm=int(input(""Enter the height in centimeters:""))
inches=0.394*cm
feet=0.0328*cm
print(""The length in inches"",round(inches,2))
print(""The length in feet"",round(feet,2))"
4719,result the print and list the from duplicates remove to program python a write,"l = [1,2,3,4,5,5,5,5,5,5,5,7,8,8,0]
result = set(l)
print(""Result : "",result)"
4720,triangle a of area the return and calculate to input user as sides of length takes which function python a write,"def triangle_area(a,b,c):
    s = (a+b+c)/2
    area = (s(s-a)*(s-b)*(s-c)) ** 0.5
    return(area)"
4721,numbers two swap to program python a write,"num1 = 130
num2 = 34
num1,num2 = num2,num1"
4722,N to 1 from Numbers Even print and user from N Number a input to program python a write,"maximum = int(input("" Please Enter the Maximum Value : ""))
for number in range(1, maximum+1):
    if(number % 2 == 0):
        print(""{0}"".format(number))"
4723,other by divisible is number first the if check and input as integers two takes that program python a write,"num1 = int(input(""Enter first number :""))
num2 = int(input(""Enter second number :""))
remainder  = num1 % num2
if remainder == 0:
    print(num1 ,"" is divisible by "",num2)
else :
    print(num1 ,"" is not divisible by "",num2)"
4724,series fibonacci of elements N first print and N number a input takes which program python a write,"N = int(input(""Please enter a number ""))
first = 0
second = 1
print(first)
print(second)
for a in range(1,N-1):
    third = first + second
    print(third)
    first,second = second , third"
4725,integer a of divisors the print to program python a write,"num = int(input(""Please enter a integer ""))
mid = int(num / 2)
print(""The divisiors of "",num,"" are :"" )
for a in range(2,mid + 1):
    if num % a == 0:
        print(a, end = ' ')
else :
    print()
    print(""-End-"")"
4726,not or palindrome a is is whether returns and string a input takes which function python a write,"def isPalindrome(s):
    return s == s[::-1]"
4727,list in elements all of frequency find and input an as list takes which program python a write,"lst = eval(input(""Enter list : ""))
mean = 0
sum = 0
for i in lst:
    sum  = sum + i
print("" The mean of given list is :"", sum)"
4728,list first the after list second append and lists two takes that function python a write,"lst1 = eval(input(""Enter list : ""))
lst2 = eval(input(""Enter list : ""))
print(lst1 + lst2)"
4729,"name: his inputs user after ""Hello"", with user the greets program python a write","name = input (""Input your name: "")
print(""HELLO "", name)"
4730,string reverse print and string a input takes which program python a write,"name = input(""Enter String"")
print(name[::-1])"
4731,output reverse print and list a input takes which program python a write,"lst = eval(input(""Enter list""))
print(lst[::-1])"
4732,"factorial find to line single     number
 that of factorial the returns and input as integer an takes that function python a write","def factorial(n): 
    return 1 if (n==1 or n==0) else n * factorial(n - 1);"
4733,circle of area return and radius input takes that function python a write,"def findArea(r): 
    PI = 3.142
    return PI * (r*r);"
4734,ta which comprehension list using numbers natural n first of cubes with series of sum find and integer an input takes that program python a write,"N = int(input(""Enter Integer ""))
lst = [i**3 for i in range(1, N + 1)]
print(sum(lst))"
4735,"tuples. non-empty of list given a from tuple each in element last the by order increasing in sorted list, a get to program Python a Write","def last(n): return n[-1]
def sort_list_last(tuples):
  return sorted(tuples, key=last)
print(sort_list_last([(2, 5), (1, 2), (4, 4), (2, 3), (2, 1)]))"
4736,list the within elements of mean the prints and list a input takes which program python a write,"s1 = eval(input(""Enter list ""))
mean = sum(s1) / len(s1) 
print(""Mean of sample is : "" + str(mean))"
4737,list the within elements of deviation standard the prints and list a input takes which program python a write,"mean = sum(s1) / len(s1) 
variance = sum([((x - mean) ** 2) for x in s1]) / len(s1) 
res = variance ** 0.5
print(""Standard deviation of sample is : "" + str(res))"
4738,"unchanged. it leave 3, than less is string given the of length string the If instead. 'ly' add then 'ing' with ends already string given the If 3). least at be should (length string given a of end the at 'ing' add to program Python a Write","def add_string(str1):
  length = len(str1)
  if length > 2:
    if str1[-3:] == 'ing':
      str1 += 'ly'
    else:
      str1 += 'ing'
  return str1"
4739,word(s). the around tags with string HTML the create to function Python a Write,"def add_tags(tag, word):
	return ""<%s>%s</%s>"" % (tag, word, tag)"
4740,value. by dictionary a (Descending) sort to program Python a Write,"d = {1: 2, 3: 4, 4: 3, 2: 1, 0: 0}
print({k :v for k,v in sorted(d.items(),key = lambda x : x[1],reverse = True)})"
4741,Item second by tuples of list a sort to program Python a Write,"def Sort_Tuple(tup):  
    return(sorted(tup, key = lambda x: x[1]))   
tup = [('rishav', 10), ('akash', 5), ('ram', 20), ('gaurav', 15)]  
print(Sort_Tuple(tup))"
4742,comprehension list using term every cube and list a input takes that program python a write,"s1 = eval(input(""Enter list ""))
print([i**3 for i in s1])"
4743,alphabetically those sort and input as tuples of list takes that function Python a write,"def SortTuple(tup): 
    n = len(tup) 
    for i in range(n): 
        for j in range(n-i-1): 
            if tup[j][0] > tup[j + 1][0]: 
                tup[j], tup[j + 1] = tup[j + 1], tup[j] 
    return tup"
4744,palindrome. a is number given a whether check and number a input to program python a write,"n=int(input(""Enter number:""))
temp=n
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
if(temp==rev):
    print(""The number is a palindrome!"")
else:
    print(""The number isn't a palindrome!"")"
4745,digits. the from combinations possible all prints and digits distinct three accept to program python a write,"a=int(input(""Enter first number:""))
b=int(input(""Enter second number:""))
c=int(input(""Enter third number:""))
d=[]
d.append(a)
d.append(b)
d.append(c)
for i in range(0,3):
    for j in range(0,3):
        for k in range(0,3):
            if(i!=j&j!=k&k!=i):
                print(d[i],d[j],d[k])"
4746,list python sorted into element an insert to function python a write,"def insert(list, n): 
    for i in range(len(list)): 
        if list[i] > n: 
            index = i 
            break
    list = list[:i] + [n] + list[i:] 
    return list"
4747,result the return and numbers provided user two multiply to function python a write,"def mul_two_numbers(num1, num2):
    mul = num1 * num2
    return mul"
4748,dictionary form element pop to program python a write,"squares = {1: 1, 2: 4, 3: 9, 4: 16, 5: 25}
print(squares.pop(4))"
4749,"1,3,11,42,12,4001 = numbers get to program a write 1","from collections import Iterable
highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
4750,"1,3,11,42,12,4001 = numbers get to program a write 2","highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
4751,python list in elements all to 1 add 3,"lst = [1,2,3]
list(map(lambda x:x+1, lst))"
4752,python list a of element each to string a add 4,"my_list = ['foo', 'fob', 'faz', 'funk']
string = 'bar'
list2 = list(map(lambda orig_string: orig_string + string, my_list))"
4753,list another of values all add python 6,"a = [1, 2, 3]
b = [4, 5, 6]
a += b"
4754,python list a of start the to value a add 7,"var=7
array = [1,2,3,4,5,6]
array.insert(0,var)"
4755,dictionary a sort 9,"mydictionary : {1: 1, 7: 2, 4: 2, 3: 1, 8: 1}
sortedDictionary = sorted(mydictionary.keys())"
4756,python string a in character a of index access 11,"foo = 'Hello'
foo.find('lo')"
4757,python array in position first at element add to how 14,"x = [1,3,4]
a = 2
x.insert(1,a)"
4758,python in numbers list add to how 16,"numbers = [1,2,3,4,5,1,4,5] 
Sum = sum(numbers)"
4759,python length equal of lists into list split 17,"[lst[i:i + n] for i in range(0, len(lst), n)]"
4760,list another of subset a is list a if check to how 20,"if(all(x in test_list for x in sub_list)): 
    flag = True"
4761,number decimal a of binary print 25,"a=6
print(bin(a))"
4762,Donate 2020 06 Nov on TheRubberDucky by pythonpython in 10 base to 2 base from convert to function python a write 26,"def getBaseTen(binaryVal):
    count = 0
    binaryVal = binaryVal[::-1]
	for i in range(0, len(binaryVal)):
    	if(binaryVal[i] == ""1""):
            count += 2**i
    return count"
4763,22 and 0 between number random a print and generate to function a write 27,"import random
n = random.randint(0,22)
print(n)"
4764,python in array an from element random a get to 28,"import random
list_ = [1,2,3,4]
random.choice(list_)"
4765,python in day current print 29,"from datetime import date
today = date.today()
print(""Today's date:"", today)"
4766,xml into  string a convert to function python a write 34,"import xml.etree.ElementTree as ET
root = ET.fromstring(country_data_as_string)"
4767,tree element file xml open to how 35,"import xml.etree.ElementTree as ET
tree = ET.parse('filename.xml') 
tree_root = tree.getroot()"
4768,string from datetime parse python 36,"from datetime import datetime
datetime_object = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')"
4769,Donate 2020 14 Jun on Butterfly Bright by bracketspython without python in matrix as list print 37,"data = [7, 7, 7, 7]
print(*data, sep='')"
4770,python in string from integer remove to how 39,"s = '12abcd405'
result = ''.join([i for i in s if not i.isdigit()])"
4771,lambda using python in list a sort to how 41,"data = [(""Apples"", 5, ""20""), (""Pears"", 1, ""5""), (""Oranges"", 6, ""10"")]
data.sort(key=lambda x:x[0])"
4772,arrays sorted two of intersection find to function Python  a write 44,"def printIntersection(arr1, arr2, m, n): 
    i, j = 0, 0
    while i < m and j < n: 
        if arr1[i] < arr2[j]: 
            i += 1
        elif arr2[j] < arr1[i]: 
            j+= 1
        else: 
            print(arr2[j]) 
            j += 1
            i += 1
arr1 = [1, 2, 4, 5, 6] 
arr2 = [2, 3, 5, 7] 
m = len(arr1) 
n = len(arr2) 
printIntersection(arr1, arr2, m, n)"
4773,array in leaders print to Function Python write 46,"def printLeaders(arr,size):
    for i in range(0, size):
        for j in range(i+1, size):
            if arr[i]<arr[j]:
                break
        if j == size-1:  
            print(arr[i])
arr=[16, 17, 4, 3, 5, 2] 
printLeaders(arr, len(arr))"
4774,dictionaires of list a merge to program python a write 48,"result = {}
for d in L:
    result.update(d)"
4775,result the print and numbers of list a normalize to program python a write 52,"a = [2,4,10,6,8,4]
amin, amax = min(a), max(a)
for i, val in enumerate(a):
    a[i] = (val-amin) / (amax-amin)
print(a)"
4776,square perfect a is number a if check to function Python a Write 54,"def is_perfect_square(n):
    x = n // 2
    y = set([x])
    while x * x != n:
        x = (x + (n // x)) // 2
        if x in y: return False
        y.add(x)
    return True"
4777,digit. single a has result the until repeatedly integer positive a of digits the add to program function a Write 59,"def add_digits(num):
        return (num - 1) % 9 + 1 if num > 0 else 0"
4778,"manipulation string         integer
 reversed the in zero leading Remove         integer.
 an of digits the reverse to program function a Write 60","def reverse_integer(x):
        sign = -1 if x < 0 else 1
        x *= sign
        while x:
            if x % 10 == 0:
                x /= 10
            else:
                break
        x = str(x)
        lst = list(x)  # list('234') returns ['2', '3', '4']
        lst.reverse()
        x = """".join(lst)
        x = int(x)
        return sign*x"
4779,not. or progression arithmetic an is numbers of sequence a check to function Python a Write 62,"def is_arithmetic(l):
    delta = l[1] - l[0]
    for index in range(len(l) - 1):
        if not (l[index + 1] - l[index] == delta):
             return False
    return True"
4780,"remaining the of ratio the Check     ratio
 Calculate     not
 or progression geometric a is numbers of sequence a Check Challenges: Python 63","def is_geometric(li):
    if len(li) <= 1:
        return True
    ratio = li[1]/float(li[0])
    for i in range(1, len(li)):
        if li[i]/float(li[i-1]) != ratio: 
            return False
    return True"
4781,form. reversed in sum the display and numbers reversed two the of sum the compute to function Python a Write 64,"def reverse_sum(n1, n2):
    return int(str(int(str(n1)[::-1]) + int(str(n2)[::-1]))[::-1])"
4782,list. a of end the to zeros all push to function Python a Write 66,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return(x)"
4783,list. a of end the to number first the push the to function Python a Write 67,"def move_last(num_list):
    a = [num_list[0] for i in range(num_list.count(num_list[0]))]
    x = [ i for i in num_list if i != num_list[0]]
    x.extend(a)
    return(x)"
4784,i. at one the except integers of array given a of numbers the all of product the is array new the of i index at element each that such array new a create to function Python a Write 72,"def product(nums):
    new_nums = []
    for i in nums:
        nums_product = 1
        for j in nums:     
            if j != i:
                nums_product = nums_product * j
        new_nums.append(nums_product)
    return new_nums"
4785,500. below 5 or 3 of multiples the all of sum the compute to program Python a Write 75,"n = 0
for i in range(1,500):
     if not i % 5 or not i % 3:
         n = n + i
print(n)"
4786,"5, of multiple a not are but 7 by divisible are which numbers such all find will which print to program a Write 79","between 2000 and 3200 (both included).  
l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print ','.join(l)"
4787,string. Hexadecimal to Bytearray given a convert to program Python a Write 81,"def bytearray_to_hexadecimal(list_val):
     result = ''.join('{:02x}'.format(x) for x in list_val)  
     return(result)"
4788,string. given a of characters last and first same with substrings of number count to program Python a Write 82,"def no_of_substring_with_equalEnds(str1): 
	result = 0; 
	n = len(str1); 
	for i in range(n): 
		for j in range(i, n): 
			if (str1[i] == str1[j]): 
				result = result + 1
	return result"
4789,count. its as times many as each repeating elements over iterate that program Python a Write 85,"from collections import Counter
c = Counter(p=4, q=2, r=0, s=-2)
print(list(c.elements()))"
4790,list a in numbers consecutive five of groups generate to program Python a Write 86,"l = [[5*i + j for j in range(1,6)] for i in range(5)]
print(l)"
4791,output. the print and sublists into elements list given a of duplicates consecutive pack to function Python a Write 89,"from itertools import groupby
def pack_consecutive_duplicates(l_nums):
    return [list(group) for key, group in groupby(l_nums)]
n_list = [0, 0, 1, 2, 3, 4, 4, 5, 6, 6, 6, 7, 8, 9, 4, 4 ]
print(""Original list:"") 
print(n_list)
print(""\nAfter packing consecutive duplicates of the said list elements into sublists:"")
print(pack_consecutive_duplicates(n_list))"
4792,output. the print and characters of list given a or integers of list given a from encoding run-length modified the reflecting list a create to function Python a Write 90,"from itertools import groupby
def modified_encode(alist):
        def ctr_ele(el):
            if len(el)>1: return [len(el), el[0]]
            else: return el[0]
        return [ctr_ele(list(group)) for key, group in groupby(alist)]
n_list = [1,1,2,3,4,4,5, 1]
print(""Original list:"") 
print(n_list)
print(""\nList reflecting the modified run-length encoding from the said list:"")
print(modified_encode(n_list))"
4793,output. the print and user the from input as row) every (for space a with separated column each for elements and matrix square the of size the diagonal.Accept primary matrix of sum the print and console from matrix square a read to function Python a Write 92,"size = int(input(""Input the size of the matrix: ""))
matrix = [[0] * size for row in range(0, size)]
for x in range(0, size):
    line = list(map(int, input().split()))
    for y in range(0, size):
        matrix[x][y] = line[y]
matrix_sum_diagonal = sum(matrix[size - i - 1][size - i - 1] for i in range(size))"
4794,output. the print and list nested another of subset a is list nested a if check to function Python a Write 93,"def checkSubset(input_list1, input_list2): 
    return all(map(input_list1.__contains__, input_list2)) 
list1 = [[1, 3], [5, 7], [9, 11], [13, 15, 17]] 
list2 = [[1, 3],[13,15,17]]   
print(""Original list:"")
print(list1)
print(list2)
print(""\nIf the one of the said list is a subset of another.:"")
print(checkSubset(list1, list2))"
4795,python. in operator '*' the using without integers two multiply to program Python a Write 98,"def multiply(x, y):
    if y < 0:
        return -multiply(x, -y)
    elif y == 0:
        return 0
    elif y == 1:
        return x
    else:
        return x + multiply(x, y - 1)"
4796,integer. an to numeral roman a convert to class Python a Write 99,"class Solution:
    def roman_to_int(self, s):
        rom_val = {'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000}
        int_val = 0
        for i in range(len(s)):
            if i > 0 and rom_val[s[i]] > rom_val[s[i - 1]]:
                int_val += rom_val[s[i]] - 2 * rom_val[s[i - 1]]
            else:
                int_val += rom_val[s[i]]
        return int_val"
4797,"dictionary. the print should program the then and included). (both n and 1 between number integral an is that such i*i*i) (i, contains that dictionary a generate to program a write n, number integral given a With","n = 8
d = dict()
for i in range(1,n+1):
    d[i] = i*i*i
print(d)"
4798,number. every contains which tuple a and list a generate and console from numbers comma-separated of sequence a accepts which program a Write,"values=input()
l=values.split("","")
t=tuple(l)
print(l)
print(t)"
4799,"amount. given a against ) 500 and 200 100, 50, 20, 10, notes: of (Sample notes of number the find to function Python a Write","def no_notes(a):
  Q = [500, 200, 100, 50, 20, 10, 5, 2, 1]
  x = 0
  for i in range(9):
    q = Q[i]
    x += int(a / q)
    a = int(a % q)
  if a > 0:
    x = -1
  return x"
4800,float to input given typecast to program Python a Write,"num = float(input(""Input a value: ""))
print(num)"
4801,person a of height and weight given for BMI the find to function Python a Write,"def bmi_calculator(height, weight):
	bmi = weight/(height**2)
	return bmi"
4802,not or number perfect is number given a whether check to function Python a Write,"def perfect_number_checker(num):
    i = 2
    sum = 1
    while(i <= num//2 ) :
        if (num % i == 0) :
            sum += i
        i += 1
    if sum == num :
        return f'{num} is a perfect number'
    else :
        return f'{num} is not a perfect number'"
4803,list given a from number ODD maximum the find to function Python a Write,"def odd_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 != 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
4804,list given a from number EVEN maximum the find to function Python a Write,"def even_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 == 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
4805,not or number another of power a is number a whether check to function Python a Write,"def power_checker(a,b):
	import math
	s=math.log(a,b)
	p=round(s)
	if (b**p)==a:
	    return f'{a} is the power of {b}.'
	else:
	    return f'{a} is NOT the power of {b}.'"
4806,separators thousands as commas with number print to function Python a Write,"def formattedNumber(n):
  return (""{:,}"".format(n))"
4807,text given the in word a of occurrence count to function Python a Write,"def text_searcher(text, word):
    count = 0
    for w in text.split():
        if w == word:
            count = count + 1
    return count"
4808,list a from values falsy remove to function Python a Write,"def newlist(lst):
  return list(filter(None, lst))"
4809,object datetime a into string convert to program Python a Write,"from datetime import datetime
date_string = ""Mar 26 2021  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
4810,integer given the of digits the reversing by obtained integer the returns that function Python a Write,"def reverse(n):
    s=str(n) 
    p=s[::-1]
    return p"
4811,tuple a reverse to program Python a Write,"aTuple = (10, 20, 30, 40, 50)
aTuple = aTuple[::-1]
print(aTuple)"
4812,tuples two swap to program Python a Write,"tuple1 = (11, 22)
tuple2 = (99, 88)
tuple1, tuple2 = tuple2, tuple1
print(tuple2)
print(tuple1)"
4813,333 to tuple following a inside list a of (33) item second the modify to program Python a Write,"tuple1 = (11, [22, 33], 44, 55)
tuple1[1][1] = 333
print(tuple1)"
4814,item 2nd by tuples of tuple a sort to program Python a Write,"tuple1 = (('a', 23),('b', 37),('c', 11), ('d',29))
tuple1 = tuple(sorted(list(tuple1), key=lambda x: x[1]))
print(tuple1)"
4815,same the are tuple following the in items all if check to function Python a Write,"def check_tuple_same(sampleTuple):
    return all(i == sampleTuple[0] for i in sampleTuple)"
4816,milliseconds in time current print to program Python a Write,"import time
milliseconds = int(round(time.time() * 1000))
print(milliseconds)"
4817,order reverse in list2 and order original in item display should list1 that such simultaneously lists both Iterate list. Python two a Given that program Python a Write,"list1 = [10, 20, 30, 40]
list2 = [100, 200, 300, 400]
for x, y in zip(list1, list2[::-1]):
    print(x, y)"
4818,"5 of divisible are which numbers those only print and it Iterate numbers, of list a Given that function Python a Write","def findDivisible(numberList):
    for num in numberList:
        if (num % 5 == 0):
            print(num)"
4819,"both not but B, or A either in elements all of set a return to program Python a Write","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
4820,date given a of week of day the Find to program Python a Write,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
4821,format string into instance datetime following Convert to program Python a Write,"from datetime import datetime
given_date = datetime(2020, 2, 25)
string_date = given_date.strftime(""%Y-%m-%d %H:%M:%S"")
print(string_date)"
4822,included). (both 3200 and 2000 between 5 of multiple a not are but 7 by divisible are which numbers such all find will which program a Write,"l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))"
4823,case. upper in string the print to printString: input console from string a get to getString: methods: two least at has which class Python a Write,"class IOString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = input()
    def printString(self):
        print(self.s.upper())
strObj = IOString()
strObj.getString()
strObj.printString()"
4824,process python by usage memory the determine will that program a Write,"import os, psutil
print(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)"
4825,string a reverse to function a Write,"def revStr(inp):
  inp = inp[::-1]
  return inp"
4826,series Sine of sum the find to function a write,"import math
def sin(x,n):
    sine = 0
    for i in range(n):
        sign = (-1)**i
        pi=22/7
        y=x*(pi/180)
        sine = sine + ((y**(2.0*i+1))/math.factorial(2*i+1))*sign
    return sine"
4827,recursively odd or even is number given a whether determine to function a Write,"def check(n):
    if (n < 2):
        return (n % 2 == 0)
    return (check(n - 2))
n=int(input(""Enter number:""))
if(check(n)==True):
      print(""Number is even!"")
else:
      print(""Number is odd!"")"
4828,inplace variables two swap to program a Write,"a,b = b,a"
4829,camelCase into string a convert will that function a Write,"from re import sub
def camelCase(string):
  string = sub(r""(_|-)+"", "" "", string).title().replace("" "", """")
  return string[0].lower() + string[1:]"
4830,comprehension list using list a from list empty remove to function a Write,"def removeEmptyList(li):
  res = [ele for ele in li if ele != []] 
  return res"
4831,homogeneous is list a finds that function a Write,"def homoList(li):
  res = True
  for i in li: 
      if not isinstance(i, type(li[0])): 
          res = False 
          break
  return res"
4832,dictionaries python two merge to program a Write,"x={'key1':'val1','key2':'val2'}
y={'key3':'val3','key4':'val4'}
z = {**x, **y} # z = x | y"
4833,invalid or valid is json following whether Check to function a Write,"import json
def validateJSON(jsonData):
    try:
        json.loads(jsonData)
    except ValueError as err:
        return False
    return True"
4834,modules Python installed locally of list a get to program a Write,"import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted([""%s==%s"" % (i.key, i.version)
     for i in installed_packages])
for m in installed_packages_list:
    print(m)"
4835,"two of power in is which and bit set is which number bit significant most the find number, a Given that function a Write","def setBitNumber(n): 
    if (n == 0): 
        return 0
    msb = 0 
    n = int(n / 2) 
    while (n > 0): 
        n = int(n / 2) 
        msb += 1
    return (1 << msb)"
4836,Pyramid Square of volume calculate to function a Write,"def volumeSquare(b, h): 
    return (0.33) * b * b * h"
4837,Pyramid Pentagonal of Volume calculate to function a Write,"def volumePentagonal(a, b, h): 
    return (0.83) * a * b * h"
4838,"V volume Calculate given
 is d diameter which for sphere a of volume print and find to program python a Write","import math
diameter = 12.
radius = diameter/2.
V = 4./3. * math.pi * radius ** 3
print(f""Volume={V}"")"
4839,"otherwise False valid, is expression input a in used parenthesis list if True return wil which function python a Write","def isValid(s):
    stack = []
    mapping = {')': '(', '}' : '{', ']':'['}
    for char in s:
        if char in mapping:                
            if not stack:
                return False
            top = stack.pop()
            if mapping[char] != top:
                return False
        else:
            stack.append(char)     
    return not stack"
4840,problem Hanoi of Towers print and solve to function python a Write,"def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print(""Move disk 1 from source"",source,""to destination"",destination) 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print(""Move disk"",n,""from source"",source,""to destination"",destination) 
    TowerOfHanoi(n-1, auxiliary, destination, source)"
4841,number Armstrong a is given number a if check to function python a Write,"def isArmstrong(x):
    n = 0
    while (x != 0): 
        n = n + 1
        x = x // 10
    temp = x 
    sum1 = 0
    while (temp != 0): 
        r = temp % 10
        sum1 = sum1 + r ** n
        temp = temp // 10
    return (sum1 == x)"
4842,"otherwise False return decreasing, or increasing monotonically is list given a in elements True returns which function  python a Write","def isMonotonic(A):  
    return (all(A[i] <= A[i + 1] for i in range(len(A) - 1)) or
            all(A[i] >= A[i + 1] for i in range(len(A) - 1)))"
4843,matrix a of column th K  print and find to program python a Write,"test_list = [[4, 5, 6], [8, 1, 10], [7, 12, 5]] 
K = 2
res = [sub[K] for sub in test_list] 
print(""The Kth column of matrix is : "" + str(res))"
4844,case Pascal to case Snake print and Convert to program python a Write,"test_str = 'go_east_or_west_india_is_the_best'
res = test_str.replace(""_"", "" "").title().replace("" "", """")
print(res)"
4845,anagram are numbers two of representations binary if print and Check to function python a Write,"from collections import Counter 
def checkAnagram(num1,num2): 
    bin1 = bin(num1)[2:] 
    bin2 = bin(num2)[2:] 
    zeros = abs(len(bin1)-len(bin2)) 
    if (len(bin1)>len(bin2)): 
         bin2 = zeros * '0' + bin2 
    else: 
         bin1 = zeros * '0' + bin1 
    dict1 = Counter(bin1) 
    dict2 = Counter(bin2) 
    if dict1 == dict2: 
         print('Yes') 
    else: 
         print('No')"
4846,"here logic your Write     not
 or year leap is year a if determine to function python a Write","def is_leap(year):
    leap = False
    if year % 4 == 0:
        if year % 400 == 0:
            leap = True
        elif year % 100 == 0:
            leap = False
        else:
            leap = True
    return leap"
4847,"operator conditional         pattern
 staircase print to function python a Write","def pattern(n): 
    for i in range(1,n+1):   
        k =i + 1 if(i % 2 != 0) else i   
        for g in range(k,n): 
            if g>=k: 
                print(end=""  "") 
        for j in range(0,k): 
            if j == k - 1: 
                print("" * "") 
            else: 
                print("" * "", end = "" "")"
4848,list multidimensional a  flatten to program python a Write,"my_list = [[10,20,30],[40,50,60],[70,80,90]]
flattened = [x for temp in my_list for x in temp]
print(flattened)"
4849,Number Given a of Table Print to Program Python Write,"n=int(input(""Enter the number to print the tables for:""))
for i in range(1,11):
    print(n,""x"",i,""="",n*i)"
4850,given numbers of list a of sequence odd continous longest print and find to function python a Write,"def longest_continuous_odd_subsequence(array):
    final_list = []
    temp_list = []
    for i in array:
        if i%2 == 0:
            if temp_list != []:
                final_list.append(temp_list)
            temp_list = []
        else:
            temp_list.append(i)
    if temp_list != []:
        final_list.append(temp_list)
    result = max(final_list, key=len)
    print(result)"
4851,Python in regex using substring a with starts string a if print and check to function a Write,"import re 
def find(string, sample) :    
  if (sample in string): 
      y = ""^"" + sample 
      x = re.search(y, string) 
      if x : 
          print(""string starts with the given substring"") 
      else : 
          print(""string doesn't start with the given substring"") 
  else : 
      print(""entered string isn't a substring"")"
4852,0 = c + bx + ax**2 equation quadratic the for solution the print and solve to program python a Write,"import cmath
a = 1
b = 5
c = 6
d = (b**2) - (4*a*c)
sol1 = (-b-cmath.sqrt(d))/(2*a)
sol2 = (-b+cmath.sqrt(d))/(2*a)
print('The solution are {0} and {1}'.format(sol1,sol2))"
4853,function anonymous using 2 of powers the print to program a Write,"terms = 10
result = list(map(lambda x: 2 ** x, range(terms)))
print(""The total terms are:"",terms)
for i in range(terms):
   print(""2 raised to power"",i,""is"",result[i])"
4854,"number greater the choose    number
 input two of L.C.M. the find to function python a Write","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
4855,sentence a from punctuations remove to program python a Write,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
4856,number Harshad a is number a if print and find to program a Write,"num = 156;    
rem = sum = 0;   
n = num;    
while(num > 0):    
    rem = num%10;    
    sum = sum + rem;    
    num = num//10;    
if(n%sum == 0):    
    print(str(n) + "" is a harshad number"")    
else:    
    print(str(n) + "" is not a harshad number"")"
4857,n+nn+nn calculate and n number a accept to program python a Write,"n=int(input(""Enter a number n: ""))
temp=str(n)
t1=temp+temp
t2=temp+temp+temp
comp=n+int(t1)+int(t2)
print(""The value is:"",comp)"
4858,"input as given is parenthesis of number parenthesis, valid generate to function python Write","def generateParenthesis(n):
    def backtrack(S='', left=0, right=0):
        if len(S) == 2*n:
            output.append(S)
            return
        if left < n:
            backtrack(S+'(', left+1, right)
        if right < left:
            backtrack(S+')', left, right+1)
    output = []
    backtrack()
    return output"
4859,"target. to sum numbers chosen the where candidates of combinations unique all of list a return target, integer target a and candidates integers distinct list an Given which function python Write","def combinationSum(candidates, target):
    results = []
    def helper(i, path):
        if sum(path) == target:
            results.append(path[:])
            return
        if sum(path) > target:
            return
        for x in range(i, len(candidates)):
            path.append(candidates[x])
            helper(x, path)
            path.pop()
    helper(0, []) 
    return results"
4860,numbers of list of permutation generate to function a Write,"def permute(nums):
    def backtrack(first = 0):
        if first == n:      
            output.append(nums[:])
        for i in range(first, n):
            nums[first], nums[i] = nums[i], nums[first]            
            backtrack(first + 1)
            nums[first], nums[i] = nums[i], nums[first]
    n = len(nums)
    output = []
    backtrack()
    return output"
4861,"overdrawn withdrwa, depoist, like operations basic supports which which Bank a implement to class python a Write","class BankAccount(object):
    def __init__(self, account_no, name, initial_balance=0):
        self.account_no = account_no
        self.name = name
        self.balance = initial_balance
    def deposit(self, amount):
        self.balance += amount
    def withdraw(self, amount):
        self.balance -= amount
    def overdrawn(self):
        return self.balance < 0"
4862,given numbers of list a of median calculate to function a Write,"def median(pool):
    copy = sorted(pool)
    size = len(copy)
    if size % 2 == 1:
        return copy[int((size - 1) / 2)]
    else:
        return (copy[int(size/2 - 1)] + copy[int(size/2)]) / 2"
4863,names file of list given a for folder a in names file unique generate to function python a Write,"from collections import Counter
def getFolderNames(names):
    seen, res = Counter(), []
    for name in names:
        if name in seen:
            while True:
                c = f'({seen[name]})'
                if name + c not in seen:
                    name += c
                    break
                else:
                    seen[name] += 1
        seen[name] += 1
        res.append(name)
    return res"
4864,coordinates polar to number complex convert to program python a Write,import cmath
4865,list a in numbers positive print to program python a write,"list1 = [2,4,-5,3,8,-10,-11]
for i in list1:
    if i>0:
        print(i,end="" "")"
4866,it print and list a in string find to program python a write,"list1 = [1, 2.0, 'have', 'a', 'nice', 'day'] 
s = 'nice'
for i in list1:
    if i == s:
       print(f'{s} is  present in the list')"
4867,function Driver,"List1 = [23, 65, 19, 90] 
pos1, pos2  = 1, 3
print(swapPositions(List1, pos1-1, pos2-1))"
4868,list a from values maximum with element print to program python a  write,"list1 = [""gfg"", ""best"", ""for"", ""geeks""] 
s=[]
for i in list1:
    count=0  
    for j in i:
        if j in ('a','e','i','o','u'):
           count=count+1
    s.append(count)
print(s)    
if  count== max(s):      
    print(list1[s.index(max(s))])"
4869,list the print and rows length K omit to program python a write 9,"list1 = [[4, 7], 
             [8, 10, 12, 8], 
             [10, 11],  
             [6, 8, 10]]"
4870,"sum pair checking     value
 boolean return and sum pair specific a with Rows filter to function python a write 11","def pair_sum(x, k): 
    for idx in range(len(x)): 
        for ix in range(idx + 1, len(x)): 
            if x[idx] + x[ix] == k: 
                return True
    return False"
4871,result printing,"print(""Filtered Rows : "" + str(res))"
4872,result printing,"print(""Decreasing Point : "" + str(res))"
4873,result printing,"print(""Are all columns Unique : "" + str(res))"
4874,value boolean print and equal reverse are list two if check to program python a Write 15,"list1 = [5, 6, 7, 8] 
list2 = [8, 7, 6, 5]"
4875,"operator == + reversed() Using 
 equal reverse are lists two if Check",res = list1 == list(reversed(list2))
4876,list Priority initializing,"prior_list = [6, 4, 7, 1]"
4877,"loop 
 list the print and List Tuple in Elements Priority Extracting","res = [] 
for sub in test_list: 
    for val in prior_list: 
        if val in sub: 
            res.append(val) 
print(res)"
4878,False or true print and list in empty is string any if check to program python a Write 17,"list1 = ['the', 'sun', 'rises', '', 'the', 'east']"
4879,K by string numeric increment to program python a write 18,"list = [""gfg"", ""234"", ""is"", ""98"", ""123"", ""best"", ""4""]"
4880,"character. indexed nth     
 removing after string Returning     
 b variable a in stored is     
 indexed nth the after Characters     
 a variable a in stored is     
 indexed i-th the before Characters     string
 a from character i'th remove to function python a Write 19","def remove(string, i):  
    a = string[ : i]  
    b = string[i + 1: ] 
    return a + b"
4881,"' ' with list the of elements 
  the all join will this","l = ' '.join(l)  
print(l)"
4882,string original printing,"print(""The original string is : "" + str(test_str))"
4883,result printing,"print(""Strings after splitting : "" + str(res))"
4884,it print and character Non-Alphanumeric first till string Extract to program  python a write 29,"test_str = 'geeks4g!!!eeks'
s=''
for i in test_str:
    if i.isalnum()==False:
       break
    else:
      s+=i  
print(s)"
4885,string original printing,"print(""The original string is : "" + str(test_str))
s=test_str.split('@')
print(s[1])"
4886,list prefix initializing,"pref_list = ['best', 'GfG', 'good']"
4887,"Strings in tests Prefix 
 startswith() + filter() using","res = list(filter(test_string.startswith, pref_list)) != []"
4888,"swap             
 permuatation all Finding","result = [] 
def permute(data, i, length):  
    if i == length:  
        result.append(''.join(data) ) 
    else:  
        for j in range(i, length):  
            data[i], data[j] = data[j], data[i]  
            permute(data, i + 1, length)  
            data[i], data[j] = data[j], data[i]   
permute(list(ini_str), 0, len(ini_str))"
4889,character removal initializing,"rem_char = ""e"""
4890,result printing,"print(""The string after character deletion : "" + str(res))"
4891,Concatenation Strings alternate printing for program python a Write 34,"test_list = [""Early"", ""morning"", ""is"", ""good"", ""for"", ""health""]"
4892,list original printing,"print(""The original list : "" + str(test_list)) 
s=[]
k=test_list[::2]
a=["""".join(i for i in k)]
print(a)
l=test_list[1::2]
b=["""".join(i for i in l)]
print(b)
print(a+b)"
4893,"it
s=[] print and sentence from word duplicate remove to program python a Write 35","str1 = ""Good bye bye world world""
l=str1.split("" "")
s=list(set(l))
print("" "".join(i for i in s))"
4894,"i: in j for    
 K initializing","K = 2
l=[]
for i in test_list:
    s=tuple()
    s+=i[K:len(i)-K]
    l.append((s))
print(l)"
4895,it print and element maximum their by Tuples sort to program python a write 37,"def get_max(sub): 
    return max(sub)"
4896,list original printing,"print(""The original list is : "" + str(test_list))
s=[]
k=''
for i in test_list:
    for j in  i:
        k+=str(j)
print(list(set(k)))"
4897,tuples original printing,"print(""The original tuple 1 : "" + str(test_tuple1)) 
print(""The original tuple 2 : "" + str(test_tuple2))"
4898,"comprehension list Using 
 tuples 2 of combinations pair All","res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1]"
4899,K Initializing,K = 2
4900,list original printing,"print(""The original list is : "" + str(test_list))"
4901,result printing,"print(""The lowest K records are : "" + str(res))"
4902,tuples original printing,"print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2))"
4903,"Matrix initializing List
 dictionary a in values same with keys display to program python a write 42","test_list = [{""Gfg"": 5, ""is"": 8, ""best"": 0}, 
             {""Gfg"": 5, ""is"": 1, ""best"": 0}, 
             {""Gfg"": 5, ""is"": 0, ""best"": 0}]"
4904,"values similar for checking         
 value key's similar for dictionary each iterating 
 keys getting","keys = list(test_list[0].keys()) 
res = [] 
for key in keys: 
    flag = 1
    for ele in test_list: 
        if test_list[0][key] != ele[key]: 
            flag = 0
            break
    if flag: 
        res.append(key)"
4905,result printing,"print(""Similar values keys : "" + str(res))"
4906,values ordered with dictionaries filter to program python a write 43,"test_list = [{'gfg': 2, 'is': 8, 'good': 10}, 
             {'gfg': 1, 'for': 10, 'geeks': 9}, 
             {'love': 3, 'gfg': 4}]"
4907,"values dictionary extracting values() 
 values ordered with check to sorted","res = [sub for sub in test_list if sorted( 
    list(sub.values())) == list(sub.values())]"
4908,K initializing,K = 2
4909,list tuples to converting,test_dict = list(test_dict.items())
4910,dictionary to reconverting,res = {sub[0]: sub[1] for sub in res}
4911,result printing,"print(""The required result : "" + str(res))"
4912,"equality value or key for checking     it
 print and value or key equals position dictionary if Count to program python a write 45","test_dict = {5: 3, 1: 3, 10: 4, 7: 3, 8: 1, 9: 5} 
res = 0
test_dict = list(test_dict.items()) 
for idx in range(0, len(test_dict)): 
    if idx == test_dict[idx][0] or idx == test_dict[idx][1]: 
        res += 1"
4913,size initializing,"K = 4
s=list(test_dict.keys())
print(s)
q=list(test_dict.values())
t=[]
for i in q:
    t.append(i//K)
print(t)
q=[]
d={}
for i in range(K):
    for i in range(0,len(s)):
       d[s[i]] = t[i]
    q.append(d)
print(q)"
4914,"it print and list dictionary a from values the with dictionary a update to program python a write 52 
  list initializing","sub_list = [4, 10, 11, 19, 1]
l=list(test_dict.values())
if l == sub_list:
   print(True)
else:
  print(False)  
 test_dict = {""Gfg"" : 2, ""is"" : 1, ""Best"" : 3}"
4915,list dictionary initializing,"dict_list = [{'for' : 3, 'all' : 7}, {'geeks' : 10}, {'and' : 1, 'CS' : 9}]
for i in dict_list:
    test_dict.update(i)
print(test_dict)"
4916,"difference of maximum storing     it
 print and range maximum with value list of key the displays that program python a write 53","test_dict = {""Gfg"" : [6, 2, 4, 1], ""is"" : [4, 7, 3, 3, 8], ""Best"" : [1, 0, 9, 3]} 
max_res = 0
for sub, vals in test_dict.items(): 
    max_res = max(max_res, max(vals) - min(vals))     
    if max_res == max(vals) - min(vals): 
        res = sub"
4917,N initializing,"N = 4
res = []"
4918,result printing,"print(""Top N keys are: "" + str(res))"
4919,K equals summation Values whose Keys Dictionary  a print to program python a write 56,"test_dict = {""Gfg"" : 3, ""is"" : 5, ""Best"" : 9, ""for"" : 8, ""Geeks"" : 10}"
4920,it print and dictionary in name key each to prefix add to  program python a write 57,"test_dict = {'Gfg' : 6, 'is' : 7, 'best' : 9, 'for' : 8, 'geeks' : 11}"
4921,K initializing,"K = 1
s=[]
for key,value in test_dict.items():
    s.append(value[K])
print(s)"
4922,List Values String Dictionary from digits remove  to program python a write 59,import re
4923,dictionary initializing,"test_dict = {'Gfg' : [""G4G is Best 4"", ""4 ALL geeks""], 
             'is' : [""5 6 Good""],  
             'best' : [""Gfg Heaven"", ""for 7 CS""]}"
4924,it print and Keys and Values by Dictionary sort to program a write 61,"test_dict = {""Gfg"" : 1, ""is"" :  3, ""Best"" : 2, ""for"" : 3, ""Geeks"" : 2}"
4925,result printing,"print(""Sorted dictionary : "" + str(res))"
4926,it print and dictionary other from value dictionary replace to program a write 63,"test_dict = {""Gfg"" : 5, ""is"" : 8, ""Best"" : 10, ""for"" : 8, ""Geeks"" : 9}"
4927,dictionary original printing,"print(""The original dictionary is : "" + str(test_dict))"
4928,updict initializing,"updict = {""Gfg""  : 10, ""Best"" : 17} 
d={}
for key in test_dict.keys():
     if key in updict:
        d.update({key:updict[key]})
     else:
        d.update({key:test_dict[key]})
print(d)"
4929,item each for pair key:value generates,"dictionary = dict(subString.split(""="") for subString in str.split("";""))"
4930,dictionary generated the printing,print(dictionary)
4931,it print and Words Key dictionary Remove to  program python a write 66,test_str = 'gfg is best for geeks'
4932,string original printing,"print(""The original string is : "" + str(test_str))"
4933,Dictionary initializing,"test_dict = {'geeks' : 1, 'best': 6} 
l=test_str.split()
print(l)
s=''
for i in l:
    if i in test_dict:
       l.remove(i)
print("" "".join(i for i in l))"
4934,it print and character Kth on Strings group to program python a write 67,"test_list = [""gfg"", ""is"", ""best"", ""for"", ""geeks""]"
4935,list original printing,"print(""The original list is : "" + str(test_list))"
4936,order initializing,"ord_list = ['gfg', 'is', 'best', 'for', 'geeks'] 
c={}
for i in ord_list:
    if i in test_dict:
       c.update({i:test_dict[i]})
print(c)"
4937,it print and K than greater keys Double and Filter to program python a write 72,"test_dict = {'Gfg' : 4, 'is' : 2, 'best': 3, 'for' : 6, 'geeks' : 1}"
4938,key initializing,new_key = 'best'
4939,list initializing,"add_list = [12, 2]"
4940,dictionary original printing,"print(""The original dictionary is : "" + str(test_dict)) 
list1=list(test_dict.values())
print(list1)
s="""".join(i for i in list1)
print(f'Summation of string values is {len(s)}')"
4941,dictionary in lists length shortest with Keys  of printlist to program python a write 77,"test_dict = {'gfg' : [4, 5], 
             'is' : [9, 7, 3, 10], 
             'best' : [11, 34], 
             'for' : [6, 8, 2],  
             'geeks' : [12, 24]}"
4942,K by value Dictionary decrement to program python a write 78,"test_dict = {'gfg' : 1, 'is' : 2, 'for' : 4, 'CS' : 5}"
4943,dictionaries original printing,"print(""The original dictionary 1 is : "" + str(test_dict1)) 
print(""The original dictionary 2 is : "" + str(test_dict2))
count=0
for key1,value1 in test_dict1.items():
    for key2,value2 in test_dict2.items():
        if key1==key2 and value1==value2:
           count=count+1
print(count)"
4944,list original printing,"print(""The original list is : "" + str(test_list))"
4945,result printing,"print(""The filtered tuples : "" + str(res))"
4946,it print and tuple another to power as tuple of elements raise to program python a write 86,"test_tup1 = (10, 4, 5, 6)  
test_tup2 = (5, 6, 7, 5) 
s=tuple()"
4947,tuple original printing,"print(""The original tuple : "" + str(test_tup))
count=0
for i in test_tup:
    if isinstance(i,tuple):
       break
    count=count+1
print(f'count of element till first tuple is {count}')"
4948,list tuples original printing,"print(""The original list : "" + str(test_list)) 
s=''
for i in test_list:
    for j in i:
        s+=' '+j+' '
print(f' string after flattening is {s}')"
4949,it print and tuple concatenate to program python a write 91,"test_tup1 = (1, 3, 5) 
test_tup2 = (4, 6)"
4950,tuples original printing,"print(""The original tuple 1 : "" + str(test_tup1)) 
print(""The original tuple 2 : "" + str(test_tup2)) 
c=test_tup1+test_tup2
print(c)"
4951,it print and tuples under list sort to program python a write 92,"test_tup = ([7, 5, 4], [8, 2, 4], [0, 7, 5])"
4952,tuple original printing,"print(""The original tuple is : "" + str(test_tup)) 
s=tuple(sorted([j for j in i],reverse=False ) for i in test_tup)
print(f'the sorted list inside tuple is {s}')"
4953,it printing and tuple from strings removing  for program python  a write 93,"test_list = [('Geeks', 1, 2), ('for', 4, 'Geeks'), (45, 'good')]"
4954,"
s='' list original printing","print (""The original list is : "" + str(test_list)) 
l=[]
for i in test_list:
    s=''
    for j in i:
        s+=j+' '
    l.append(s)
print(l)"
4955,it print and List Dictionary key each of maximum get to  program python a write 99,"test_list = [{""Gfg"": 8, ""is"": 1, ""Best"": 9}, 
             {""Gfg"": 2, ""is"": 9, ""Best"": 1}, 
             {""Gfg"": 5, ""is"": 10, ""Best"": 7}]"
4956,"max updating and presence key for checking         
 list original printing","print(""The original list is : "" + str(test_list)) 
res = {} 
for i in test_list: 
    for key, value in i.items(): 
        if key in res: 
            res[key] = max(res[key], value) 
        else: 
            res[key] = value"
4957,"list the in element last remove to function python a write 1
","def remove_last_element_list(list1):
    list1.pop()
    return list1"
4958,"circumradius edges, of number the given polygon of area the calculate to function a write 
 3","import math
def area_of_polygon(number_of_edges, circumradius):
        return number_of_edges * 2 * circumradius * math.sin(180/number_of_edges) * circumradius * math.cos(180/number_of_edges) * 0.5"
4959,"circumradius edges, of number the given polygon of apothem the calculate to function a write 4
","import math
def apothem_of_polygon(number_of_edges, circumradius):
    return circumradius * math.cos(180/number_of_edges)"
4960,"values and suits of list the given cards, of deck a creates which function a write 5
","def create_deck_of_cards(values: list, suits: list):
    card_deck = []
    for i in range(52):
        tup = (values[i], suits[i])
        card_deck.append(tup)
    return card_deck"
4961,"step=1 stop, start, and tuple input an given tuple, a slice to function a write  10
","def slice_a_tuple(a_tuple, start, stop, step=1):
    return a_tuple[start:stop:step]"
4962,"type list normal a to list string a convert to function Python a Write 12
","import ast
def convert_string_to_list(str_lst):
    return ast.literal_eval(str_lst)"
4963,"append. without list a extend to function Python a Write 13
","def extend_list_without_append(list1, list2):
    return list1.extend(list2)"
4964,"numbers given three among median the find to function Python a Write  14
","def find_the_median(x,y,z):
    list_ = sorted([x,y,z])
    return list_[1]"
4965,"string given a of word each of letters last and first capitalize to function python a Write 18
","capitalize_both_ends = lambda x: x[0].upper() + x[1:-1] + x[-1].upper()
def capitalize_first_and_last(string):
    string = string.strip().split()
    new_string = [capitalize_both_ends(word) for word in string]
    return new_string"
4966,"string given a from words duplicate remove to function python a Write 19
","def remove_duplicate_words(string):
    string = string.strip().split()
    return ' '.join(set(string))"
4967,"library multiprocessing using scenes the behind working CPUs of number the out print to program Python a Write 24
","import multiprocessing
print(multiprocessing.cpu_count())"
4968,"module sys using information copyright the get to program Python a Write  28
","import sys
print(""\nPython Copyright Information"")
print(sys.copyright)
print()"
4969,"modules textwrap and sys using modules built-in available the find to program Python a Write 29
","import sys
import textwrap
module_name = ', '.join(sorted(sys.builtin_module_names))
print(textwrap.fill(module_name, width=70))"
4970,"library getpass using username current the get to program Python a Write 30
","import getpass
print(getpass.getuser())"
4971,"that of extension the print and user the from filename a accept to program Python a Write 31
","def filename_extension(file):
    f_extns = file.split(""."")
    return f""The extension of the file is :{repr(f_extns[-1])}"""
4972,"4. of multiple a is length it's if string a reverse to function Python a Write 33
","def reverse_string(str1):
    if len(str1) % 4 == 0:
       return ''.join(reversed(str1))
    return str1"
4973,"text. given a of vowels the display and count to program Python a Write 35
","def vowel(text):
    vowels = ""aeiuoAEIOU""
    main_list = [letter for letter in text if letter in vowels]
    return len(main_list), main_list"
4974,"string. given a in word repeated first the find to program Python a Write 37
","def first_repeated_word(str1):
    temp = set()
    for word in str1.split():
        if word in temp:
            return word
        else:
            temp.add(word)
    return 'None'"
4975,"area. the compute and triangle a of height and base the accept will that function Python a Write 40
","def triangle_area(base, height):
    area = base*height/2
    return area"
4976,"input as height vertical & radius with cone a of volume the get to function python a Write  46
","def cone_volume(radius, height):
    volume = 1/3 * 3.14 * (radius ** 2) * height
    return volume"
4977,"input as height vertical & area base with pyramid a of volume the get to function python a Write  
 47","def pyramid_volume(base_area, height):
    volume = 1/3 * base_area * height
    return volume"
4978,"input as side with cube a of area surface the get to function python a Write 
 48","def cube_surface_area(side):
    surface_area = 6 * side ** 2
    return surface_area"
4979,"input as height & perimeter base area, base with prism a of surface_area the get to function python a Write 51
","def prism_surface_area(base_area, base_perimeter, height):
    surface_area = 2*base_area + (base_perimeter*height)
    return surface_area"
4980,"input as height & radius with cylinder a of surface_area the get to function python a Write 52
","def cylinder_surface_area(radius, height):
    surface_area = 3.14 * (radius ** 2) + (2 * 3.14 * radius * height)
    return surface_area"
4981,"input as height slant & radius with cone a of surface_area the get to function python a Write  53
","def cone_surface_area(radius, slant_height):
    surface_area =  3.14 * (radius ** 2) + 3.14 * radius * slant_height
    return surface_area"
4982,"input as height & breadth length, with cuboid a of volume the get to function python a Write  55
","def cuboid_volume(length, breadth, height):
    volume = length * breadth * height
    return volume"
4983,"18...) 11, 7, 4, 3, 1, (2, Numbers Lucas generate to function python a Write 57
","def lucas_numbers(n):
    first, second = 2,1
    for _ in range(n):
        first, second = second, first+second
    return first"
4984,"125...) 64, 27, 8, (1, Numbers Cube generate to function python a Write 59
","def cube_numbers(n):
    for i in range(n):
        yield i **  3"
4985,"places. decimal no with numbers floating following the print to program Python a Write 62
","x = 3.1415926
y = -12.9999
print(""\nOriginal Number: "", x)
print(""Formatted Number with no decimal places: ""+""{:.0f}"".format(x))
print(""Original Number: "", y)
print(""Formatted Number with no decimal places: ""+""{:.0f}"".format(y))"
4986,"tuple. the in appears it times of number the tuple.
return a of items repeated the find to program Python a Write 65
","tuplex = 2, 4, 5, 6, 2, 3, 4, 4, 7 
print(tuplex)
count = tuplex.count(4)
print(count)"
4987,"list a dictionary.
create a into tuples of list a convert to program Python a Write 68
","l = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]
d = {}
for a, b in l:
    d.setdefault(a, []).append(b)
print (d)"
4988,"tuple. a within exists element an whether check to program Python a Write 69
","tuplex = (""w"", 3, ""r"", ""e"", ""s"", ""o"", ""u"", ""r"", ""c"", ""e"")
print(""e"" in tuplex)"
4989,"dictionary. a into tuples of list a convert to program Python a Write 72
","l = [(""x"", 1), (""x"", 2), (""x"", 3), (""y"", 1), (""y"", 2), (""z"", 1)]
d = {}
for a, b in l:
    d.setdefault(a, []).append(b)
print(d)"
4990,"contains. it digit every by divisible is number every where range given a within numbers find to function Python a Write 78
","def divisible_by_digits(start_num, end_num):
    return [n for n in range(start_num, end_num+1) \
                if not any(map(lambda x: int(x) == 0 or n%int(x) != 0, str(n)))]"
4991,"character last and first concatenated the returns and string a takes that function Python a Write 80
","def first_last(name):
    return name[0] + name[-1]"
4992,"1. = a(1) 0, = a(0) with 2, ≥ n for 2) − a(n + 1) − 2a(n = a(n) Sequence
 Pell's return to function Python a Write 83
","def pell_seq(n):
    if n >= 0:
        if n == 0:
            return 0
        elif n == 1:
            return 1
        else:
            return 2 * pell_seq(n-1) + pell_seq(n-2)"
4993,"1. = P(2) = P(1) = P(0) with 3, ≥ n for 3) − P(n + 2) − P(n = P(n) Sequence
 Padovan's return to function Python a Write 85
","def padovan_seq(n):
    if n >= 0:
        if n in {0,1,2}:
            return 1
        else:
            return padovan_seq(n-3) + padovan_seq(n-2)"
4994,"1. = a(1) 0, = a(0) with 2, ≥ n for 2) − 2a(n + 1) − a(n = a(n) number
 Jacobsthal's return to function Python a Write 86
","def jacobsthal_seq(n):
     if n >= 0:
        if n == 0:
            return 0
        elif n == 1:
            return 1
        else:
            return 2 * jacobsthal_seq(n-2) + jacobsthal_seq(n-1)"
4995,"2. = P(2) 0, = P(1) 3, = P(0) with 3, ≥ n for P(n−3) + P(n−2) = P(n) number
 perrin's return to function Python a Write  87
","def perrins_number(n):
    if n >= 0:
        if n == 0:
            return 3
        elif n == 1:
            return 0
        elif n == 2:
            return 2
        else:
            return perrins_number(n-3) + perrins_number(n-2)"
4996,"0. ≥ n with 1, + n⋅2n = Cn number
 cullen return to function Python a Write  88
","def cullen_number(n):
    if n >= 0:
        return n * 2 ** n + 1"
4997,"1. ≥ n with 2, - 1)**2 − (2n numbers
 carol return to function Python a Write  90
","def carol_number(n):
    if n >= 0:
        return (2**n - 1)**2 - 2"
4998,"numbers. given two the of Modulo the returns which function Python a Write 94
","def mod(m, n):
    return m % n"
4999,"numbers. smallest and biggest the between difference the returns and list a takes that function Python a Write 96
","def difference_max_min(lst):
	return abs(min(lst) - max(lst))"
5000,"otherwise. False and empty is string a if True returns that function Python a Write 98
","def is_empty(s):
    if s == """":
        return True
    else:
        return False"
5001,"feet in equivalent the returns and inches in value measurement a accepts that function Python a Write 99
","def inches_to_feet(inches):
    if inches < 12:
        return 0
    return inches/12"
5002,"days. in age the return and age the takes that function Python a Write 100
","def calc_age(age):
    calculation = age*365
    return calculation"
5003,filter using tuples empty remove to function tuples of list a from tuples empty remove to function Python a write,"def Remove(tuples): 
    tuples = filter(None, tuples) 
    return tuples 
tuples = [(), ('ram','15','8'), (), ('laxman', 'sita'),  
          ('krishna', 'akbar', '45'), ('',''),()] 
print(Remove(tuples))"
5004,List a in Numbers even print to program Python a write,"list1 = [10, 21, 4, 45, 66, 93]  
even_nos = [num for num in list1 if num % 2 == 0] 
print(""Even numbers in the list: "", even_nos)"
5005,integers of list given from element largest N find to program Python a write,"l = [1000,298,3579,100,200,-45,900] 
n = 4
l.sort() 
print(l[-n:])"
5006,list. given in number largest second the find to program Python a write,"list1 = [10, 20, 4, 45, 99]
list1.sort()
print(""Second largest element is:"", list1[-2])"
5007,list a of element last and first swap to function python a write,"def swapList(newList): 
    newList[0], newList[-1] = newList[-1], newList[0] 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
5008,Sort Insertion of implementation for function python a write,"def insertionSort(arr): 
    for i in range(1, len(arr)): 
        key = arr[i] 
        j = i-1
        while j >=0 and key < arr[j] : 
                arr[j+1] = arr[j] 
                j -= 1
        arr[j+1] = key 
arr = [12, 11, 13, 5, 6] 
insertionSort(arr) 
print (f""Sorted array is: {arr}"")"
5009,Sort Bubble of implementation for function python a write,"def bubbleSort(arr): 
    n = len(arr) 
    for i in range(n-1): 
        for j in range(0, n-i-1): 
            if arr[j] > arr[j+1] : 
                arr[j], arr[j+1] = arr[j+1], arr[j] 
arr = [64, 34, 25, 12, 22, 11, 90] 
bubbleSort(arr) 
print (f""Sorted array {arr}"")"
5010,numbers binary two adding for program python a write,"num1 = '00001'
num2 = '10001'
sum = bin(int(num1,2) + int(num2,2))
print(sum)"
5011,vowels each of number the count to program python a write,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'
ip_str = ip_str.casefold()
count = {}.fromkeys(vowels,0)
for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
5012,mathematic in like operations using union sets two print to program python a write,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Union of E and N is"",E | N)"
5013,mathematic in like operations using intersection sets two print to program python a write,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Intersection of E and N is"",E & N)"
5014,mathematic in like operations using differences sets two print to program python a write,"E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};
print(""Difference of E and N is"",E - N)"
5015,string a from punctuations remove to program python a write,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
5016,loop nested a using matrix a transpose to program python a write,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
5017,numbers two of H.C.F find to function python a write,"def compute_hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
5018,interval certain a in numbers Armstrong print to program python a write,"lower = 100
upper = 2000
for num in range(lower, upper + 1):
   order = len(str(num))
   sum = 0
   temp = num
   while temp > 0:
       digit = temp % 10
       sum += digit ** order
       temp //= 10
   if num == sum:
       print(num)"
5019,"1 than greater are numbers prime all    interval
 an within numbers prime the all print to program python a write","lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
5020,not or prime is number a if check to program python a write,"num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
5021,element min of index find to program python a write,"lst = [40, 10, 20, 30]
def minIndex(lst):
    return min(range(len(lst)), key=lst.__getitem__)
print(minIndex(lst))"
5022,element max of index find to program python a write,"lst = [40, 10, 20, 30]
def maxIndex(lst):
    return max(range(len(lst)), key=lst.__getitem__)
print(maxIndex(lst))"
5023,"unique are values dict's of all sure make dict
 a in values and keys swaps to program python a write","_dict = {""one"": 1, ""two"": 2}
assert len(_dict) == len(set(_dict.values()))
reversed_dict = {v: k for k, v in _dict.items()}
print(reversed_dict)"
5024,string a of sides both whitespaces add to program python a write,"s = 'The Little Price'
width = 20
s3 = s.center(width)
print(s3)"
5025,dictionary two merge to program python a write,"x = {'a': 1, 'b' : 2}
y = {'c': 3, 'd' : 4}
z = {**x, **y}
print(z)"
5026,Python in N size of chunks into list a Break to program Python a write,"l = [1, 2, 3, 4, 5, 6, 7, 8, 9] 
n = 4
x = [l[i:i + n] for i in range(0, len(l), n)] 
print(x)"
5027,case Pascal to case Snake Convert of working demonstrate to program Python a write,"test_str = 'geeksforgeeks_is_best'
print(""The original string is : "" + test_str) 
res = test_str.replace(""_"", "" "").title().replace("" "", """") 
print(""The String after changing case : "" + str(res))"
5028,String in Character Frequent Maximum find to program Python a write,"test_str = ""GeeksforGeeks""
print (""The original string is : "" + test_str) 
all_freq = {} 
for i in test_str: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get) 
print (""The maximum of all characters in GeeksforGeeks is : "" + res)"
5029,String in Occurrence duplicate Replace of working demonstrate to program Python a write,"test_str = 'Gfg is best . Gfg also has Classes now. Classes help understand better . '
print(""The original string is : "" + test_str) 
repl_dict = {'Gfg' : 'It', 'Classes' : 'They' } 
test_list = test_str.split(' ') 
res = ' '.join([repl_dict.get(val) if val in repl_dict.keys() and test_list.index(val) != idx 
                                else val for idx, val in enumerate(test_list)]) 
print(""The string after replacing : "" + res)"
5030,dictionaries in keys missing Handling for program Python a write,"country_code = {'India' : '0091', 
                'Australia' : '0025', 
                'Nepal' : '00977'} 
print(country_code.get('India', 'Not Found')) 
print(country_code.get('Japan', 'Not Found'))"
5031,Integers Non-Repeating to function Python a write,"def non_repeats(radix):
    count = 0
    for num_digits in range(1, radix + 1):
        product = radix - 1
        for i in range(1, num_digits):
            product *= (radix - i)
        count += product
    return count
print(non_repeats(6))"
5032,matrix square given a of determinant the returns that function Python a write,"def determinant(A):
    if len(A) == 1:
        return A[0][0]
    elif len(A) == 2:
        return A[0][0]*A[1][1] - A[0][1]*A[1][0]
    else:
        s = 0
        for i in range(len(A)):
            B = [[A[row][col] for col in range(1,len(A))] for row in range(len(A)) if row!=i ]
            s += ((-1)**i)*A[i][0]*determinant(B)
        return s
print(determinant([[3, 0], [2, 2]]))"
5033,Ellipse. an of area find to function Python a write,"def findArea(a, b): 
    Area = 3.142 * a * b ; 
    print(""Area:"", round(Area, 2)); 
a = 5; 
b = 4; 
findArea(a, b)"
5034,Icosahedron of volume the find to function Python a write,"def findVolume(a): 
    volume = ((5 / 12) * 
              (3 + 5 ** 0.5) * 
               a * a * a) 
    return volume 
a = 5
print(""Volume: "" , findVolume(a))"
5035,Prism Pentagonal the of area surface find to function Python a write,"def surfaceArea(a, b, h): 
    return 5 * a * b + 5 * b * h 
a = 5
b = 3
h = 7
print(""surface area ="", surfaceArea(a, b, h))"
5036,Torus of volume calculate to program Python a write,"r = 3
R = 7
pi = 3.14159
Volume = (float)(2 * pi * pi * R * r * r)
print(""Volume: "", Volume)"
5037,Torus of area surface calculate to program Python a write,"r = 3
R = 7
Surface = (float)(4 * pi * pi * R * r)
print(""Surface: "", Surface)"
5038,Dictionary in value Maximum with key find to program Python write,"Tv = {'BreakingBad':100, 'GameOfThrones':1292, 'TMKUC' : 88} 
Keymax = max(Tv, key=Tv.get) 
print(Keymax)"
5039,Dictionary in key next Get of working demonstrate to program Python write,"test_dict = {'gfg' : 1, 'is' : 2, 'best' : 3} 
print(f""The original dictionary is : {test_dict}"") 
test_key = 'is'
temp = list(test_dict)
try: 
    res = temp[temp.index(test_key) + 1] 
except (ValueError, IndexError): 
    res = None
print(f""The next key is : {res}"")"
5040,Product Records Cummulative of working demonstrate to program Python write,"def prod(val) : 
    res = 1
    for ele in val: 
        res *= ele 
    return res 
test_list = [(2, 4), (6, 7), (5, 1), (6, 10), (8, 7)] 
print(""The original list : "" + str(test_list)) 
res = prod(int(j) for i in test_list for j in i) 
print(""The Cummulative product of list is : "" + str(res))"
5041,string. given a of copies integer) (non-negative n is which string a get to program Python,"def larger_string(string1, n):
    result = """"
    for i in range(n):
        result = result + string1
    return result
print(larger_string('abc', 2))
print(larger_string('.py', 3))"
5042,"hyphen. - a using join and delimiter (space) "" "" a on string the Split string. a given are You","def word_join(s):
    words = s.split(' ')
    return '-'.join(words)
print(word_join(""This is 17B Assignment""))"
5043,integers. positive two of (GCD) divisor common greatest the compute to program Python,"def gcd(x, y):
    gcd1 = 1
    if x % y == 0:
        return y
    for k in range(int(y / 2), 0, -1):
        if x % k == 0 and y % k == 0:
            gcd1 = k
            break
    return gcd1
print(gcd(12, 17))
print(gcd(4, 6))"
5044,circle a of area calculate to program Python,"def area(a):
    from math import pi
    r = float(input(""Input the radius of the circle : ""))
    return ""The area of the circle with radius "" + str(r) + "" is: "" + str(pi * a ** 2)
print(area(5))"
5045,n+nn+nnn. of value the computes and (n) integer an accepts that program Python,"def custom(n):
    a = n
    n1 = int(""%s"" % a)
    n2 = int(""%s%s"" % (a, a))
    n3 = int(""%s%s%s"" % (a, a, a))
    return n1 + n2 + n3
print(custom(20))"
5046,not or vowel is letter passed whether test to program Python,"def is_vowel(char):
    all_vowels = 'aeiou'
    return char in all_vowels
print(is_vowel('c'))
print(is_vowel('e'))"
5047,"sequence. the in 237 after come that numbers any if
 printing the stop and order same the in list numbers given a from numbers even all out print to program Python","numbers = [
    386, 462, 47, 418, 907, 344, 236, 375, 823, 566, 597, 978, 328, 615, 953, 345,
    399, 162, 758, 219, 918, 237, 412, 566, 826, 248, 866, 950, 626, 949, 687, 217,
    815, 67, 104, 58, 512, 24, 892, 894, 767, 553, 81, 379, 843, 831, 445, 742, 717,
    958, 743, 527
]
for x in numbers:
    if x == 237:
        print(x)
        break;
    elif x % 2 == 0:
        print(x)"
5048,integer type of are objects both if objects two add to program Python,"def add_numbers(a, b):
    if not (isinstance(a, int) and isinstance(b, int)):
        raise TypeError(""Inputs must be integers"")
    return a + b
print(add_numbers(10, 20))"
5049,palindrom for check to program Python,"def isPalindrome(string):
    left_pos = 0
    right_pos = len(string) - 1
    while right_pos >= left_pos:
        if not string[left_pos] == string[right_pos]:
            return False
        left_pos += 1
        right_pos -= 1
    return True
print(isPalindrome('aza'))"
5050,function iside function access to program Python,"def test(a):
    def add(b):
        nonlocal a
        a += 1
        return a + b
    return add
func = test(4)
print(func(4))"
5051,program a in defined variables local of number detect to program python,"def abc():
    x = 1
    y = 2
    str1 = ""w3resource""
    print(""Python Exercises"")
print(abc.__code__.co_nlocals)"
5052,list three add to program python,"def add_list(num1, num2, num3):
    result = map(lambda x, y, z: x + y + z, num1, num2, num3)
    print(""\nNew list after adding above three lists:"")
    print(list(result))
nums1 = [1, 2, 3]
nums2 = [4, 5, 6]
nums3 = [7, 8, 9]
add_list(nums1, nums2, nums3)"
5053,"map Python using index the in
 number corresponding the to raised bases in number said of power the containing list a create to program Python","bases_num = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100]
index = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
def power_base(num1, index1):
    print(""Base numbers abd index: "")
    print(bases_num)
    print(index)
    result = list(map(pow, num1, index1))
    print(""\nPower of said number in bases raised to the corresponding number in the index:"")
    print(result)
power_base(bases_num, index)"
5054,date Gregorian a validate to program Python,"def check_date(m, d, y):
    import datetime
    try:
        m, d, y = map(int, (m, d, y))
        datetime.date(y, m, d)
        return True
    except ValueError:
        return False
print(check_date(11, 11, 2002))
print(check_date('11', '11', '2002'))
print(check_date(13, 11, 2002))"
5055,number prime nth the return to function a Write,"def nth_prime_number(n):
    prime_list = [2]
    num = 3
    while len(prime_list) < n:
        for p in prime_list:
            if num % p == 0:
                break
        else:
            prime_list.append(num)
            num += 2
    return prime_list[-1]"
5056,root square the calculate to Program python a write 3.,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
5057,sum the return and numbers provided user two add to function python a write 4.,"def add_two_numbers(num1, num2):
    sum = num1 + num2
    return sum"
5058,numbers three among largest the print and find to program a write 5.,"num1 = 10
num2 = 12
num3 = 14
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(f'largest:{largest}')"
5059,Numbers Three Among Largest the Find to Program Python 13.,"num1 = 10
num2 = 14
num3 = 12
if (num1 >= num2) and (num1 >= num3):
   largest = num1
elif (num2 >= num1) and (num2 >= num3):
   largest = num2
else:
   largest = num3
print(""The largest number is"", largest)"
5060,"1 than greater are numbers prime all    interval
 an within numbers prime the all display to program 15.Python","lower = 900
upper = 1000
print(""Prime numbers between"", lower, ""and"", upper, ""are:"")
for num in range(lower, upper + 1):
   if num > 1:
       for i in range(2, num):
           if (num % i) == 0:
               break
       else:
           print(num)"
5061,number. a of factorial the find to program Python 16.,"num = 7
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
5062,terms two first,"n1, n2 = 0, 1
count = 0"
5063,"digits) 3 (for Number Armstrong Check to Program Python values
19. update        valid
 is terms of number the if check","if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
num = int(input(""Enter a number: ""))"
5064,result the display,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
5065,digits) 3 (for Number Armstrong Check to Program Python 20.,num = 1634
5066,"function anonymous using 2 of powers the Display Function
 Anonymous Using 2 of Powers Display To Program Python 23.",terms = 10
5067,result the display,"print(""Numbers divisible by 13 are"",result)"
5068,number smaller the choose,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
5069,number smaller the choose,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf"
5070,Algorithm euclidian using GCD or HCf find to program python a Write 32.,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
5071,"number greater the choose    value
 the returb and LCM Find to function Python a write 34.","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm"
5072,"GCD computes function This GCD
 Using LCM Compute to Program Python 35.","def compute_gcd(x, y):
   while(y):
       x, y = y, x % y
   return x"
5073,Number a of Factors the Find to funcction Python 36.,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
5074,numbers two subtracts function This,"def subtract(x, y):
    return x - y"
5075,Matrices Two Add to Program Python 40.,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]"
5076,Comprehension List Nested using Matrices Two Add to Program Python 41.,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[X[i][j] + Y[i][j]  for j in range(len(X[0]))] for i in range(len(X))]
for r in result:
   print(r)"
5077,Comprehension List Nested using Matrix a Transpose to Program Python 43.,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[X[j][i] for j in range(len(X))] for i in range(len(X[0]))]
for r in result:
   print(r)"
5078,"3x4 is result matrix
 3x4 Loop
 Nested using Matrices Two Multiply to Program Python 44.","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]"
5079,string the reverse,rev_str = reversed(my_str)
5080,reverse its to equal is string the if check,"if list(my_str) == list(rev_str):
   print(""The string is a palindrome."")
else:
   print(""The string is not a palindrome."")"
5081,String a From Punctuations Remove to Program Python 46.,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went."""
5082,"words of list a into string the breakdown "")
 string: a input(""Enter = user
my_str the from input take To",words = [word.lower() for word in my_str.split()]
5083,words sorted the display,"print(""The sorted words are:"")
for word in words:
   print(word)"
5084,vowels the count,"for char in ip_str:
   if char in count:
       count[char] += 1
print(count)"
5085,"y2) (x2, and (x1,y1) points 2 given slope derive to function python a Write","def get_slope(x1,y1, x2,y2):
    if (x1 == x2 ):
        return ValueError
    return -((y2-y1)/(x2-x1))"
5086,another to variable one from bit sign the copy to function python a Write,"def copysign(dst, src) :
    return math.copysign(dst, src)"
5087,t variable a given y and x points two between interpolation linear find to function python a Write,"def linear_interpolate(x, y, t ):
    if( t >=1 or t <= 0):
        raise ValueError
    return t*x + (1-t)*y"
5088,spaces include also and string given a from alphabets only extract to function python a Write,"def extract_alpha(my_string):
    return """".join([ c for c in my_string if (c.isalpha() or c.isspace())])"
5089,file input user a to write and string given a in patterns email-id all find to function python a Write,"import re
def extract_mailid(my_string, outfile):
    regex = re.compile(r'[\w]+@[\w]+\.[\w]+', re.UNICODE)    
    mailids = regex.findall(my_string)
    if(len(mailids) > 0):
        with open(outfile, 'w') as mailfile:
            for mailid in mailids:
                mailfile.write(mailid+""\n"")
        mailfile.close()"
5090,"characters 64 to string limit    n
 length of key hexadecimal random a generate to function python a Write","import random
def rand_run_name(n):
    ran = random.randrange(10**80)
    myhex = ""%064x"" % ran
    myhex = myhex[:n]
    return myhex"
5091,"parser.parse_args() = args    args
 of length variable for inputs as filename and program of description and name program as inputs takes that parser argument an create to function python a Write","import argparse
def create_parser(prog_name, prog_description, arg_name):
    parser = argparse.ArgumentParser(prog = prog_name, description = prog_description)
    parser.add_argument(arg_name, nargs='+')
    return parser"
5092,files any has and exists directory given a if check function python a Write,"import os
def check_dir_files(src_dir_path):
    if(os.path.exists(src_dir_path) == False):
        print(""Destination Path doesn't exist"")
        return False
    files_in_dir = glob.glob(src_dir_path+""/*.*"")
    if (len(files_in_dir) <= 0):
        print(""No files present in:"",src_dir_path)
        return False
    print(""The directory "", src_dir_path, "" has "",len(files_in_dir), "" files."")
    return True"
5093,row. first the in columns of number and rows of number the return and delimiter a and file csv specified user a read to function python a Write,"import csv
def read_csv_length(csv_file_name, delimiter_pattern):
    if(os.path.exists(csv_file_name) == False):
        print(""Destination File doesn't exist"")
        return
    with open(csv_file_name, newline='') as csvfile:
        csv_reader = csv.reader(csvfile, delimiter=delimiter_pattern)
        csv_list = list(csv_reader)
        return len(csv_list), len(csv_list[0])"
5094,itertools using array character equivalent to strings of list a convert to function python a Write,"import itertools
def extract_characters(input_list):
    return [ char_val for char_val in itertools.chain.from_iterable(input_list) ]"
5095,length. specified user and list provided user from combination random a generate to function python a Write,"import itertools
def get_random_combination(input_list, combination_length):
    if(len(input_list) < combination_length):
        print(""Requested combination length less than length of list"")
        return
    combination_list = list(itertools.combinations(input_list, combination_length))
    return random.sample(combination_list, 1)"
5096,"logger. this with function user-defined the invoke and file-based a create and loglevel user-defined file, defined user accept to function python a Write","import logging
def create_logging_level(user_func, user_filename, user_loglevel):
    logger = logging.getLogger('simple_example')
    logger.setLevel(user_loglevel)
    ch = logging.FileHandler(user_filename)
    ch.setLevel(user_loglevel)
    logger.addHandler(ch)
    if callable(user_func):
        user_func(logger)"
5097,numbers two subtract to program python a write 2.,"num1 = 1.5
num2 = 6.3
sum = num1 - num2
print(f'Sub: {sum}')"
5098,"variable temporary a Using variables, two swap to program python a Write 6.","x = 5
y = 10
temp = x
x = y
y = temp
print('The value of x after swapping: {}'.format(x))
print('The value of y after swapping: {}'.format(y))"
5099,"Variable Temporary Using Without variables, two swap to program python a Write 7.","x = 5
y = 10
x, y = y, x
print(""x ="", x)
print(""y ="", y)"
5100,"Even or Odd is Number a if Check to Program Python 11. 0
 or Negative Positive, is Number a if Check to Program Python 10.","num = float(input(""Enter a number: ""))
if num > 0:
   print(""Positive number"")
elif num == 0:
   print(""Zero"")
else:
   print(""Negative number"")
 num = int(input(""Enter a number: ""))
if (num % 2) == 0:
   print(""{0} is Even"".format(num))
else:
   print(""{0} is Odd"".format(num))"
5101,"factors for check    not
 or prime is number a if check to Program Python a 14.Write","num = 407
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
5102,number. a of factorial the find to program Python 16.,"num = 7
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
5103,sequence Fibonacci the Print to Program Python 18.,"nterms = int(input(""How many terms? ""))"
5104,"digits) 3 (for Number Armstrong Check to Program Python values
19. update        valid
 is terms of number the if check","if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1
num = int(input(""Enter a number: ""))"
5105,digit each of cube the of sum the find,"temp = num
while temp > 0:
   digit = temp % 10
   sum += digit ** 3
   temp //= 10"
5106,result the display,"if num == sum:
   print(num,""is an Armstrong number"")
else:
   print(num,""is not an Armstrong number"")"
5107,digits) 3 (for Number Armstrong Check to Program Python 20.,num = 1634
5108,"numbers of list a Take Number
 Another by Divisible Numbers Find to Program Python 24.","my_list = [12, 65, 54, 39, 102, 339, 221,]"
5109,filter to function anonymous use,"result = list(filter(lambda x: (x % 13 == 0), my_list))"
5110,Octal to Decimal Convert to Program Python 26.,"dec = 344
print(""The decimal value of"", dec, ""is:"")
print(oct(dec), ""in octal."")"
5111,number smaller the choose,"if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf
num1 = 54 
num2 = 24
print(""The H.C.F. is"", compute_hcf(num1, num2))"
5112,Algorithm euclidian using GCD or HCf find to program python a Write 32.,"def compute_hcf(x, y):
   while(y):
       x, y = y, x % y
   return x"
5113,"number greater the choose    LCM
 Find to Program Python 33.","def compute_lcm(x, y):
   if x > y:
       greater = x
   else:
       greater = y
   while(True):
       if((greater % x == 0) and (greater % y == 0)):
           lcm = greater
           break
       greater += 1
   return lcm
num1 = 54
num2 = 24
print(""The L.C.M. is"", compute_lcm(num1, num2))"
5114,LCM computes function This,"def compute_lcm(x, y):
   lcm = (x*y)//compute_gcd(x,y)
   return lcm
num1 = 54
num2 = 24 
print(""The L.C.M. is"", compute_lcm(num1, num2))"
5115,Number a of Factors the Find to funcction Python 36.,"def print_factors(x):
   print(""The factors of"",x,""are:"")
   for i in range(1, x + 1):
       if x % i == 0:
           print(i)"
5116,"numbers two adds function This Calculator
 Simple a Make to Program Python 37.","def add(x, y):
    return x + y"
5117,numbers two multiplies function This,"def multiply(x, y):
    return x * y"
5118,Recursion Using Sequence Fibonacci Display to Program Python 37.,"def recur_fibo(n):
   if n <= 1:
       return n
   else:
       return(recur_fibo(n-1) + recur_fibo(n-2))
nterms = 10"
5119,Recursion Using Numbers Natural of Sum Find to Program Python 38.,"def recur_sum(n):
   if n <= 1:
       return n
   else:
       return n + recur_sum(n-1)"
5120,negative is number the if check,"if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   print(""The factorial of"", num, ""is"", recur_factorial(num))"
5121,Matrices Two Add to Program Python 40.,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]"
5122,Loop Nested using Matrix a Transpose to Program Python 42.,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]"
5123,"columns through iterate    rows
 through iterate","for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
5124,"Y of rows through iterate        Y
 of columns through iterate    X
 of rows through iterate","for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
5125,string the reverse,rev_str = reversed(my_str)
5126,String a From Punctuations Remove to Program Python 46.,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went."""
5127,"sets three define Operations
 Set Different Illustrate to Program Python 48.","E = {0, 2, 4, 6, 8};
N = {1, 2, 3, 4, 5};"
5128,Vowel Each of Number the Count to Program Python 49.,"vowels = 'aeiou'
ip_str = 'Hello, have you tried our tutorial section yet?'"
5129,comparisions caseless for suitable it make,ip_str = ip_str.casefold()
5130,vowels the count,"count = {x:sum([1 for char in ip_str if char == x]) for x in 'aeiou'}
print(count)"
5131,"array. second the in missing is element which find arrays, two these Given element. random a deleting and array first the of elements the shuffling by formed is array second A integers. non-negative of array an Consider","first_array = [1,2,3,4,5,6,7]
second_array = [3,7,2,1,4,6]
def finder(first_array, second_array):
    return(sum(first_array) - sum(second_array))
missing_number = finder(first_array, second_array)
print(missing_number)"
5132,"intervals. overlapping all merge number, start by sorted already are which intervals of collection a Given","org_intervals = [[1,3],[2,6],[5,10],[11,16],[15,18],[19,22]]
i = 0
while i < len(org_intervals)-1:
    if org_intervals[i+1][0] < org_intervals[i][1]:
        org_intervals[i][1]=org_intervals[i+1][1]
        del org_intervals[i+1]
        i = i - 1
    i = i + 1
print(org_intervals)"
5133,list each revert and chunks equal 3 a into it slice list a Given,"sampleList = [11, 45, 8, 23, 14, 12, 78, 45, 89]
length = len(sampleList)
chunkSize  = int(length/3)
start = 0
end = chunkSize
for i in range(1, 4, 1):
  indexes = slice(start, end, 1)
  listChunk = sampleList[indexes]
  mylist = [i for i in listChunk]
  print(""After reversing it "", mylist)
  start = end
  if(i != 2):
    end +=chunkSize
  else:
    end += length - chunkSize"
5134,input an of exponents calculate to program a write,"input = 9
exponent = 2
final = pow(input, exponent)
print(f'Exponent Value is:{final}')"
5135,number two of remainder the print and find to program a write,"num1 = 12
num2 = 10
ratio = num1 % num2
print(f'remainder:{ratio}')"
5136,Python in number a reverse,"number = 1367891
revs_number = 0  
while (number > 0):
  remainder = number % 10
  revs_number = (revs_number * 10) + remainder
  number = number // 10
print(""The reverse number is : {}"".format(revs_number))"
5137,number in digits of sum compute to program Python,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
5138,list number random a of element middle the Find,"my_list = [4,3,2,9,10,44,1]
print(""mid value is "",my_list[int(len(my_list)/2)])"
5139,order ascending in list the Sort,"my_list = [4,3,2,9,10,44,1]
my_list.sort()
print(f""Ascending Order list:,{my_list}"")"
5140,order descending in list the Sort,"my_list = [4,3,2,9,10,44,1]
my_list.sort(reverse=True)
print(f""Descending Order list:,{my_list}"")"
5141,item removed the returns and list the from index given the at item the Removes,"my_list1 = [4,3,2,9,10,44,1,9,12]
index = 4
print(f""Sum of two list:,{my_list1.pop(index)}"")"
5142,List a to Element Adding,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
5143,List Inside Elements Tuple Count,"random = ['a', ('a', 'b'), ('a', 'b'), [3, 4]]
count = random.count(('a', 'b'))
print(""The count of ('a', 'b') is:"", count)"
5144,list the from items all Removes,"list = [{1, 2}, ('a'), ['1.1', '2.2']]
list.clear()
print('List:', list)"
5145,string a in characters first access,"word = ""Hello World""
letter=word[0]
print(f""First Charecter in String:{letter}"")"
5146,case upper to list new the in values the Set,"list = ""AMITKAYAL""
newlist = [x.upper() for x in list]
print(f""New list to upper case:{newlist}"")"
5147,Sets Two Join,"set1 = {""a"", ""b"" , ""c""}
set2 = {1, 2, 3}
set3 = set2.union(set1)
print(f""Joined Set:{set3}"")"
5148,sets both in present are that items the only keep,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.intersection_update(y)
print(f""Duplicate Value in Two set:{x}"")"
5149,number a and string a Evaluate,"print(bool(""Hello""))
print(bool(15))"
5150,characters trailing removes,"word = "" xyz ""
rstrip = word.rstrip()
print(f""String ater removal of trailing characters:{rstrip}"")"
5151,alphanumeric are char all if check,"word = ""Hello World""
check = word.isalnum()
print(f""All char are alphanumeric?:{check}"")"
5152,digits contains string if test,"word = ""Hello World""
check = word.isdigit()
print(f""String contains digits?:{check}"")"
5153,H with starts string if Test,"word = ""Hello World""
check = word.startswith('H')
print(f""String starts with H?:{check}"")"
5154,string a in Case lower total Counting,"str1 = ""abc4234AFdeaa""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.lower()):
    digitCount += 1
print('Number total lower Case: ',digitCount)"
5155,lists two from numbers of pair every of product the Compute,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
5156,lists two of product pair-wise the Calculate,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [list1[i]*list2[i] for i in range(len(list1))]
print(f""pair-wise product of two lists:{final}"")"
5157,queue the of beginning the at number a Insert,"q = [1,2,3,4]
q.insert(0,5)
print(f""Revised List:{q}"")"
5158,vector two of Addition,"v1 = [1,2,3]
v2 = [1,2,3]
s1 = [0,0,0]
for i in range(len(v1)):
  s1[i] = v1[i] + v2[i]
print(f""New Vector:{s1}"")"
5159,JSON print Pretty,"import json
person_string = '{""name"": ""Bob"", ""languages"": ""English"", ""numbers"": [2, 1.6, null]}'
person_dict = json.loads(person_string)
print(json.dumps(person_dict, indent = 4, sort_keys=True))"
5160,JSON in not or exists key the if Check,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""john wick"",
   ""class"": 8,
   ""percentage"": 75,
   ""email"": ""jhon@pynative.com""
}""""""
print(""Checking if percentage key exists in JSON"")
student = json.loads(studentJson)
if ""percentage"" in student:
    print(""Key exist in JSON data"")
    print(student[""name""], ""marks is: "", student[""percentage""])
else:
    print(""Key doesn't exist in JSON data"")"
5161,"list the from input an of occurrence all remove list, Python a given achieve will which program a Write","list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, 20)
print(resList)"
5162,5 by divisible is which 999 and 100 between integers random 3 Generate,"import random
print(""Generating 3 random integer number between 100 and 999 divisible by 5"")
for num in range(3):
    print(random.randrange(100, 999, 5), end=', ')"
5163,String given a from character random a Pick,"import random
name = 'pynative'
char = random.choice(name)
print(""random char is "", char)"
5164,5 length of String random  Generate,"import random
import string
def randomString(stringLength):
    """"""Generate a random string of 5 charcters""""""
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(stringLength))
print (""Random String is "", randomString(5) )"
5165,"s2 and s1 strings, two given s1 of middle the in s2 appending by string new a create will which program a Write","def appendMiddle(s1, s2):
  middleIndex = int(len(s1) /2)
  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
  print(""After appending new string in middle"", middleThree)
appendMiddle(""Ault"", ""Kelly"")"
5166,string given a from symbols/Punctuation special Remove,"import string
str1 = ""/*Jon is @developer & musician""
new_str = str1.translate(str.maketrans('', '', string.punctuation))
print(""New string is "", new_str)"
5167,elemen each of count the show to dictionary a create and element each of occurrence the count and it iterate list a Given,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
5168,octal to number decimal Convert,"print('%o,' % (8))"
5169,date given a from week a Subtract,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
5170,date? given a of week of day the Find,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
5171,date given a to hours 12 and days) (7 week Add,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
5172,dates given two between days of number Calculate,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
5173,10 to 0 from numbers of sum the calculate to function recursive a Write,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
5174,"order reverse the in integer, an from digit each extract to program a Write","number = 7536
while (number > 0):
    digit = number % 10
    number = number // 10
    print(digit, end="" "")"
5175,randomly list a Shuffle,"import random
list = [2,5,8,9,12]
random.shuffle(list)
print (""Printing shuffled list "", list)"
5176,numbers float of array n-dimensional random a Generate,"import numpy
random_float_array = numpy.random.rand(2, 2)
print(""2 X 2 random float array in [0.0, 1.0] \n"", random_float_array,""\n"")"
5177,IDs unique Universally random Generate,"import uuid
safeId = uuid.uuid4()
print(""safe unique id is "", safeId)"
5178,number random secure reliable a generating,"import secrets
print(""Random integer number generated using secrets module is "")
number = secrets.randbelow(30)
print(number)"
5179,Python in list an by used being is memory Calculate,"import sys
list1 = ['Scott', 'Eric', 'Kelly', 'Emma', 'Smith']
print(""size of list = "",sys.getsizeof(list1))"
5180,dictionary a into lists two Convert,"ItemId = [54, 65, 76]
names = [""Hard Disk"", ""Laptop"", ""RAM""]
itemDictionary = dict(zip(ItemId, names))
print(itemDictionary)"
5181,Email an validate to program Python a Write,"import re 
regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
def check(email):
  if(re.search(regex,email)):
    print(""Valid Email"")
  else:
    print(""Invalid Email"")
email = ""ishwarraja@gmail.com""
check(email)"
5182,number a of factorial the return to function python 2.,"def fact(n):
   if n == 1:
      return n
   else:
      return n * fact(n-1)"
5183,numbers of list a of squareroot the return to function python 3.,"def sqrt(n):
   return [i**0.5 for i in range(n)]"
5184,list a in mubers even add to function python 9.,"def add_even_num(l):
    sum = reduce(lambda a, b: a + b, filter(lambda a: (a % 2 == 0), l))
    return sum"
5185,prime is number a whether find to program python 11.,"def test_prime(n):
    if (n==1):
        return False
    elif (n==2):
        return True;
    else:
        for x in range(2,n):
            if(n % x==0):
                return False
        return True"
5186,numbers of list a of cubes the return to function python 12.,"def cube(n):
   return [i*i*i for i in range(n)]"
5187,numbers given of average the find to function python 13.,"def average():
    numbers = []
    def add(number):
        numbers.append(number)
        total = sum(numbers)
        count = len(numbers)
        return total/count
    return add
a = average()
a(10)
a(20)
a(45)"
5188,datetime for function python 15.,"from datetime import datetime
datetime.utcnow()
def log(msg, *, dt = datetime.utcnow()):
    print(f'Message at {dt} was {msg}')"
5189,reference address of count for function python 16.,"import ctypes
def ref_count(address : int): #what is int doing here? Annotations
    return ctypes.c_long.from_address(address).value"
5190,tuple a modify to function python 17.,"def modify_tuple(t):
    print(f'Initial t mem-add = {id(t)}')
    t[0].append(100)
    print(f'Final t mem-add = {id(t)}')"
5191,reduce using factorial for function python 21.,"def fact(n):
    from operator import mul
    from functools import reduce
    return reduce(mul, range(1, n+1))
fact(10)"
5192,Uppercase to String Convert to Program Python 32.,"string = input(""Please Enter your Own String : "")
string1 = string.upper()
print(""\nOriginal String in Lowercase  =  "", string)
print(""The Given String in Uppercase =  "", string1)"
5193,Interest Simple Calculate to Program Python 33.,"princ_amount = float(input("" Please Enter the Principal Amount : ""))
rate_of_int = float(input("" Please Enter the Rate Of Interest   : ""))
time_period = float(input("" Please Enter Time period in Years   : ""))
simple_interest = (princ_amount * rate_of_int * time_period) / 100
print(""\nSimple Interest for Principal Amount {0} = {1}"".format(princ_amount, simple_interest))"
5194,Cylinder OF Volume Calculate To function Python a write 35.,"def volume(r, h): 
    vol = 22/7 * r * r * h 
    return vol"
5195,"angle. given 
  hanoi of tower the solve to function Python Recursive 36.","def TowerOfHanoi(n , source, destination, auxiliary): 
    if n==1: 
        print ""Move disk 1 from source"",source,""to destination"",destination 
        return
    TowerOfHanoi(n-1, source, auxiliary, destination) 
    print ""Move disk"",n,""from source"",source,""to destination"",destination 
    TowerOfHanoi(n-1, auxiliary, destination, source) 
n = 4
TowerOfHanoi(n,'A','B','C') 
Python 3 program to find time for a"
5196,"theta is hand 
 minute and hand hour between angle when time all print to function python 38.","def printTime(theta): 
    for hh in range(0, 12): 
        for mm in range(0, 60): 
            if (calcAngle(hh, mm)==theta): 
                print(hh, "":"", mm, sep = """") 
                return
    print(""Input angle not valid."") 
    return"
5197,number a of value logarithmic the finding for function python 49.,"def log(x):
  """"""returns the logarithmic value of a number""""""
  return math.log(x)"
5198,vector a of output softmax finding for function python 51.,"def softmax(x):
  """"""returns the softmax output of a vector""""""
  if(type(x) == int or type(x) == float):
    return 1
  denom = 0
  for i in x:
    denom+=math.exp(i)
  new_vec = []
  for i in x:
    new_vec.append(math.exp(i)/denom)
  return new_vec"
5199,palindrome a is string given a if check to function python a write,"def isPalindrome(s):
    return s == s[::-1]"
5200,string given a in present is substring a if check to program a write,"string = ""how are you?""
substring = ""are""
if (string.find(substring) == -1): 
    print(""NO"") 
else: 
    print(""YES"")"
5201,string a in words length even print to program a write,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
5202,vowels all contains which strings the accept to program a write,"str1 = ""__main__""
if len(set(str1).intersection(""AEIOUaeiou""))>=5: 
  print('accepted') 
else: 
  print(""not accepted"")"
5203,strings of pair a in characters matching unique of number of count print to program a write,"str1=""ababccd12@""
str2=""bb123cca1@""
matched_chars = set(str1) & set(str2) 
print(""No. of matching characters are : "" + str(len(matched_chars)) )"
5204,string a in character frequency maximum print to program a write,"str1 = ""watch the match""
all_freq = {} 
for i in str1: 
    if i in all_freq: 
        all_freq[i] += 1
    else: 
        all_freq[i] = 1
res = max(all_freq, key = all_freq.get)
print(""Maximum of all characters is: "" + str(res))"
5205,string given a in urls all find to function a write,"import re 
def find_urls(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
5206,strings two from words common find to function a write,"def commonWords(str1, str2): 
    count = {} 
    for word in str1.split(): 
        count[word] = count.get(word, 0) + 1
    for word in str2.split(): 
        count[word] = count.get(word, 0) + 1
    return [word for word in count if count[word] > 1]"
5207,string a in substring a of occurances all replace to function a write,"str1 = ""Hello! It is a Good thing""
substr1 = ""Good""
substr2 = ""bad""
replaced_str = str1.replace(substr1, substr2)
print(""String after replace :"" + str(replaced_str))"
5208,elements individual into string up break to program a write,"str1 = ""whatisthis""
split_string = list(''.join(str1)) 
print(split_string)"
5209,characters distict K having and size N of string extract to program a write,"str1 = 'GoodisalwaysGoood'
N = 3
K = 2
res = [] 
for idx in range(0, len(str1) - N + 1): 
    if (len(set(str1[idx: idx + N])) == K): 
        res.append(str1[idx: idx + N]) 
print(""Extracted Strings : "" + str(res))"
5210,string of end at is which number increment to program a write,"import re 
str1 = 'count001'
res = re.sub(r'[0-9]+$', 
             lambda x: f""{str(int(x.group())+1).zfill(len(x.group()))}"",  
             str1) 
print(""Incremented numeric String : "" + str(res))"
5211,string a in digits and letters of number print and calculate to program a write,"str1 = ""python1234""
total_digits = 0
total_letters = 0
for s in str1: 
    if s.isnumeric(): 
        total_digits += 1
    else: 
        total_letters += 1
print(""Total letters found : "", total_letters) 
print(""Total digits found : "", total_digits)"
5212,string given a in exists letter case upper a if check to function a write,"def check_upper(str1):
    for char in str1: 
        k = char.isupper()   
        if k == True: 
            return True
    if(k != 1): 
        return False"
5213,string a in words of number print to program a write,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
5214,string a in characters of number print to program a write,"str1 = 'It is a glorious day'
res = len(str1) 
print(""The number of characters in string are : "", str(res))"
5215,dictionary a in key each of character last and first the capitalize to program a write,"input_dict = {'key_a': 10, 'kEy': 2, 'Key_B': 13}
for key in list(input_dict.keys()):
  new_key = key[0].upper() + key[1:-1] + key[-1].upper()
  input_dict[new_key] = input_dict[key]
  if key != new_key:
    del input_dict[key]"
5216,"bingo"" ""no print Otherwise key. of length the than greater is value of length if ""Bingo!"" prints and dictionary a over iterates that program a write","key_val_map = {""key1"": ""length1"", ""key2"": ""len2"", ""Hello"": ""hi"", ""bingo"": ""print bingo""}
for key, val in key_val_map.items():
  if len(val) > len(key):
    print(""Bingo!"")
  else:
    print(""no bingo"")"
5217,dictionary inverted the in list a to appended be should values same the to map that Keys values. non-unique with dictionary a inverts that function a write,"def invert_dict_non_unique(my_dict):
  my_inverted_dict = dict()
  for key, value in my_dict.items():
      my_inverted_dict.setdefault(value, list()).append(key)
  return my_inverted_dict"
5218,it. prints and list dictionary to list value dictionary a convert to program a write,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
5219,dictionary sorted the print and key a by dictionary nested a sort to program a write,"test_dict = {'Nikhil' : { 'roll' : 24, 'marks' : 17}, 
             'Akshat' : {'roll' : 54, 'marks' : 12},  
             'Akash' : { 'roll' : 12, 'marks' : 15}} 
sort_key = 'marks'
res = sorted(test_dict.items(), key = lambda x: x[1][sort_key]) 
print(""The sorted dictionary by marks is : "" + str(res))"
5220,input dictionary nested a from dictionary flattened a return to function python a write,"def flatten_dict(dd, separator ='_', prefix =''): 
    flattened =  { prefix + separator + k if prefix else k : v 
             for kk, vv in dd.items() 
             for k, v in flatten_dict(vv, separator, kk).items() 
             } if isinstance(dd, dict) else { prefix : dd } 
    return flattened"
5221,keys common for values adding by dictionary two combine to program Python a write,"dict1 = {'a': 12, 'for': 25, 'c': 9} 
dict2 = {'Geeks': 100, 'geek': 200, 'for': 300} 
for key in dict2: 
    if key in dict1: 
        dict2[key] = dict2[key] + dict1[key] 
    else: 
        pass"
5222,list. this prints and values their using list a to keys dictionary sorts that program Python a write,"test_dict = {'Geeks' : 2, 'for' : 1, 'CS' : 3} 
res = list(sum(sorted(test_dict.items(), key = lambda x:x[1]), ())) 
print(""List after conversion from dictionary : "", res)"
5223,list. final the Print list. a to element an add to program python a write,"lst = [""Jon"", ""Kelly"", ""Jessa""]
lst.append(""Scott"")
print(lst)"
5224,list. final the Print list. a from numbers even remove to program python a Write,"list1 = [11, 5, 17, 18, 23, 50]  
for ele in list1: 
    if ele % 2 == 0: 
        list1.remove(ele) 
print(""New list after removing all even numbers: "", list1)"
5225,list. final the Print list. a from 18 and 11 remove to program python a Write,"list1 = [11, 5, 17, 18, 23, 50]  
unwanted_num = {11, 18} 
list1 = [ele for ele in list1 if ele not in unwanted_num] 
print(""New list after removing unwanted numbers: "", list1)"
5226,list empty an create to fuction python a Write,"def emptylist():
   return list()"
5227,it. print and list a reverse to program python a Write,"def Reverse(lst): 
    return [ele for ele in reversed(lst)] 
lst = [10, 11, 12, 13, 14, 15] 
print(Reverse(lst))"
5228,"Swapping     list
 final the Print . list a of element last and first swap to program python a Write","def swapList(newList): 
    size = len(newList) 
    temp = newList[0] 
    newList[0] = newList[size - 1] 
    newList[size - 1] = temp 
    return newList 
newList = [12, 35, 9, 56, 24] 
print(swapList(newList))"
5229,7. digit with elements all print for program python a Write,"test_list = [56, 72, 875, 9, 173]  
K = 7
res = [ele for ele in test_list if str(K) in str(ele)] 
print(""Elements with digit K : "" + str(res))"
5230,list. final the Print tuples. of list a from 1 Length of Tuples Remove to program python a Write,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
5231,tuple each in cube its and number having list given from tuples of list a print to program python a Write,"list1 = [1, 2, 5, 6] 
res = [(val, pow(val, 3)) for val in list1] 
print(res)"
5232,tuples. 2 of combinations pair all print to program python a Write,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8) 
res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] 
print(""The filtered tuple : "" + str(res))"
5233,List. in Tuples positive print to program python a Write,"test_list = [(4, 5, 9), (-3, 2, 3), (-3, 5, 6), (4, 6)] 
print(""The original list is : "" + str(test_list)) 
res = [sub for sub in test_list if all(ele >= 0 for ele in sub)] 
print(""Positive elements Tuples : "" + str(res))"
5234,output the out Print element. initial similar have they if tupels of list a from Tuples join to program python a Write,"test_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] 
print(""The original list is : "" + str(test_list)) 
res = [] 
for sub in test_list:                                            
    if res and res[-1][0] == sub[0]:               
        res[-1].extend(sub[1:])                         
    else: 
        res.append([ele for ele in sub])      
res = list(map(tuple, res)) 
print(""The extracted elements : "" + str(res))"
5235,format hour 24 to format hour 12 from time the convert to Function a write,"def convert24(str1): 
    if str1[-2:] == ""AM"" and str1[:2] == ""12"": 
        return ""00"" + str1[2:-2] 
    elif str1[-2:] == ""AM"": 
        return str1[:-2] 
    elif str1[-2:] == ""PM"" and str1[:2] == ""12"": 
        return str1[:-2] 
    else: 
        return str(int(str1[:2]) + 12) + str1[2:8]"
5236,contents its print and path file input given the read would that function python a write,"def read_and_print_file(filepath):
    with open(filepath, ""r"") as infile:
        print( infile.read() )"
5237,loop for a using integers positive n first the print would that program python a write,"n = 62
for num in range(n):
    print(num)"
5238,order descending in sorted list input the returns that function python a write,"def sort_descending(list_to_be_sorted):
    return sorted(list_to_be_sorted, reverse=True)"
5239,"input the is n where numbers, natural n first of sum the return would that function python recursive a write","def sum_first_n_recursive(n):
    if n == 0:
        return 0
    return sum_first_n_recursive(n-1) + n"
5240,number input given a of square the returns that function python a write,"def square(x):
    return x**2"
5241,first the into one second the adding by dictionaries two merge would that program python write,"a = {""a"": 1, ""b"": 3}
b = {""c"": 1, ""d"": 3}
a.update(b)"
5242,string given the reverse would that function python a write,"def reverse_string(str_to_be_reversed):
    return str_to_be_reversed[::-1]"
5243,"World"" ""Hello print would that program python a write","print(""Hello World"")"
5244,LCM their returns and numbers two in takes that function python a write,"def lcm(num1, num2):
    bigger = num1 if num1 > num2 else num2
    while True:
        if (bigger % num1 == 0) and (bigger % num2 == 0):
            break
        bigger += 1
    return bigger"
5245,"argument an is n where n, upto numbers natural of sum calculate to function python recursive a write","def recursive_sum(n):
    if n <= 1:
        return n
    else:
        return n + recursive_sum(n-1)"
5246,element deleted the and list the returns and list a of element last the deletes that function python a write,"def delete_last_element(list_to_be_processed):
    deleted_element = list_to_be_processed.pop()
    return list_to_be_processed, deleted_element"
5247,"0 is number second the if None, returns function The answer. the returns and second the by number first the divides function The numbers. two takes that function python a write","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
5248,loop for with else uses program python a write,"seq = ""abcde""
for k in seq:
    if k == ""f"":
        break
else:
    print(""f Not Found!"")"
5249,list a in numbers of mean the return to function a Write,"def cal_mean(num_list:list)->float:
    if num_list:
        return sum(num_list)/len(num_list)
    else:
        return None"
5250,formula heros by triangle of area the return to function a Write,"def cal_triangle_area(a:float,b:float,c:float)->float:
    if a or b or c:
        s = (a+b+c)/2
        if s>a and s>b and s>c:
            area = (s*(s-a)*(s-b)*(s-c))**(1/2)
            return round(area,2)
        else:
            return None
    return None"
5251,triangle angle right a of area the return to function a Write,"def cal_rt_triangle_area(base:float,height:float)->float:
    if base and height:
        return (base*height)/2
    else:
        return None"
5252,origin from point a of distance cartisian the return to function a Write,"def cal_dist_from_orign(x:float,y:float)->float:
    return (x**2+y**2)**(1/2)"
5253,r raidus of circle a of area the return to function a Write,"def cal_area_circle(r):
    pi = 3.14
    return pi*r**2"
5254,circle a of circumference the return to function a Write,"def cal_circumference(r):
    pi = 3.14
    return 2*pi*r"
5255,rectangle a of perimeter the return to function a Write,"def cal_perimeter_rect(length, bredth):
    return 2*(length+bredth)"
5256,triangle equilateral an of perimeter the return to function a Write,"def cal_perimeter_eq_triangle(a):
    return 3*a"
5257,sphere a of area surface the return to function a Write,"def cal_area_sphere(radius):
    pi = 3.14
    return 4*pi*(radius**2)"
5258,cylinder a of area surface total the return to function a Write,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
5259,cylinder a of volume the return to function a Write,"def cal_cylinder_volume(height, radius):
    pi=3.14
    return pi*(radius**2)*height"
5260,cone a of volume the return to function a Write,"def cal_cone_volume(height,radius):
    pi=3.14
    return pi*(radius**2)*height/3"
5261,sphere hemi a of volume the return to function a Write,"def cal_hemisphere_volume(radius:float)->float:
    pi=3.14
    return (2/3)*pi*(radius**3)"
5262,taken time and unit radian in travelled distance augualr on based veolcity angualr the return to function a Write,"def cal_angular_velocity(angular_dist:float,time:float)->float:
    return angular_dist/time"
5263,lense from image of distance and object of distance the buy lense a of length focal the calculate to function a Write,"def cal_focal_length_of_lense(u:float,v:float)->float:
    return (u*v)/(u+v)"
5264,V is voltage and R is resistance the where curcit the in current the calculate to function a Write,"def cal_current(resistance:float, voltage:float)->float:
    return voltage/resistance"
5265,list given a in parallel in resistances of resistance total the calculate to function a Write,"def cal_total_res_in_parallel(res_list:list)->float:
    return sum([1/r for r in res_list])"
5266,list given a in series in resistances of resistance total the calculate to function a Write,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
5267,R radius and M mass of sphere a of inertia of moment the calculate to function a Write,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
5268,"a acceleration and t time u, velocity initial with object an of displacement the calculate to function a Write","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
5269,"y years in time and r rate p, principal for interest simple the calculate to function a Write","def get_si(p:float, r:float, t:float)->float:
    return (p*r*t)/100"
5270,energy to kg in m mass converting by released energy the calculate to function a Write,"def cal_energy_by_mass(mass:float)->float:
    c = 300000
    return mass * (c**2)"
5271,Recursion using list nested of sum find to function a Write,"total = 0
def sum_nestedlist(l):
    global total
    for j in range(len(l)):
        if type(l[j]) == list:
            sum_nestedlist(l[j])
        else:
            total += l[j]
sum_nestedlist([[1, 2, 3], [4, [5, 6]], 7])
print(total)"
5272,recursion using number of power find to function a Write,"def power(N, P):
    if (P == 0 or P == 1):
        return N
    else:
        return (N * power(N, P - 1))
print(power(5, 2))"
5273,position specific at substring with String Filter to function a Write,"def f_substring():
    test_list = ['program ', 'to', 'filter', 'for', 'substring']
    print(""The original list is : "" + str(test_list))
    sub_str = 'geeks'
    i, j = 0, 5
    res = list(filter(lambda ele: ele[i: j] == sub_str, test_list))
    print(""Filtered list : "" + str(res))"
5274,Sort Gnome implement to function a Write,"def gnomeSort(arr, n):
    index = 0
    while index < n:
        if index == 0:
            index = index + 1
        if arr[index] >= arr[index - 1]:
            index = index + 1
        else:
            arr[index], arr[index - 1] = arr[index - 1], arr[index]
            index = index - 1
    return arr
arr = [34, 2, 10, -9]
n = len(arr)
arr = gnomeSort(arr, n)
print(""Sorted seqquence after applying Gnome Sort :"")
for i in arr:
    print(i)"
5275,angle. given a for time find to function a Write,"def calcAngle(hh, mm):
    hour_angle = 0.5 * (hh * 60 + mm)
    minute_angle = 6 * mm
    angle = abs(hour_angle - minute_angle)
    angle = min(360 - angle, angle)
    return angle"
5276,file a of contents print and read to program python a write,"filepath = 'data.txt'
with open(filepath, 'r') as file:
    data = file.read()
    print(f'Data: {data}')"
5277,list a in numbers add to function python a write,"def add(list):
    sum = 0
    for i in range(0, len(list)):
        sum += list[i]
    return sum"
5278,ReLU as performs that to function python a write,"def ReLU(num):
    if num > 0:
        return num
    return 0"
5279,pattern given a matches string given a if check to function python boolean a write,"import re
def match(pattern, string):
    if re.match(pattern, string):
        return True
    return False"
5280,b and a ranges in integers random of n size of list a make to comprehension list program python a write,"import random
n = 10
a = 1
b = 100
rand = [random.randint(a, b) for i in range(n)]
print(f'list : {rand}')"
5281,lowercase in string a print to program python a write,"string = 'SFG';
print(string.lower())"
5282,numbers two between difference absolute the return to function python a write,"def abs_diff(num1, num2):
    return abs(num1 - num2)"
5283,execution program the terminate to program a write,"import sys
sys.exit()"
5284,variable a of datatype the print to program python a write,"x = 2
print(type(x))"
5285,it print and only alphabets with words return and list a filter to program python a write,"list = ['sadgas1', 'sasg.as3$', 'hsd', '^atg', 'gaf']
result = [item for item in list if item.isalpha()]
print(result)"
5286,it print and string a from characters whitespace trim to program python a write,"string = ' asdga \t\r'
print(string.strip())"
5287,elements the print and iterable simple a accept to function a write,"def print_iter(iter):
    for item in iter:
        print(item)"
5288,not or palindrome a is string a if check to function a write,"def reverse_string(string):
    return string[::-1]
def ispalin(string):
    if string == reverse_string(string):
        return True
    return False"
5289,numbers fibonacci n first the return to print python a write,"def fibonacci(n):
    a, b = 0, 1
    print(a)
    print(b)
    for i in range(n - 2):
        print(a + b)
        a, b = b, a + b"
5290,number a of cube the return to function python a write,"def cube(num)
    return num * num * num"
5291,"time and rate , principal given interest simple calculate to function python a write","def simpleIntereset(principal, rate, time):
    return principal * rate * time / 100"
5292,character a of code ascii print to program a write,"x = '5'
print(ord(x))"
5293,sets two of union the print to program a Write,"Set1 = {""1"",""2"",""3""}
Set2 = {""a"",""b"",""c""}
Set = Set1.union(Set2)
print(Set)"
5294,position its print and string a in character given a find to program a write,"a= ""Hello World""
x= a.find(""r"")
print(x)"
5295,lists two join to program a write,"list1 = [""a"", ""b"", ""c""]
list2 = [1, 2, 3]
list3 = list1 + list2
print(list3)"
5296,id email valid a check to function a write,"import re 
def check(email):    
    regex = '^[a-z0-9]+[\._]?[a-z0-9]+[@]\w+[.]\w{2,3}$'
    if(re.search(regex,email)):  
        print(""Valid Email"")            
    else:  
        print(""Invalid Email"")"
5297,it print and dictionary flat to list key-values convert to program a write,"from itertools import product 
test_dict = {'month' : [1, 2, 3], 
             'name' : ['Jan', 'Feb', 'March']} 
print(""The original dictionary is : "" + str(test_dict)) 
res = dict(zip(test_dict['month'], test_dict['name'])) 
print(""Flattened dictionary : "" + str(res))"
5298,list a in numbers even all of sum print to program a write,"ls = [1,2,3,4,5,6,7,8,10,22]
sum = 0
for i in ls:
    if i % 2 == 0:
        sum += i
print(sum)"
5299,string a in URLs find to function python a write,"import re 
def Find(string): 
    regex = r""(?i)\b((?:https?://|www\d{0,3}[.]|[a-z0-9.\-]+[.][a-z]{2,4}/)(?:[^\s()<>]+|\(([^\s()<>]+|(\([^\s()<>]+\)))*\))+(?:\(([^\s()<>]+|(\([^\s()<>]+\)))*\)|[^\s`!()\[\]{};:'\"".,<>?«»“”‘’]))""
    url = re.findall(regex,string)       
    return [x[0] for x in url]"
5300,lists two of product dot the calculate to function python a write,"def dot(l1, l2):
    return sum(x*y for x,y in zip(l1, l2))"
5301,centimeters into inches and feet as input accept to function a write,"def height_into_cms(feet, inches):
    ininches = feet * 12 + inches
    return ininches * 2.54"
5302,kilometers to miles convert to function a write,"def miles_to_kms(dist):
    return dist * 1.609"
5303,sentence a in vowels of number of count return to function python a write,"def count_vowels(sentence):
   count = 0
   for letter in sentence:
      if letter in ""aeiouAEIOU"":
         count += 1
   return count"
5304,numbers N first of square the return to function a write,"def get_squares(n):
   return [i*i for i in range(n)]"
5305,list a in numbers odd only return to function python a write,"def filter_odd(nums):
   return list(filter(lambda num: num % 2 == 1, nums))"
5306,times n string given a repeat to function python a write,"def repeat_string(string, frequency):
   return string * frequency"
5307,it returns and dict a in values and key the inverts that function python a write,"def invert_dict(dictionary):
   inverted_dict = {value: key for key, value in dictionary.items()}
   return inverted_dict"
5308,numbers of average weighted the returns that function python a write,"def get_weighted_average(numbers, weightage):
   return sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)"
5309,not or year leap a is year if print to program python a write,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
      if (year % 400) == 0:
         print(""{0} is a leap year"".format(year))
      else:
         print(""{0} is not a leap year"".format(year))
   else:
      print(""{0} is a leap year"".format(year))
else:
   print(""{0} is not a leap year"".format(year))"
5310,interval given a in numbers prime all print to program python a write,"lower = 900
upper = 1000
for num in range(lower, upper + 1):
   if num > 1:
      for i in range(2, num):
         if (num % i) == 0:
               break
      else:
         print(num)"
5311,numbers two of lcm the returns that function python a write,"def lcm(x, y):
   if x > y:
      greater = x
   else:
      greater = y
   while(True):
      if((greater % x == 0) and (greater % y == 0)):
         lcm = greater
         break
      greater += 1
   return lcm"
5312,number decimal a of value octal the print to function python a write,"def print_octal(dec):
   print(oct(dec))"
5313,number decimal a of value hexadecimal the print to function python a write,"def print_hexadecimal(dec):
   print(hex(dec))"
5314,number given a to up numbers natural of sum the prints that program python a write,"num = 16
sum = 0
while (num > 0):
   sum += num
   num -= 1
print(f'The sum is {sum}')"
5315,file a in lines of number the return to function python a write,"def count_lines(filename):
   with open(filename, 'r') as f:
      contents = f.read().split('\n')
      return len(contents)"
5316,time and date current the print to program a write,"from datetime import datetime
now = datetime.now()
print(now)"
5317,lists two merge to program python a write,"odd = [1, 3, 5, 7, 9]
even = [2, 4, 6, 8, 10]
odd.extend(even)"
5318,string a in letters lowercase and uppercase of number the print to program python a write,"sentence = 'The Quick Brown Fox'
lowercase = 0
uppercase = 0
for c in sentence:
   if c.isupper():
      uppercase += 1
   elif c.islower():
      lowercase += 1
   else:
      pass
print(f'Lowercase: {lowercase}, Uppercase: {uppercase}')"
5319,sentence in digits and letters of number the print to program python a write,"sentence = 'The Quick 123 Fox'
digits = 0
letters = 0
for c in sentence:
   if c.isdigit():
      digits += 1
   elif c.isalpha():
      letters += 1
   else:
      pass
print(f'Digits: {digits}, Letters: {letters}')"
5320,property name a has that Person called class python a write,"class Person:
   def __init__(self, name):
      self.name = name"
5321,one shorter the prints and parameter a as strings two takes that function python a write,"def print_shorter(str1, str2):
   if (len(str1) > len(str2)):
      print(str2)
   else:
      print(str1)"
5322,it print and sentence a in word each of count the compute to program a write,"word_freq = {}
line = 'how many how words does this many have'
for word in line.split():
   word_freq[word] = word_freq.get(word, 0) + 1
print(word_freq)"
5323,result the returns and comprehension list a using list a in number every squares that function python a write,"def square_numbers(nums):
   return [i*i for i in nums]"
5324,it prints and octal to number octal a converts that program python a write,"octal_num = '17'
decimal_num = int(octal_num, 8)
print(decimal_num)"
5325,it prints and sentence a in spaces blank all removes that program python a write,"sentence = 'the quick brown fox'
print(sentence.replace(' ', ''))"
5326,sentence a in character third every prints that program python a write,"sentence = 'the quick brown fox'
print(sentence[::3])"
5327,comprehensions list using list a from numbers even remove to program a write,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_even_nums = [i for i in nums if i % 2 == 1]"
5328,200 and 100 between numbers random odd 5 print to program a write,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 1], 5))"
5329,list new a prints and lists two in elements corresponding adds that program a write,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
sum_list = [a+b for (a,b) in zip(list1, list2)]
print(sum_list)"
5330,list new a prints and lists two in elements corresponding multiplies that program a write,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
prod_list = [a*b for (a,b) in zip(list1, list2)]
print(prod_list)"
5331,vowels random 5 print to program python a write,"import random
vowels = ['a', 'e', 'i', 'o', 'u']
print([random.choice(vowels) for _ in range(5)])"
5332,consumes it memory of amount the print and variable string a create to program a write,"import sys
string_var = 'string variable'
print(sys.getsizeof(string_var))"
5333,it prints and integer an reverses that program python a write,"num = 12345
reversed = int(str(num)[::-1])
print(reversed)"
5334,values of list separated comma a prints and sorts that program python a write,"values = 'one,two,three,four,five'
items = values.split(',')
items.sort()
print(','.join(items))"
5335,result the print and numbers three multiply to program python a write,"num1 = 2
num2 = 4
num3 = 6
print(num1 * num2 * num3)"
5336,number a of factorial the print to program python a write,"num = 5
fact = 1
while num > 0:
   fact *= num
   num -= 1
print(fact)"
5337,number a of factors the return to function python a write,"def get_factors(num):
   factors = []
   for i in range(1, num + 1):
      if num % i == 0:
         factors.append(i)
   return factors"
5338,even is numbers provided two of product the if True returns that function python a write,"def is_prod_even(num1, num2):
   prod = num1 * num2
   return not prod % 2"
5339,even is numbers provided two of sum the if True returns that function python a write,"def is_prod_even(num1, num2):
   sum = num1 + num2
   return not sum % 2"
5340,it returns and zero list a in values negative all makes that function python a write,"def make_negative_zero(items):
   return [0 if item < 0 else item for item in items]"
5341,circle a of circumference the prints that program python a write,"import math
radius = 10
print(f'Area: {2 * math.pi * radius}')"
5342,sentence a from length specified a than less words remove to program python a write,"sentence = 'this is my sentence and i will write it my way'
minlength = 3
result = [word for word in sentence.split(' ') if len(word) >= minlength]"
5343,list new the returns and numbers negative to numbers all converts and input an as list a takes that function python a write,"def make_all_negative(nums):
   return [num if num < 0 else -num for num in nums]"
5344,it print and word the of length the with sentence a in word each replace to program python a write,"sentence = 'the quick brown fox jumps over the lazy dog'
words = sentence.split(' ')
lengths = [str(len(word)) for word in words]
print(' '.join(lengths))"
5345,list a to set a convert to program python a write,"myset = {1, 2, 4, 7}
mylist = list(myset)"
5346,list the in item the is value the and index the is key the where dictionary a to list a convert to program python a write,"my_list = [1, 8, 1, 2, 2, 9]
my_dict = {key: value for key, value in enumerate(my_list)}"
5347,odd is b and even is a that such b and a iterables 2 adds that function a Write,"def add_even_odd_list(l1:list,l2:list)-> list:
    return [a+b for a,b in zip(l1,l2) if a%2==0 and b%2!=0]"
5348,provided string a from vowel every strips that function a Write,"def strip_vowels(input_str:str)->str:
    vowels = ['a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U' ]
    return ''.join(list(filter(lambda x: x not in vowels, input_str)))"
5349,array 1D a for function ReLU a like acts that function a write,"def relu_list(input_list:list)->list:
    return [(lambda x: x if x >= 0 else 0)(x) for x in input_list]"
5350,number of Factorial generates that function a Write,"def factorial(n):
    if n == 0 or n ==1:
        return 1
    else:
        return n*factorial(n-1)"
5351,times n it repeating by string a print to function a Write,"def print_repeatnstring(text:str, n:int)-> str:
    return text*n"
5352,wise element lists two Subtracts to function a Write,"def sub_listelements(l1:list, l2:list):
    return [i-j for i, j in zip(l1,l2)]"
5353,even are numbers if only wise element lists two adds to function a Write,"def adds_listevenelements(l1:list, l2:list):
    return [i+j for i, j in zip(l1,l2) if i*j%2 == 0]"
5354,odd are numbers if only wise element lists two multiplies to function a Write,"def adds_listoddelements(l1:list, l2:list):
    return [i*j for i, j in zip(l1,l2) if i*j%2 == 1]"
5355,list of elements to power n with elements of list returns that function a Write,"def n_power(l1:list, power:int)->list:
    return [i**power for i in l1]"
5356,input the of value exponential the returns that function a Write,"def exp(x) -> float:
    import math
    return math.exp(x)"
5357,collector garbage a runs returns that function a Write,"def clear_memory():
    import gc
    gc.collect()"
5358,Repetations over transaction for taken time total the averaging fn Function  by transaction any perform to taken time average the calculates that function a Write,"def time_it(fn, *args, repetitons= 1, **kwargs):
    import time
    total_time = []
    for _ in range(repetitons):
        start_time = time.perf_counter()
        fn(*args,**kwargs)
        end_time = time.perf_counter()
        ins_time = end_time - start_time
        total_time.append(ins_time)
    return sum(total_time)/len(total_time)"
5359,not or list a inside present is value if identify to function a Write,"def check_listvalue(l:list, value)->bool:
    return value in l"
5360,characters special all removes that function a Write,"def clean_str(s):
    import re
    return re.sub('[^A-Za-z0-9]+', '', s)"
5361,descending sorted list a returns that function a Write,"def descending_sort(l:list):
    sorted(l, reverse=True)"
5362,values its by ascending sorted dictionary a returns that function a Write,"def ascending_dict_valuesort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[1])}"
5363,keys its by descending sorted dictionary a returns that function a Write,"def descending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), reverse=True, key = lambda ele: ele[0])}"
5364,keys its by ascending sorted dictionary a returns that function a Write,"def ascending_dict_keysort(d:dict):
    return {key: val for key, val in sorted(d.items(), key = lambda ele: ele[0])}"
5365,called is function a times of number count to function python a write,"def counter(fn):
    count = 0
    def inner(*args, **kwargs):
        nonlocal count
        count += 1
        print(f'Function {fn.__name__} was called {count} times.')
        return fn(*""args, **kwargs)    
    return inner"
5366,map using list defined user two print and add to program python a write,"input_string = input(""Enter a list element separated by space "")
list1  = input_string.split()
input_string = input(""Enter a list element separated by space "")
list2  = input_string.split()
list1 = [int(i) for i in list1] 
list2 = [int(i) for i in list2] 
result = map(lambda x, y: x + y, list1, list2) 
print(list(result))"
5367,zip using lists multiple map to function python a write,"def map_values(*args):
  return set(zip(*args))"
5368,element tuple each of length prints and tuple input user takes which program python a write,"userInput = input(""Enter a tuple:"")
x = map(lambda x:len(x), tuple(x.strip() for x in userInput.split(',')))
print(list(x))"
5369,heapq using list sort to function python a write,"def heapsort(iterable):
    from heapq import heappush, heappop
    h = []
    for value in iterable:
        heappush(h, value)
    return [heappop(h) for i in range(len(h))]"
5370,iterator an of front in value single a prepend to function python a write,"def prepend(value, iterator):    
    import itertools
    return itertools.chain([value], iterator)"
5371,"Gxx"" DEF ABC --> 'x') 3, grouper('ABCDEFG',     blocks
 or chunks fixed-length into data collect to function python a write","def grouper(iterable, n, fillvalue=None):
    from itertools import zip_longest
    args = [iter(iterable)] * n
    return zip_longest(*args, fillvalue=fillvalue)"
5372,"D A C B A --> str.lower) unique_justseen('ABBCcAD',     B
 A D C B A --> unique_justseen('AAAABBBCCDAABBB')     seen.""
 just element the only remembering order preserving elements, unique list to function python a write","def unique_justseen(iterable, key=None):
    import operator
    from itertools import groupby    
    return map(next, map(operator.itemgetter(1), groupby(iterable, key)))"
5373,"r) itertools.permutations(iterable, from selection random return to function python a write","def random_permutation(iterable, r=None):
    import random
    pool = tuple(iterable)
    r = len(pool) if r is None else r
    return tuple(random.sample(pool, r))"
5374,"r) itertools.combinations_with_replacement(iterable, from selection random perform to function python a write","def random_combination_with_replacement(iterable, r):
    import random
    pool = tuple(iterable)
    n = len(pool)
    indices = sorted(random.choices(range(n), k=r))
    return tuple(pool[i] for i in indices)"
5375,x to equal or than less value rightmost find to function python a write,"def find_le(a, x):
    from bisect import bisect_right  
    i = bisect_right(a, x)
    if i:
        return a[i-1]
    raise ValueError"
5376,x to equal or than greater item leftmost find to function python a write,"def find_ge(a, x):
    from bisect import bisect_left 
    i = bisect_left(a, x)
    if i != len(a):
        return a[i]
    raise ValueError"
5377,bisect using lookup numeric a map to function python a write,"def grade(score, breakpoints=[60, 70, 80, 90], grades='FDCBA'):
    from bisect import bisect
    i = bisect(breakpoints, score)
    return grades[i]"
5378,content its print and file CSV a read to function python a write,"def read_csv(filename):
    import csv
    with open(filename, newline='') as f:
        reader = csv.reader(f)
        for row in reader:
            print(row)"
5379,palindrome a is string given a if check to function python a write,"def isPalindrome(s):
    return s == s[::-1]"
5380,string a in words length even print to program a write,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
5381,strings of pair a in characters matching unique of number of count print to program a write,"str1=""ababccd12@""
str2=""bb123cca1@""
matched_chars = set(str1) & set(str2) 
print(""No. of matching characters are : "" + str(len(matched_chars)) )"
5382,string given a in character indexed i-th remove to function a write,"def remove_char(string, i):
    str1 = string[ : i]  
    str2 = string[i + 1: ] 
    return str1 + str2"
5383,string a of end the to numbers move to program a write,"str1 = 'hi 123 how are you doing? 567 is with you. Take care of 89'
res = '' 
dig = '' 
for ele in str1: 
    if ele.isdigit(): 
        dig += ele 
    else: 
        res += ele 
res += dig 
print(""Strings after digits at end : "" + str(res))"
5384,vowels surrounding characters count to program a write,"str1 = 'week after week the numbers are increasing'
res = 0
vow_list = ['a', 'e', 'i', 'o', 'u']
for idx in range(1, len(str1) - 1): 
    if str1[idx] not in vow_list and (str1[idx - 1] in vow_list or str1[idx + 1] in vow_list): 
        res += 1
if str1[0] not in vow_list and str1[1] in vow_list: 
    res += 1
if str1[-1] not in vow_list and str1[-2] in vow_list: 
    res += 1
print(""Characters around vowels count : "" + str(res))"
5385,count space return that function a write,"def count_space(str1): 
    count = 0
    for i in range(0, len(str1)): 
        if str1[i] == "" "": 
            count += 1
    return count"
5386,string of end at is which number increment to program a write,"import re 
str1 = 'count001'
res = re.sub(r'[0-9]+$', 
             lambda x: f""{str(int(x.group())+1).zfill(len(x.group()))}"",  
             str1) 
print(""Incremented numeric String : "" + str(res))"
5387,string a in digits and letters of number print and calculate to program a write,"str1 = ""python1234""
total_digits = 0
total_letters = 0
for s in str1: 
    if s.isnumeric(): 
        total_digits += 1
    else: 
        total_letters += 1
print(""Total letters found : "", total_letters) 
print(""Total digits found : "", total_digits)"
5388,string a in words of number print to program a write,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
5389,key specified a by it sorts and dictionaries of list a accepts that function python a write,"def sort_dict_list(dict_list, sort_key):
  dict_list.sort(key=lambda item: item.get(sort_key))"
5390,dictioinary a in key longest the print to program a write,"dict_1 = {""key1"": 10, ""keeeey2"": 2, ""ky3"": 30}
max_key=''
for key in dict_1:
  if len(key)>len(max_key):
    max_key=key
print(max_key)"
5391,inversion its returns and values unique has that dictionary a accepts that function python a write,"def invert_dict(input_dict):
  my_inverted_dict = {value: key for key, value in input_dict.items()}
  return my_inverted_dict"
5392,only. strings of comprising dictionary of values and keys of length the in difference mean the return to function a write,"def mean_key_val_diff(input_dict):
  sum_diff = 0
  for key, val in input_dict.items():
    sum_diff += abs(len(val) - len(key))
  return sum_diff/len(input_dict)"
5393,it. prints and list dictionary to list value dictionary a convert to program a write,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
5394,category. a is key each where list value dictionary a prints and element second on based values tuple categorizes that program a write,"test_list = [(1, 3), (1, 4), (2, 3), (3, 2), (5, 3), (6, 4)] 
res = {} 
for i, j in test_list: 
     res.setdefault(j, []).append(i) 
print(""The dictionary converted from tuple list : "" + str(res))"
5395,input. given a than greater are values whose dictionary a in keys print to program a write,"test_dict = {'tsai' : 4, 'random_key' : 2, 'foo' : 3, 'bar' : 'END'} 
K = 3
res = {key : val for key, val in test_dict.items() 
                   if type(val) != int or val > K} 
print(""Values greater than K : "", res.keys())"
5396,dictionary second the of value and dictionary first the of key having dictionaries prints that program a write,"test_dict1 = {""tsai"" : 20, ""is"" : 36, ""best"" : 100} 
test_dict2 = {""tsai2"" : 26, ""is2"" : 19, ""best2"" : 70} 
keys1 = list(test_dict1.keys()) 
vals2 = list(test_dict2.values()) 
res = dict() 
for idx in range(len(keys1)): 
	res[keys1[idx]] = vals2[idx] 
print(""Mapped dictionary : "" + str(res))"
5397,keys common for values adding by dictionary two combine to program Python a write,"dict1 = {'a': 12, 'for': 25, 'c': 9} 
dict2 = {'Geeks': 100, 'geek': 200, 'for': 300} 
for key in dict2: 
    if key in dict1: 
        dict2[key] = dict2[key] + dict1[key] 
    else: 
        pass"
5398,result the print and timestamp to date convert to program a write,"import time 
import datetime 
str1 = ""20/01/2020""
element = datetime.datetime.strptime(str1,""%d/%m/%Y"") 
timestamp = datetime.datetime.timestamp(element) 
print(timestamp)"
5399,list a in number smallest the print to program python a Write,"list1 = [10, 20, 1, 45, 99] 
print(""Smallest element is:"", min(list1))"
5400,4 to 1 index from elements removing after list a print to program python a Write,"list1 = [11, 5, 17, 18, 23, 50]  
del list1[1:5] 
print(*list1)"
5401,list. final the Print list. a from 18 and 11 remove to program python a Write,"list1 = [11, 5, 17, 18, 23, 50]  
unwanted_num = {11, 18} 
list1 = [ele for ele in list1 if ele not in unwanted_num] 
print(""New list after removing unwanted numbers: "", list1)"
5402,element. even of occurrence last and first between distance the print to program python a Write,"test_list = [1, 3, 7, 4, 7, 2, 9, 1, 10, 11] 
indices_list = [idx for idx in range( 
    len(test_list)) if test_list[idx] % 2 == 0] 
res = indices_list[-1] - indices_list[0] 
print(""Even elements distance : "" + str(res))"
5403,it. print and list a reverse to program python a Write,"def Reverse(lst): 
    return [ele for ele in reversed(lst)] 
lst = [10, 11, 12, 13, 14, 15] 
print(Reverse(lst))"
5404,List a in numbers odd print to program python a Write,"list1 = [10, 21, 4, 45, 66, 93, 11]  
odd_nos = list(filter(lambda x: (x % 2 != 0), list1)) 
print(""Odd numbers in the list: "", odd_nos)"
5405,List a in Numbers negative print to program python a Write,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
5406,list a in elements unique of number printing for program python a Write,"input_list = [1, 2, 2, 5, 8, 4, 4, 8] 
l1 = [] 
count = 0
for item in input_list: 
    if item not in l1: 
        count += 1
        l1.append(item) 
print(""No of unique items are:"", count)"
5407,tuples of list in tuples of combination the print to program python a Write,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')]
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
5408,output the out Print element. initial similar have they if tupels of list a from Tuples join to program python a Write,"test_list = [(5, 6), (5, 7), (6, 8), (6, 10), (7, 13)] 
print(""The original list is : "" + str(test_list)) 
res = [] 
for sub in test_list:                                            
    if res and res[-1][0] == sub[0]:               
        res[-1].extend(sub[1:])                         
    else: 
        res.append([ele for ele in sub])      
res = list(map(tuple, res)) 
print(""The extracted elements : "" + str(res))"
5409,"child add and Tree a defines that class python a write In[7]:
 utf-8
 coding: python
 !/usr/bin/env","class TreeNode:
    def __init__(self, data):
        self.data = data
        self.parent = None
        self.children =[]
    def add_child(self, child):
        child.parent = self
        self.children.append(child)
t = TreeNode(""Arun"")
t.add_child(TreeNode(""Shruthi""))"
5410,"Exception raise given is filepath no if file, text a read to function python a write In[83]:
","def read_file(filepath=None):
    if filepath:
        with open(filepath, 'r') as file_reader:
            f_read = file_reader.read()
        return f_read
    else:
        raise Exception(""filepath not found"")
read_file()"
5411,"dictionary or list of instance a is structure given the if check to function python a write In[104]:
","def check_insst(obj):
    if isinstance(obj, list):
        return ""list""
    elif isinstance(obj, dict):
        return ""dict""
    else:
        return ""unknown""
check_insst({})"
5412,"string or tuple of instance a is structure given the if check to function python a write In[102]:
","def check_inst_tup_str(obj):
    if isinstance(obj, set):
        return ""set""
    elif isinstance(obj, tuple):
        return ""tuple""
    else:
        return ""unknown""
check_inst_tup_str({1})"
5413,"characters) ascii (printable string a in character biggest the return to program python a write In[119]:
","from functools import reduce
input_str = 'tsai'
res = reduce(lambda x, y: x if ord(x) > ord(y) else y, input_str)
print(f""{res}"")"
5414,"list a in number 3rd every adds to program python a write In[120]:
","from functools import reduce
input_list = [x for x in range(10)]
res = reduce(lambda x, y: x+y, [i for idx, i in enumerate(input_list) if (idx+1)%3==0])
print(f""{res}"")"
5415,"result the print values, corresponding adds and simultaneously numbers of lists two iterates which program python a write In[111]:
","f_list = [1,2,3,4]
s_list = [2,3,4,5]
res = [f_n +s_n for f_n, s_n in zip(f_list, s_list)]
print(f""{res}"")"
5416,"list the return and strings of list given the from vowels the all removes that function python a write In[29]:
","def myfunc(listitems):
    final=[]
    for strchar in listitems:
        for letters in strchar:
            if letters in ('a','e','i','o','u', 'A','E','I','O','U'):
                strchar = strchar.replace(letters,"""")            
        final.append(strchar) 
    return final
myfunc([""rohan"", ""END""])"
5417,"list in result the print and list a from duplicates remove to program python a write In[45]:
","input_list = [1,2,3,4,4,33,2,5]
dedup = list(set(input_list))
print(f""{dedup}"")"
5418,"list resultant the return and string each of characters n last and characters n first append and extract input, as n and elements of list a takes that function python a write In[46]:
","def nchar (list1,no):
    return [items[:no]+items[-no:] for items in list1]
list1 = [""ROHAN"", ""END""]
nchar(list1, 3)"
5419,"value maximum and minimum between numbers even all add to function python a write In[60]:
","def add_even_num(min, max):
    return sum([i for i in range(min, max) if i%2==0])
add_even_num(1, 6)"
5420,"sys using version python print to program python a write In[138]:
","import sys
print(f""{sys.version}"")"
5421,"tuples of list to dictionary a convert to program python a write In[151]:
","dict_new = {'1':'A', '2':'B'}
tup = dict_new.items()
print(list(tup))"
5422,"list a from element an remove to program python a write In[153]:
","li = [1, 2, 3, 4]
li.remove(1)
li"
5423,"time system print to program python a write In[140]:
","import time
print(f""{time.time()}"")"
5424,"list the in values positive only keep and zero to values negative the all replace to program python a write In[130]:
","original_prices = [1.25, -9.45, 10.22, 3.78, -5.92, 1.16]
prices = [i if i > 0 else 0 for i in original_prices]
print(f""{prices}"")"
5425,function decorated the call,print(myFunction('100'))
5426,order key dictionary reverse to program a Write 3.,"sample_dict = {1:'Hi',2:'Hello',3:'Hey'}
print(""The original dictionary : "" + str(sample_dict)) 
res = dict(reversed(list(sample_dict.items()))) 
print(""The reversed order dictionary : "" + str(res))"
5427,mapping item and key the reverse to program a Write,"sample_dict = {1:'Seeta',2:'Geeta',3:'Babita'}
print(""The original dictionary : "" + str(sample_dict)) 
sample_dict = {v:k for k, v in sample_dict.items()}
print(""Inverse mapped dictionary : "", str(sample_dict))"
5428,term n-th to up sequence Fibonacci the generate to program a Write,nterms = int(10000)
5429,odd is b and even is a that such b and a iterables 2 add to function python a Write,"n=10
a = []
b = []
_ = [a.append(i) if i%2==0 else b.append(i) for i in range(n)]
def add(a,b):
    return [a+b for a,b in (zip(a,b))]
add(a,b)"
5430,provided string a from vowel every strips to program a Write 6.,"vowels = ('a', 'e', 'i', 'o', 'u')
input_string = ""hello""
print('Vowel in a string',' '.join([x for x in input_string.lower() if x not in vowels]))"
5431,5 by characters all shifts and string character small a takes that function python a Write,"def shift_n_letters(letter, n):
    return chr((ord(letter) - 97 + n % 26) % 26 + 97) if ord(letter)>=97 else chr((ord(letter) - 65 + n % 26) % 26 + 65)
name = ""hello""
res="""".join([shift_n_letters(x,5) for x in name])
print('Resulting string',res)"
5432,list a in numbers even only add  to function python a Write,"from functools import reduce
input_list = [x for x in range(100)]
def sum_even(it):
    return reduce(lambda x, y: x + y if (y % 2)==0 else x, it, 0)
res=sum_even(input_list)
print('Sum of even numbers in the list is ', res)"
5433,list a in number 5th every adds  to program a write,"input_list = [x for x in range(20)]
res=reduce((lambda x, y: x + y), [val for idx, val in enumerate(input_list) if (idx+1)%5==0]) 
print('Sum of every 5th element in the list is', res)"
5434,tuple from value unique get function python a Write,"def unique_values(v):
    return(list(set(v)))
t=[(1,2),(3,4),(4,3),(1,2)]
unique_values(t)"
5435,divisor common greatest find to function python a Write,"def greatest_common_divisor(x,y):
    print(""For"", x, ""and"", y,"","" ) 
    r=x%y
    while r>0:
        r=x%y
        if r ==0: 
            print(""the greatest common divisor is"", y,""."")
        else:
            q=y
            x=q
            y=r
greatest_common_divisor(1071,1029)"
5436,address ip external your check to program a Write,"import re
import requests
url = ""http://checkip.dyndns.org""
request = requests.get(url)
clean = request.text.split(': ', 1)[1]
your_ip = clean.split('</body></html>', 1)[0]
print(""your IP Address is: "",  your_ip)"
5437,"prompt a from username the prompt
get from name user a get to function python a Write","username = input(""Login: >> "")"
5438,dice a role function python Write,"import random
min = 1
max = 6
roll_again = ""yes""
while roll_again == ""yes"" or roll_again == ""y"":
    print(""Rolling the dices..."")
    print(""The values are...."")
    print(random.randint(min, max))
    print(random.randint(min, max))
    roll_again = input(""Roll the dices again?"")"
5439,number a reverse to program a Write,"n=int(input(""Enter number: ""))
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
5440,range given in numbers odd print to program python a Write,"lower=int(input(""Enter the lower limit for the range:""))
upper=int(input(""Enter the upper limit for the range:""))
for i in range(lower,upper+1):
    if(i%2!=0):
        print(i)"
5441,* using,"print('str1 * 3 =', str1 * 3)"
5442,"capitalize and upper lower, either to string given a convert to function python Write","def string_opertaion(st,conversion):
  if(conversion=='lower'):
    return(st.lower())
  elif(conversion=='upper'):
    return(st.upper())
  else:
    return(st.capitalize())
string_opertaion('AwesOME',None)"
5443,string given a of character last and 3rd get to program a Write,"string=""Good Night""
print(""\nSlicing characters between "" +
    ""3rd and last character: "") 
print(string[3:-1])"
5444,string given a from character 3rd a delete to program a Write,"String='welcome'
new_str = """" 
for i in range(len(String)): 
    if i != 2: 
        new_str = new_str + String[i] 
print(new_str)"
5445,"list given user the from elements of number unique the get function python write In[28]:
 utf-8
 coding: python
 !/usr/bin/env","mylist = ['nowplaying', 'PBS', 'PBS', 'nowplaying', 'job', 'debate', 'thenandnow']
def get_unique_elements(list):
    unique = [x for i, x in enumerate(mylist) if i == mylist.index(x)]
    return unique
get_unique_elements(mylist)"
5446,"list passed in number maximum the get function python a write In[86]:
","def max_check(x):
    max_val = x[0] 
    for check in x: 
        if check > max_val: 
            max_val = check 
    return max_val
print(f'{max_check([2,4,5,7,98])}')"
5447,"order desending in list the sort to program a write In[8]:
","data_list = [-5, -23, 5, 0, 23, -6, 23, 67]
new_list = []
while data_list:
    minimum = data_list[0]  # arbitrary number in list 
    for x in data_list: 
        if x > minimum:
            minimum = x
    new_list.append(minimum)
    data_list.remove(minimum)    
print(f'decending_order_list: {new_list}')"
5448,"tuples of list of length getting     
 Item second the by tuples of list a sort to function python a write In[11]:
","def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
5449,"element nth every after list the in elemnet insert to program a write In[12]:
","letters = ['a','b','c','d','e','f','g','h','i','j']
i = 3
while i < len(letters):
    letters.insert(i, 'x')
    i += 4
letters"
5450,"pairs value key list of list to dictonary given convert to program a write In[45]:
","d = {'Food':'Fish&Chips','2012':'Olympics','Capital':'London'}
list_key_value = [ [k,v] for k, v in d.items() ]
print(f'lsit_key_value:{list_key_value}')"
5451,"equal are pairs value) (key, many how check and dictionaries two Compare to program write In[53]:
","x = {""a"":2,""b"":2,""c"":3,""d"":4}
y = {""b"":2,""c"":3, ""d"":4}
shared_items = {k: x[k] for k in x if k in y and x[k] == y[k]}
length = len(shared_items)
print(f'count:{length}')"
5452,"string first of middle the in string second appending by string new a create to funaction python a write In[75]:
","def appendMiddle(s1, s2):
    middleIndex = int(len(s1) /2)
    print(""Original Strings are"", s1, s2)
    middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
    print(""After appending new string in middle"", middleThree)
appendMiddle(""bananna"", ""monkey"")"
5453,"list given the from list empty the remove to program a write In[82]:
","str_list = [""Emma"", ""Jon"", """", ""Kelly"", None, ""Eric"", """"]
print(str_list)"
5454,value empty filter to filter function built-in use,"new_str_list = list(filter(None, str_list))
print(""After removing empty strings"")
print(new_str_list)"
5455,with punctuations Replace,"replace_char = '#'
for char in punctuation:
    str1 = str1.replace(char, replace_char)
print(f""The strings after replacement : {str1}"")"
5456,"provided string a from vowel every strips to program a write In[97]:
","vowels = ('a', 'e', 'i', 'o', 'u')
input_string = ""awesome""
' '.join([x for x in input_string.lower() if x not in vowels])"
5457,Python in number a reverse,"number = 1367891
revs_number = 0  
while (number > 0):
  remainder = number % 10
  revs_number = (revs_number * 10) + remainder
  number = number // 10
print(""The reverse number is : {}"".format(revs_number))"
5458,number in digits of sum compute to program Python,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
5459,List two of Concatenation,"my_list1 = [4,3,2,9,10,44,1]
my_list2 = [5,6,2,8,15,14,12]
print(f""Sum of two list:,{my_list1+my_list2}"")"
5460,List a to Element Adding,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
5461,alphabetically list string the Sort,"thislist = [""orange"", ""mango"", ""kiwi"", ""pineapple"", ""banana""]
thislist.sort()
print(f""Sorted List:{thislist}"")"
5462,sets both in present are that items the only keep,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.intersection_update(y)
print(f""Duplicate Value in Two set:{x}"")"
5463,Duplicates the NOT But List from items All Keep,"x = {""apple"", ""banana"", ""cherry""}
y = {""google"", ""microsoft"", ""apple""}
x.symmetric_difference_update(y)
print(f""Duplicate Value in Two set:{x}"")"
5464,dictionary a print and Create,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Sample Dictionary:{thisdict}"")"
5465,dictionary of length the Calculate,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Length of Dictionary:{len(thisdict)}"")"
5466,string a of length Calculate,"word = ""Hello World""
print(f""Length of string: {len(word)}"")"
5467,dots ten Prints,"ten = ""."" * 10
print(f""Ten dots: {ten}"")"
5468,characters leading removes,"word = "" xyz ""
lstrip = word.lstrip()
print(f""String ater removal of leading characters:{lstrip}"")"
5469,characters trailing removes,"word = "" xyz ""
rstrip = word.rstrip()
print(f""String ater removal of trailing characters:{rstrip}"")"
5470,H with starts string if Test,"word = ""Hello World""
check = word.startswith('H')
print(f""String starts with H?:{check}"")"
5471,character given the for value integer an Returns,"str = ""A""
val = ord(str)
print(f""Integer value for the given character?:{val}"")"
5472,string a in Digits total Counting,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isdigit()):
    digitCount += 1
print('Number of digits: ',digitCount)"
5473,lists two from numbers of pair every of product the Compute,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
5474,stack the from element last the Remove,"s = [1,2,3,4]
print(f""last element from the stack:{s.pop()}"")"
5475,JSON to dictionary Convert,"import json
person_dict = {'name': 'Bob',
'age': 12,
'children': None
}
person_json = json.dumps(person_dict)
print(person_json)"
5476,file a to JSON Writing,"import json
person_dict = {""name"": ""Bob"",
""languages"": [""English"", ""Fench""],
""married"": True,
""age"": 32
}
with open('person.txt', 'w') as json_file:
  json.dump(person_dict, json_file)"
5477,"list the from input an of occurrence all remove list, Python a given achieve will which program a Write","list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, 20)
print(resList)"
5478,string given a Reverse,"str1 = ""PYnative""
print(""Original String is:"", str1)
str1 = str1[::-1]
print(""Reversed String is:"", str1)"
5479,elemen each of count the show to dictionary a create and element each of occurrence the count and it iterate list a Given,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
5480,date given a from week a Subtract,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
5481,date given a to hours 12 and days) (7 week Add,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
5482,dates given two between days of number Calculate,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
5483,10 to 0 from numbers of sum the calculate to function recursive a Write,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
5484,"order reverse the in integer, an from digit each extract to program a Write","number = 7536
while (number > 0):
    digit = number % 10
    number = number // 10
    print(digit, end="" "")"
5485,IDs unique Universally random Generate,"import uuid
safeId = uuid.uuid4()
print(""safe unique id is "", safeId)"
5486,Python in list an by used being is memory Calculate,"import sys
list1 = ['Scott', 'Eric', 'Kelly', 'Emma', 'Smith']
print(""size of list = "",sys.getsizeof(list1))"
5487,expression single a in dictionaries two Merge,"currentEmployee = {1: 'Scott', 2: ""Eric"", 3:""Kelly""}
formerEmployee  = {2: 'Eric', 4: ""Emma""}
allEmployee = {**currentEmployee, **formerEmployee}
print(allEmployee)"
5488,String in cases Alternate,"test_str = ""geeksforgeeks""
res = """" 
for idx in range(len(test_str)): 
    if not idx % 2 : 
       res = res + test_str[idx].upper() 
    else: 
       res = res + test_str[idx].lower() 
print(res)"
5489,string a in words length even print to program a write,"str1 = ""I am doing fine""
s = str1.split(' ')
for word in s:  
    if len(word)%2==0: 
        print(word)"
5490,string a from characters duplicate all remove to program a write,"str1 = ""what a great day!""
print("""".join(set(str1)))"
5491,not or binary is string a if check to program a write,"str1=""01110011 a""
set1 = set(str1)
if set1 == {'0','1'} or set1 == {'0'} or set1 == {'1'}:
    print(""string is binary"")
else:
    print(""string is not binary"")"
5492,word single a with words multiple replace to program a write,"str1 = 'CoffeeDay is best for coffee and having long conversations'
word_list = [""best"", 'long'] 
repl_word = 'good'
res = ' '.join([repl_word if idx in word_list else idx for idx in str1.split()]) 
print(""String after multiple replace : "" + str(res))"
5493,length given a by right string rotate to function a write,"def rotate_right(input,d):  
    Rfirst = input[0 : len(input)-d]  
    Rsecond = input[len(input)-d : ]  
    return (Rsecond + Rfirst)"
5494,vowels surrounding characters count to program a write,"str1 = 'week after week the numbers are increasing'
res = 0
vow_list = ['a', 'e', 'i', 'o', 'u']
for idx in range(1, len(str1) - 1): 
    if str1[idx] not in vow_list and (str1[idx - 1] in vow_list or str1[idx + 1] in vow_list): 
        res += 1
if str1[0] not in vow_list and str1[1] in vow_list: 
    res += 1
if str1[-1] not in vow_list and str1[-2] in vow_list: 
    res += 1
print(""Characters around vowels count : "" + str(res))"
5495,string given a in exists letter case lower a if check to function a write,"def check_lower(str1):
    for char in str1: 
        k = char.islower()   
        if k == True: 
            return True 
    if(k != 1): 
        return False"
5496,string a in words of number print to program a write,"str1 = 'It is a glorious day'
res = len(str1.split()) 
print(""The number of words in string are : "" + str(res))"
5497,string a in characters of number print to program a write,"str1 = 'It is a glorious day'
res = len(str1) 
print(""The number of characters in string are : "", str(res))"
5498,inversion its returns and values unique has that dictionary a accepts that function python a write,"def invert_dict(input_dict):
  my_inverted_dict = {value: key for key, value in input_dict.items()}
  return my_inverted_dict"
5499,only. strings of comprising dictionary of values and keys of length the in difference mean the return to function a write,"def mean_key_val_diff(input_dict):
  sum_diff = 0
  for key, val in input_dict.items():
    sum_diff += abs(len(val) - len(key))
  return sum_diff/len(input_dict)"
5500,dictionaries. of list a in keys unique of number the prints that program a write,"list_of_dicts = [{""key1"": ""val1"", ""Country"": ""India""}, 
                 {""Country"": ""USA"", ""foo"": ""bar""},
                 {""foo"": ""bar"", ""foo2"":""bar2""}]
unique_keys = []
for d in list_of_dicts:
  for key in d:
    if key not in unique_keys:
      unique_keys.append(key)
print(f""Number of unique keys: {len(unique_keys)}"")"
5501,it. prints and list dictionary to list value dictionary a convert to program a write,"test_list = [{'END' : [5, 6, 5]}, {'is' : [10, 2, 3]}, {'best' : [4, 3, 1]}] 
res =[{} for idx in range(len(test_list))] 
idx = 0
for sub in test_list: 
	for key, val in sub.items(): 
		for ele in val: 
			res[idx][key] = ele 
			idx += 1
		idx = 0
print(""Records after conversion : "" + str(res))"
5502,dictionary sorted the print and key a by dictionary nested a sort to program a write,"test_dict = {'Nikhil' : { 'roll' : 24, 'marks' : 17}, 
             'Akshat' : {'roll' : 54, 'marks' : 12},  
             'Akash' : { 'roll' : 12, 'marks' : 15}} 
sort_key = 'marks'
res = sorted(test_dict.items(), key = lambda x: x[1][sort_key]) 
print(""The sorted dictionary by marks is : "" + str(res))"
5503,it return and dictionary nested a into lengths equal of lists three combine to function python a write,"def lists_to_dict(test_list1, test_list2, test_list3):
  res = [{a: {b: c}} for (a, b, c) in zip(test_list1, test_list2, test_list3)] 
  return res"
5504,tuples. of list a into dictionary integer a converts that function a write,"def dict_to_tuple(input_dict):
  out_tuple = [(a, b) for a,b in input_dict.items()]
  return out_tuple"
5505,dictionaries. of list a from key extraction given a of values the print to program a write,"test_list = [{""Gfg"" : 3, ""b"" : 7},  
             {""is"" : 5, 'a' : 10},  
             {""Best"" : 9, 'c' : 11}]  
K = 'Best'
res = [sub[K] for sub in test_list if K in sub][0]   
print(""The extracted value : "" + str(res))"
5506,list. final the Print list. a to element an add to program python a write,"lst = [""Jon"", ""Kelly"", ""Jessa""]
lst.append(""Scott"")
print(lst)"
5507,another to list one of elements all append to function python a write,"def extend_list(list1, list2):
    list1 = [1, 2]
    list2 = [3, 4]
    return list1.extend(list2)"
5508,lists two of elements add to function python a write,"def add_two_lists(list1, list2):
   list1 = [1, 2, 3]
   list2 = [4, 5, 6]
   sum_list = []
   for (item1, item2) in zip(list1, list2):
      sum_list.append(item1+item2)
   return sum_list"
5509,list a of element last the print to program python  a Write,"list1 = ['p','r','o','b','e']
print(list1[-1])"
5510,list a in number smallest the print to program python a Write,"list1 = [10, 20, 1, 45, 99] 
print(""Smallest element is:"", min(list1))"
5511,4 to 1 index from elements removing after list a print to program python a Write,"list1 = [11, 5, 17, 18, 23, 50]  
del list1[1:5] 
print(*list1)"
5512,"list the in present is ""hello"" string a if print to program python a Write  
 list a of sum Cumulative the get to function python a Write","def Cumulative(lists): 
    cu_list = [] 
    length = len(lists) 
    cu_list = [sum(lists[0:x:1]) for x in range(0, length+1)] 
    return cu_list[1:]
l = [1, 2.0, 'hello','have', 'a', 'good', 'day'] 
s = 'hello'  
if s in l: 
    print(f'{s} is present in the list') 
else: 
    print(f'{s} is not present in the list')"
5513,10 length of and 5 as elements all with list a print to program python a Write,"list1 = [5] * 10
print(list1)"
5514,List a in numbers odd print to program python a Write,"list1 = [10, 21, 4, 45, 66, 93, 11]  
odd_nos = list(filter(lambda x: (x % 2 != 0), list1)) 
print(""Odd numbers in the list: "", odd_nos)"
5515,list. final the Print tuples. of list a from 1 Length of Tuples Remove to program python a Write,"test_list = [(4, 5), (4, ), (8, 6, 7), (1, ), (3, 4, 6, 7)] 
K = 1
res = [ele for ele in test_list if len(ele) != K] 
print(""Filtered list : "" + str(res))"
5516,Item second the by tuples of list a sort to function python a Write,"def Sort_Tuple(tup):  
    lst = len(tup)  
    for i in range(0, lst):  
        for j in range(0, lst-i-1):  
            if (tup[j][1] > tup[j + 1][1]):  
                temp = tup[j]  
                tup[j]= tup[j + 1]  
                tup[j + 1]= temp  
    return tup"
5517,tuples. 2 of combinations pair all print to program python a Write,"test_tuple1 = (4, 5) 
test_tuple2 = (7, 8) 
res =  [(a, b) for a in test_tuple1 for b in test_tuple2] 
res = res +  [(a, b) for a in test_tuple2 for b in test_tuple1] 
print(""The filtered tuple : "" + str(res))"
5518,List in elements uncommon the print to program python a Write,"test_list1 = [ [1, 2], [3, 4], [5, 6] ] 
test_list2 = [ [3, 4], [5, 7], [1, 2] ] 
res_list = [] 
for i in test_list1: 
    if i not in test_list2: 
        res_list.append(i) 
for i in test_list2: 
    if i not in test_list1: 
        res_list.append(i) 
print (""The uncommon of two lists is : "" + str(res_list))"
5519,loop for a using integers positive n first the print would that program python a write,"n = 62
for num in range(n):
    print(num)"
5520,tuples such of list the returns and tuple a into list the from element corresponding each zips and sequences of list a in takes that function python a write,"def zip_(list_of_seq):
    return list(zip(*list_of_seq))"
5521,string given the reverse would that function python a write,"def reverse_string(str_to_be_reversed):
    return str_to_be_reversed[::-1]"
5522,values and keys its prints and dictionary a over iterates that program python a write,"a = {""a"":1, ""b"":2, ""c"":3, ""d"":4}
for k, v in a.items():
    print(k, v)"
5523,character given a of value ASCII the print would that function python a write,"def print_ascii(char):
    print(ord(char))"
5524,"argument an is n where n, upto numbers natural of sum calculate to function python recursive a write","def recursive_sum(n):
    if n <= 1:
        return n
    else:
        return n + recursive_sum(n-1)"
5525,element deleted the and list the returns and list a of element last the deletes that function python a write,"def delete_last_element(list_to_be_processed):
    deleted_element = list_to_be_processed.pop()
    return list_to_be_processed, deleted_element"
5526,list input the of elements the of squares the containing list a returns and list a in takes that function python a write,"def square_list_elements(list_to_be_squared):
    return list( map(lambda x: x**2, list_to_be_squared) )"
5527,loop while a using number given the to equal or than less numbers natural out prints that program python a write,"input_num = 27
while input_num:
    print(input_num)
    input_num -= 1"
5528,"0 is number second the if None, returns function The answer. the returns and second the by number first the divides function The numbers. two takes that function python a write","def divide(num1, num2):
    if num2 == 0:
        return
    else:
        return num1 / num2"
5529,list a in numbers of median the return to function a Write,"def cal_median(num_list:list)->float:
    if num_list:
        if len(num_list)%2 != 0:
            return sorted(num_list)[int(len(num_list)/2) - 1]
        else:
            return (sorted(num_list)[int(len(num_list)/2) - 1] + sorted(num_list)[int(len(num_list)/2)])/2
    else:
        return None"
5530,triangle angle right a of area the return to function a Write,"def cal_rt_triangle_area(base:float,height:float)->float:
    if base and height:
        return (base*height)/2
    else:
        return None"
5531,price selling and price cost on based loss or profit the return to function a Write,"def find_profit_or_loss(cp,sp):
    if cp > sp:
        return 'loss', cp-sp
    elif cp < sp:
        return 'profit', sp-cp
    else:
        return 'no profit or loss', 0"
5532,rectangle a of area the return to function a Write,"def cal_area_rect(length, breadth):
    return length*breadth"
5533,q2 and q1 diagonals with rhombus a of area the return to function a Write,"def cal_area_rhombus(q1,q2):
    return (q1*q2)/2"
5534,square a of perimeter the return to function a Write,"def cal_perimeter_square(side):
    return 4*side"
5535,a side of cube a of area surface total the return to function a Write,"def cal_surface_area_cube(a):
    return 6*(a**2)"
5536,sphere a of area surface the return to function a Write,"def cal_area_sphere(radius):
    pi = 3.14
    return 4*pi*(radius**2)"
5537,hemi-sphere a of area surface the return to function a Write,"def cal_area_hemisphere(radius):
    pi = 3.14
    return 2*pi*(radius**2)"
5538,cylinder a of area surface total the return to function a Write,"def cal_cylinder_surf_area(height,radius):
    pi=3.14
    return 2*pi*radius**2*+2*pi*radius*height"
5539,cone a of area surface lateral the return to function a Write,"def cal_cone_lateral_surf_area(height,radius):
    pi=3.14
    return pi*radius*(((height**2)+(radius**2))**(1/2))"
5540,sphere hemi a of volume the return to function a Write,"def cal_hemisphere_volume(radius:float)->float:
    pi=3.14
    return (2/3)*pi*(radius**3)"
5541,time given and speend on based object moving a by covered distance the return to function a Write,"def cal_distance(time:float,speed:float)->float:
    return time*speed"
5542,taken time and unit radian in travelled distance augualr on based veolcity angualr the return to function a Write,"def cal_angular_velocity(angular_dist:float,time:float)->float:
    return angular_dist/time"
5543,lense from image of distance and object of distance the buy lense a of length focal the calculate to function a Write,"def cal_focal_length_of_lense(u:float,v:float)->float:
    return (u*v)/(u+v)"
5544,them between r of distance and m2 and m1 mass of objects two between force gravitational the calculate to function a Write,"def cal_gforce(mass1:float,mass2:float, distance:float)->float:
    g = 6.674*(10)**(-11)
    return (g*mass1*mass2)/(distance**2)"
5545,list given a in parallel in capacitors of capacitance total the calculate to function a Write,"def cal_total_cap_in_parallel(cap_list:list)->float:
    return sum(cap_list)"
5546,list given a in series in resistances of resistance total the calculate to function a Write,"def cal_total_res_in_series(res_list:list)->float:
    return sum(res_list)"
5547,R radius and M mass of ring a of inertia of moment the calculate to function a Write,"def cal_mi_ring(mass:float,radius:float)->float:
    return mass*(radius**2)"
5548,R radius and M mass of sphere a of inertia of moment the calculate to function a Write,"def cal_mi_sphere(mass:float,radius:float)->float:
    return (7/5)*mass*(radius**2)"
5549,"given are T Temperatue and V, Volume - equation gas ideal on based gas ideal of P pressure the calculate to function a Write","def find_pressure_of_ideal_gas(volume:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/volume"
5550,given T Tempreature and P Pressure equation gas ideal on based gas ideal of V volume the calculate to function a Write,"def find_volume_of_ideal_gas(pressure:float, temp:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (n*r*temp)/pressure"
5551,given V Volume and P Pressure equation gas ideal on based gas ideal of T Temprature the calculate to function a Write,"def find_temp_of_ideal_gas(pressure:float, volume:float,n:float)->float:
    r = 8.3145 # gas constant R
    return (pressure*volume)/n*r"
5552,"a acceleration and t time u, velocity initial with object an of displacement the calculate to function a Write","def cal_displacement(initial_velocity:float,accelration:float,time:float)->float:
    return initial_velocity*time + .5*accelration*(time)**2"
5553,v velocity and m mass of object an of energy kinetic the calculate to function a Write,"def cal_ke(mass:float,velocity:float)->float:
    return (mass*(velocity)**2)/2"
5554,apart d distance a at q2 and q1 charge with particles charged two between force electrostatic the calculate to function a Write,"def cal_electrostatic_force(q1,q2,d):
    k = 9*(10**9)
    return (k*q1*q2)/(d**2)"
5555,"temprature converted the Return     celsius
 to fahrenheit or 'f' fahrenheit to 'c' celsius temprature the convert to function a Write","def temp_converter(temp,temp_given_in = 'f'):
    if temp_given_in.lower() == 'f': # Convert to C
        return (temp - 32) * (5/9)
    else: # Convert to F
        return (temp * 9/5) + 32"
5556,Matrix of Column Kth Get to function a Write,"def kth_column(test_list=[[4, 5, 6], [8, 1, 10], [7, 12, 5]],k=2):
    print(""The original list is : "" + str(test_list))
    K =k
    res = list(zip(*test_list))[K]
    print(""The Kth column of matrix is : "" + str(res))"
5557,position specific at substring with String Filter to function a Write,"def f_substring():
    test_list = ['program ', 'to', 'filter', 'for', 'substring']
    print(""The original list is : "" + str(test_list))
    sub_str = 'geeks'
    i, j = 0, 5
    res = list(filter(lambda ele: ele[i: j] == sub_str, test_list))
    print(""Filtered list : "" + str(res))"
5558,sort stooge implement to function a Write,"def stoogesort(arr, l, h):
    if l >= h:
        return
    if arr[l] > arr[h]:
        t = arr[l]
        arr[l] = arr[h]
        arr[h] = t
    if h - l + 1 > 2:
        t = (int)((h - l + 1) / 3)
        stoogesort(arr, l, (h - t))
        stoogesort(arr, l + t, (h))
        stoogesort(arr, l, (h - t))
arr = [2, 4, 5, 3, 1]
n = len(arr)
stoogesort(arr, 0, n - 1)
for i in range(0, n):
    print(arr[i], end = '')"
5559,minute and hand hour between angle when time all print to function a Write,"def printTime(theta):
    for hh in range(0, 12):
        for mm in range(0, 60):
            if (calcAngle(hh, mm) == theta):
                print(hh, "":"", mm, sep="""")
                return
    print(""Input angle not valid."")
    return
theta = 90.0
printTime(theta)"
5560,file given a in word given a of occurrence the count to function python a write,"def check_word_count(word, file):
    if not os.path.isfile(file):
        raise FileNotFoundError
    if not isinstance(word, str):
        raise TypeError
    with open(file, 'r') as f:
        lines = f.readlines()
        words = [l.strip().split(' ') for l in lines]
        words = [word for sublist in words for word in sublist]
        c = Counter(words)
    return c.get(word, 0)"
5561,order. sorted lexicographic in string the of size of permutations possible all get to program python a write,"def get_ordered_permutations(word, k):
    [print(''.join(x)) for x in sorted(list(permutations(word, int(k))))]"
5562,"order. sorted lexicographic in string the of size to up combinations, possible all get to program python a write","def get_ordered_combinations(string, k):
    [print(''.join(x)) for i in range(1, int(k) + 1) for x in combinations(sorted(string), i)]"
5563,order. sorted lexicographic in string the of combinations replacement size possible all get to function python a write,"def get_ordered_combinations_with_replacement(string, k):
    [print(''.join(x)) for x in combinations_with_replacement(sorted(string), int(k))]"
5564,"text modified the return and value shift given with Cipher, Caesar for function python a write","def caesar_cipher(text, shift=1):
    alphabet = string.ascii_lowercase
    shifted_alphabet = alphabet[shift:] + alphabet[:shift]
    table = str.maketrans(alphabet, shifted_alphabet)
    return text.translate(table)"
5565,"string. the in c) (X,  with 'c' character the of occurrences consecutive these Replace string. the in times X consecutively occurs 'c' character a Suppose string. given a compress to function a write","def compress(text):
    from itertools import groupby
    for k, g in groupby(text):
        print(""({}, {})"".format(len(list(g)), k), end="" "")"
5566,"list data a in k by divisible is ar[i]+ar[j] and i<j where pairs j) (i, of number the find to function python a write","def divisible_sum_pairs(arr, k):
    count = 0
    n = len(arr)
    for i in range(n - 1):
        j = i + 1
        while j < n:
            if ((arr[i] + arr[j]) % k) == 0:
                count += 1
            j += 1
    return count
import math"
5567,File Text a in Spaces Blank of Number the Counts that function python a Write,"def count_blank_space():
    fname = input(""file name:"")
    count = 0
    with open(fname, 'r') as f:
        for line in f:
            count += line.count(' ')
    return count"
5568,not or anagrams are strings 2 if check to function python a Write,"def anagram(s1, s2):
    if sorted(s1) == sorted(s2):
        return True
    else:
        return False"
5569,string given a from punctuations strip to function python a write,"def strip_punctuations(s):
    return s.translate(str.maketrans('', '', string.punctuation))"
5570,string a in vowels of number count to function python a write,"def count_vowels(text):
    v = set('aeiou')
    for i in v:
        print(f'\n {i} occurs {text.count(i)} times')"
5571,address IP external check to function python a write,"def check_ip():
    import re
    import urllib.request as ur
    url = ""http://checkip.dyndns.org""
    with ur.urlopen(url) as u:
        s = str(u.read())
        ip = re.findall(r""\d{1,3}.\d{1,3}.\d{1,3}.\d{1,3}"", s)
        print(""IP Address: "", ip[0])
        return ip[0]"
5572,output. an give randomly and continue to input for user asking roll dice for function python a write,"def dice():
    import random
    min = 1
    max = 6
    roll_again = 'y'
    while roll_again == ""yes"" or roll_again == ""y"":
        print(""Rolling the dice..."")
        print(random.randint(min, max))
        roll_again = input(""Roll the dices again?"")
from cryptography.fernet import Fernet"
5573,not or data given for valid is value hashed SHA256 if check to function python a write,"def check_sha256_hash(hashed, data):
    import hashlib
    return True if hashed == hashlib.sha256(data.encode()).hexdigest() else False"
5574,iTunes Apple on playing Artists best 10 get to function python a write,"def get_artists():
    import requests
    url = 'https://itunes.apple.com/us/rss/topsongs/limit=10/json'
    response = requests.get(url)
    data = response.json()
    for artist_dict in data['feed']['entry']:
        artist_name = artist_dict['im:artist']['label']
        print(artist_name)"
5575,"keys the of one on structure data a in item each sort to function python a write get_word(data=""./christmas_carol.txt"")
","def sort_list_with_key():
    animals = [
        {'type': 'lion', 'name': 'Mr. T', 'age': 7},
        {'type': 'tiger', 'name': 'scarface', 'age': 3},
        {'type': 'puma', 'name': 'Joe', 'age': 4}]
    print(sorted(animals, key=lambda animal: -animal['age']))"
5576,sequence infinite an for generator with function python a write,"def infinite_sequence():
    n = 0
    while True:
        yield n
        n += 1
import uuid"
5577,cosmos. this in time and space across identifier Unique a generate to function python a write,"def get_uuid():
    return uuid.uuid4()
import secrets"
5578,UTF-8 to byte convert to function python a write,"def byte_to_utf8(data):
    return data.decode(""utf-8"")
print(byte_to_utf8(data=b'r\xc3\xa9sum\xc3\xa9'))
def hanoi(disks, source, auxiliary, target):
    if disks == 1:
        print('Move disk 1 from peg {} to peg {}.'.format(source, target))
        return
    hanoi(disks - 1, source, target, auxiliary)
    print('Move disk {} from peg {} to peg {}.'.format(disks, source, target))
    hanoi(disks - 1, auxiliary, source, target)"
5579,radius a for vale the print and circle a of Perimeter calculate to Class python a Write,"class CirclePerimeter():
    def __init__(self,radius):
        self.radius=radius
    def perimeter(self):
        return 2 * 3.14 * self.radius
a=6
obj=CirclePerimeter(a)
print(""Perimeter of rectangle:"",obj.perimeter())"
5580,Integers Distinct of Set a from Subsets Possible All print to Class python a Write,"class sub:  
    def f1(self, s1):  
        return self.f2([], sorted(s1))  
    def f2(self, curr, s1):  
        if s1:  
            return self.f2(curr, s1[1:]) + self.f2(curr + [s1[0]], s1[1:])  
        return [curr]  
a=[2, 3, 5, 6, 4, 5]
print(""Subsets: "")
print(sub().f1(a))"
5581,File a of Contents the print and Read to program python a Write,"a=str(input(""Enter file name .txt extension:""))
file2=open(a,'r')
line=file2.readline()
while(line!=""""):
    print(line)
    line=file2.readline()
file2.close()"
5582,File Text a in Words of Number the print and Count to program python a Write,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
5583,File Text a in Lines of Number the Count to program python a Write,"fname = input(""Enter file name: "")
num_lines = 0
with open(fname, 'r') as f:
    for line in f:
        num_lines += 1
print(""Number of lines:"")
print(num_lines)"
5584,File Text the in Present Numbers the all Print that function python a Write,"def print_number(fname):
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isdigit()):
                        print(letter)"
5585,File Text a in Spaces Blank of Number the Counts that function python a Write,"def count_blank_space(fname):
    k = 0
    with open(fname, 'r') as f:
        for line in f:
            words = line.split()
            for i in words:
                for letter in i:
                    if(letter.isspace):
                        k=k+1
    return k"
5586,Order Reverse in File a of Contents the prints that function python a Write,"def reverse_content(filename):
    for line in reversed(list(open(filename))):
        print(line.rstrip())"
5587,Numbers Two of LCM the print to Program Python a Write,"def lcm(a,b):
    lcm.multiple=lcm.multiple+b
    if((lcm.multiple % a == 0) and (lcm.multiple % b == 0)):
        return lcm.multiple
    else:
        lcm(a, b)
    return lcm.multiple
lcm.multiple=0
a=4
b=7
if(a>b):
    LCM=lcm(b,a)
else:
    LCM=lcm(a,b)
print(LCM)"
5588,Recursion Using List Nested a of Sum Total the Find to function Python a Write,"def sum1(lst):
    total = 0
    for element in lst:
        if (type(element) == type([])):
            total = total + sum1(element)
        else:
            total = total + element
    return total"
5589,Strings Input Two in Letters Common prints to Program Python a Write,"s1='python'
s2='schoolofai'
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
5590,Second the in not but String First the in are Letters which Prints that Program Python a Write,"s1='python'
s2='schoolofai'
a=list(set(s1)-set(s2))
print(""The letters are:"")
for i in a:
    print(i)"
5591,Dictionary a in Items the All Multiply to Program Python a Write,"def mul_dict(d):
    tot=1
    for i in d:    
        tot=tot*d[i]
    return tot"
5592,Dictionary a into Lists Two Map to Program Python a Write,"def map_dict(keys, values):
    return dict(zip(keys,values))"
5593,String Non-Empty a from Character Index nth the Remove to Program Python a Write,"def remove(string, n):  
      first = string[:n]   
      last = string[n+1:]  
      return first + last"
5594,Exchanged been have Character Last the and Character First the where String New a Form to Program Python a Write,"def change(string):
      return string[-1:] + string[1:-1] + string[:1]"
5595,String a in Values Index Odd of Characters the Remove to Program Python a Write,"def modify(string):  
    final = """"   
    for i in range(len(string)):  
        if i % 2 == 0:  
            final = final + string[i]  
    return final"
5596,comprehension list using Number the of Square the as Element Second and Number the as Element First the with Tuples of List a Create to Program Python a Write,"l_range=2
u_range=5
a=[(x,x**2) for x in range(l_range,u_range+1)]"
5597,List a from Items Duplicate the print and Remove to Program Python a Write,"a=[2, 3, 8, 9, 2, 4, 6]
b = set()
unique = []
for x in a:
    if x not in b:
        unique.append(x)
        b.add(x)
print(""Non-duplicate items:"")
print(unique)"
5598,Repeat can Words where List a in Word Given the of Occurrence ith the Remove to Program Python a Write,"a=['the', 'tsai', 'python' ,'a' ,'the', 'a']
c=[]
count=0
b='a'
n=3
for i in a:
    if(i==b):
        count=count+1
        if(count!=n):
            c.append(i)
    else:
        c.append(i)
if(count==0):
    print(""Item not found "")
else: 
    print(""The number of repetitions is: "",count)
    print(""Updated list is: "",c)
    print(""The distinct elements are: "",set(a))"
5599,Integer an of Factors Prime print to Program Python a Write,"n=24
print(""Factors are:"")
i=1
while(i<=n):
    k=0
    if(n%i==0):
        j=1
        while(j<=i):
            if(i%j==0):
                k=k+1
            j=j+1
        if(k==2):
            print(i)
    i=i+1"
5600,Integer an of Divisors the all print to Program Python a Write,"n=60
print(""The divisors of the number are:"")
for i in range(1,n+1):
    if(n%i==0):
        print(i)"
5601,Number Strong a is Number a if Check to Program Python a Write,"def strong_no_check(num):
    sum1=0
    temp=num
    while(num):
        i=1
        f=1
        r=num%10
        while(i<=r):
            f=f*i
            i=i+1
        sum1=sum1+f
        num=num//10
    if(sum1==temp):
        return True
    else:
        return False"
5602,Number Prime a is Number a if Check to Program Python a Write,"def prime_no_check(a):
    k=0
    for i in range(2,a//2+1):
        if(a%i==0):
            k=k+1
    if(k<=0):
        return True
    else:
        return False"
5603,"even is n             odd
 is n             Number
 Given a for Conjecture Collatz print and test to Program Python a Write","def collatz(n):
    while n > 1:
        print(n, end=' ')
        if (n % 2):
            n = 3*n + 1
        else:
            n = n//2
    print(1, end='')"
5604,Number a in Bits Set Count to function Python a Write,"def count_set_bits(n):
    count = 0
    while n:
        n &= n - 1
        count += 1
    return count"
5605,Number Given a Reverse the print to Program Python a Write,"n=1023
rev=0
while(n>0):
    dig=n%10
    rev=rev*10+dig
    n=n//10
print(""Reverse of the number:"",rev)"
5606,Matrix Identity an Print to function Python a Write,"def print_identity_matrix(n):
    for i in range(0,n):
        for j in range(0,n):
            if(i==j):
                print(""1"",sep="" "",end="" "")
            else:
                print(""0"",sep="" "",end="" "")
        print()"
5607,closer using no given a for series fibonacci of list a print to Program Python a Write,"def fib():
    cache = {1:1, 2:1}
    def calc_fib(n):
        if n not in cache:
            print(f'Calculating fib({n})')
            cache[n] = calc_fib(n - 1) + calc_fib(n - 2)
        return cache[n]
    return calc_fib"
5608,class using no given a for series fibonacci of list a print to Program Python a Write,"class Fib:
    def __init__(self):
        self.cache = {1:1, 2:1}
    def fib(self, n):
        if n not in self.cache:
            print(f'Calculating fib({n})')
            self.cache[n] = self.fib(n-1) + self.fib(n-2)
        return self.cache[n]"
5609,Series Cosine of Sum the Find to function Python a Write,"def cosine(x,n):
    cosx = 1
    sign = -1
    for i in range(2, n, 2):
        pi=22/7
        y=x*(pi/180)
        cosx = cosx + (sign*(y**i))/math.factorial(i)
        sign = -sign
    return cosx"
5610,strings of character the shifts that function Python a Write,"def char_shift(string, shift_count):
    '''This function takes a string as an input and shifts each character by 5 and returns shifted string'''
    return """".join([chr(ord(x)+shift_count) if (ord(x)+shift_count) <= 122 else chr(96 + (ord(x)+shift_count) - 122) for x in string])"
5611,string a in character biggest returns that function Python a Write,"from functools import reduce
def biggest_char(string):
    '''This function takes an input as a string and returns the biggest output character in the string'''
    biggest_chr = lambda x, y: x if ord(x) > ord(y) else y
    return reduce(biggest_chr, string)"
5612,polygon equilateral a of length side calculate that function Python a Write,"import math
def side_length(no_of_sides, circumradius):
    return 2 * circumradius * math.sin(math.pi / no_of_sides)"
5613,list provided user the in number alternate every print to function python a write,"def print_alternate_numbers(list1):
	print(list1[::2])"
5614,Year Leap a is year given a if print and Check to Program Python a Write,"year = 2000
if (year % 4) == 0:
   if (year % 100) == 0:
       if (year % 400) == 0:
           print(f""{year} is a leap year"")
       else:
           print(f""{year} is not a leap year"")
   else:
       print(f""{year} is a leap year"")
else:
   print(f""{year} is not a leap year"")"
5615,character given the of value ASCII the print to Program python a write,"c = 'p'
print(""The ASCII value of '"" + c + ""' is"", ord(c))"
5616,Fahrenheit To Celsius Convert to Program Python Write,"celsius = 37.5
fahrenheit = (celsius * 1.8) + 32
print('%0.1f degree Celsius is equal to %0.1f degree Fahrenheit' %(celsius,fahrenheit))"
5617,number a of Root Square the print to Program Python Write,"num = 8 
num_sqrt = num ** 0.5
print('The square root of %0.3f is %0.3f'%(num ,num_sqrt))"
5618,List in digits number of sum print to program python a Write,"test_list = [12, 67, 98, 34] 
res = [] 
for ele in test_list: 
    sum = 0
    for digit in str(ele): 
        sum += int(digit) 
    res.append(sum) 
print (""List Integer Summation : "" + str(res))"
5619,list a in numbers negative print to program Python a Write,"list1 = [11, -21, 0, 45, 66, -93] 
for num in list1: 
    if num < 0: 
       print(num, end = "" "")"
5620,list a in element given of occurrences Count to program python a Write,"def countX(lst, x): 
    return lst.count(x)"
5621,string given from digits numeric remove to function python a Write,"def removedigits(ini_string):
	res = ''.join([i for i in ini_string if not i.isdigit()]) 
    return res"
5622,given are points three if not or valid is triangle whether Check to function python a Write,"def checkTriangle(x1, y1, x2, y2, x3, y3): 
    a = (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) 
    if a == 0: 
        return False 
    else: 
        return True"
5623,given are sides if not or valid is triangle whether Check to function python a Write,"def checkValidity(a, b, c):  
    if (a + b <= c) or (a + c <= b) or (b + c <= a) : 
        return False
    else: 
        return True"
5624,list A From Vowel with starting words print to Program Python a Write,"test_list = [""all"", ""love"", ""and"", ""get"", ""educated"", ""by"", ""gfg""] 
print(""The original list is : "" + str(test_list)) 
res = [] 
vow = ""aeiou""
for sub in test_list: 
    flag = False
    for ele in vow: 
        if sub.startswith(ele): 
            flag = True 
            break
    if flag: 
        res.append(sub)  
print(""The extracted words : "" + str(res))"
5625,String in words length odd extract to function python a Write,"def findoddlenthwords(test_str):
	res = [] 
	for ele in test_str.split(): 
		if len(ele) % 2 : 
			res.append(ele) 
	return res"
5626,String in words length even extract to function python a Write,"def findevenlenthwords(test_str):
	res = [] 
	for ele in test_str.split(): 
		if len(ele) % 2 == 0: 
			res.append(ele)  
	return res"
5627,String in lengths Words print to program python a Write,"test_string = ""India is my country""
res = list(map(len, test_string.split())) 
print (""The list of words lengths is : "" + str(res))"
5628,string. cleaned the print and String a From Punctuations Remove to Program Python Write,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, he said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
5629,empty. becomes list the until numbers of list a from number third every print and remove to program Python a Write,"num = [10,20,30,40,50,60,70,80,90]
len_list = len(num)
position = 3 - 1
idx = 0
while len_list > 0:
    idx = (idx+position) % len_list
    print(num.pop(idx))
    len_list-=1"
5630,interest simple compute to function Python a Write,"def simple_interest(p,t,r): 
    si = (p * t * r)/100
    return si"
5631,binary to in string convert to function python a write,"def convertstringtobinary(text):
	for chr in text:
		bin = ''
		asciiVal = int(ord(chr))
		while asciiVal > 0:
			if asciiVal % 2 == 0:
				bin = bin + '0'
			else:
				bin = bin + '1'
			asciiVal = int(asciiVal/2)
		return(bin + "" : "" + bin[::-1])"
5632,user the by provided string a form words the alphabetically sort to program python a Write,"def sortwords(my_str):
	words = my_str.split()
	words.sort()
	return ' '.join(words)"
5633,it print and times 10 list a rotate to program python a write,"list = [11,22,33,44,55,66,77,88,99]
n = 10
finalList = []
for i in range(0, N):
    finalList.append(list[(i+d)%N])
print(finalList)"
5634,List Given a in Numbers of Average the print and Calculate to Program Python a write,"a= [11,22,33,44,55,66,77,88,99]
avg=sum(a)/len(a)
print(""Average of elements in the list"",round(avg,2))"
5635,binary to code Gray convert to function Python a write,"def gray_to_binary(n):
    n = int(n, 2) # convert to int
    mask = n
    while mask != 0:
        mask >>= 1
        n ^= mask
    return bin(n)[2:]"
5636,String a in $ with ‘a’ of Occurrences all Replace to Program Python a write,"def replacestring(txt):
	return txt.replace('A','$')"
5637,Sides Three All Given Triangle a of Area the print to program python a write,"a = 15
b = 9
c = 7
s=(a+b+c)/2
area=(s*(s-a)*(s-b)*(s-c)) ** 0.5
print(""Area of the triangle is: "",round(area,2))"
5638,feet to centimeter in dimension print to program python a Write,"cm = 50
feet=0.0328*cm
print(""The dimension in feet "",round(feet,2))"
5639,result the print and Dictionary a in Items the All Multiply to Program Python a Write,"d={'A':10,'B':10,'C':239}
tot=1
for i in d:    
    tot=tot*d[i]
print(tot)"
5640,Strings Input Two in Letters Common print to Program Python Write,"s1=""Trump was the American President""
s2=""Who is the American President now?""
a=list(set(s1)&set(s2))
print(""The common letters are:"")
for i in a:
    print(i)"
5641,List a in Occurs Number Particular a Times of Number the Search to Program Python a Write,"a = [2,3,2,3,4,4,5,5,6,6,6]
k=0
num=6
for j in a:
    if(j==num):
        k=k+1
print(""Number of times"",num,""appears is"",k)"
5642,Number a of Bit Set Rightmost the Clear to function Python write,"def clear_rightmost_set_bit(n):
    return n & (n - 1)"
5643,result. print and Matrices Two Add to Program Python a Write,"X = [[1,2,3],  
    [4,5,6],  
    [7,8,9]]  
Y = [[10,11,12],  
    [13,14,15],  
    [16,17,18]]  
result = [[0,0,0],  
               [0,0,0],  
              [0,0,0]] 
for i in range(len(X)):  
   for j in range(len(X[0])):  
       result[i][j] = X[i][j] + Y[i][j]  
for r in result:  
   print(r)"
5644,Elements. the of Length the to According List a Sort to function Python a write,"def sortlistwithlen(list):
	list.sort(key=len)
	return list"
5645,Anagrams are Strings Two if Detect to function Python a write,"def check_if_anagram(s1,s2):
	if(sorted(s1)==sorted(s2)):
		  return True
	else:
		  return False"
5646,Function Library a Using Without String a of Length the print to Program Python Write,"string= ""United States of America""
count=0
for i in string:
      count=count+1
print(""Length of the string is:"")
print(count)"
5647,result the print and String a in Characters Lowercase of Number Count to Program Python a Write,"string=""SriNAtH""
count=0
for i in string:
      if(i.islower()):
            count=count+1
print(""The number of lowercase characters is:"")
print(count)"
5648,File Text a in Words of Number the Count to Program Python write,"fname = input(""Enter file name: "")
num_words = 0
with open(fname, 'r') as f:
    for line in f:
        words = line.split()
        num_words += len(words)
print(""Number of words:"")
print(num_words)"
5649,Dictionary a from Key Given the Remove to function Python a write,"def deletekey(dict,key)
	if key in dict: 
		del dict[key]
	return dict"
5650,list from item an remove to function python a Write,"def deleteelement(list, item):
	list.remove(item)
	return list"
5651,odd or even is divisors of count if check to function Python a write,"def NumOfDivisor(n): 
    if n < 1: 
        return
    root_n = n**0.5
    if root_n**2 == n: 
        print(""Odd"") 
    else: 
        print(""Even"")"
5652,integer as number concatenated return and concatenation string like integers two concatenate to function python a write,"def concat_two_numbers(num1, num2):
    combined_num = str(num1) + str(num2)
    return int(combined_num)"
5653,other each from different are numbers the all whether determines and numbers of sequence a takes that function Python a Write,"def test_distinct(data):
  if len(data) == len(set(data)):
    return True
  else:
    return False"
5654,number. positive given a of factorial a of end the at zeros of number the find to function Python a Write,"def factendzero(n):
  x = n // 5
  y = x 
  while x > 0:
    x /= 5
    y += int(x)
  return y"
5655,integer given a of value binary return to function Python a Write,"def int_to_bin(a):
  return bin(a)"
5656,integer given a of value octal return to function Python a Write,"def int_to_oct(a):
  return oct(a)"
5657,integer to input given typecast to program Python a Write,"num = int(input(""Input a value: ""))
print(num)"
5658,value a against variables multiple check/test to program Python a Write,"a = 10
b = 20
c = 30
if 10 in {a, b, c}:
  print(""True"")
else:
  print(""False"")"
5659,"number the print and number a input number, a initiate will that class Python a Write","class Number:
	def __init__(self, num):
		self.num = num
	def inputNum(self):
		self.num = int(input(""Enter an integer number: ""))
	def printNum(self):
		print(self.num)"
5660,person a of height and weight given for BMI the find to function Python a Write,"def bmi_calculator(height, weight):
	bmi = weight/(height**2)
	return bmi"
5661,list given a from number ODD maximum the find to function Python a Write,"def odd_max_checker(list1):
	maxnum = 0
	for num in list1:
	    if num%2 != 0:
	        if num > maxnum:
	            maxnum = num
	return maxnum"
5662,matrix array/ an of shape print to program Python a Write,"import numpy as np
A = np.array([[1,2,3],[2,3,5],[3,6,8],[323,623,823]])
print(""Shape of the matrix A: "", A.shape)"
5663,matrix array/ an of trace print to program Python a Write,"import numpy as np
A = np.array([[4,5,8], [5,5,5], [2,3,6]])
print(""Trace of the matrix A: "", np.trace(A))"
5664,separators thousands as commas with number print to function Python a Write,"def formattedNumber(n):
  return (""{:,}"".format(n))"
5665,string a in word each of letter first the capitalizes to function Python a Write,"def capitalize(text):
  return text.title()"
5666,list a from values falsy remove to function Python a Write,"def newlist(lst):
  return list(filter(None, lst))"
5667,integer given a of digits all of sum the find to to function Python a Write,"def sum_of_digits(num):
  if num == 0:
    return 0
  else:
    return num % 10 + sum_of_digits(int(num / 10))"
5668,elements matrix of root Square print to program Python a Write,"mat1 = np.array([[10,20,30],[40,50,60],[70,80,90]])
print(np.sqrt(mat1))"
5669,size equal of groups 10 to series numeric a bin  to program Python a Write,"import pandas as pd
import numpy as np
ser = pd.Series(np.random.random(20))
deciled = pd.qcut(ser, q=[0, .10, .20, .3, .4, .5, .6, .7, .8, .9, 1], 
        labels=['1st', '2nd', '3rd', '4th', '5th', '6th', '7th', '8th', '9th', '10th'])
print(deciled)"
5670,date non-missing previous of values with up show dates missing all so series time intermittent an fill to program Python a Write,"import pandas as pd
import numpy as np
ser = pd.Series([1,10,3, np.nan], index=pd.to_datetime(['2000-01-01', '2000-01-03', '2000-01-06', '2000-01-08']))
print(ser.resample('D').ffill())"
5671,variable categorical a of encodings one-hot create to program Python a Write,"import pandas as pd
import numpy as np
df = pd.DataFrame(np.arange(25).reshape(5,-1), columns=list('abcde'))
df_onehot = pd.concat([pd.get_dummies(df['a']), df[list('bcde')]], axis=1)
print(df_onehot)"
5672,series a from 3 of multiples are that numbers of positions the find to program Python a Write,"import pandas as pd
import numpy as np
ser = pd.Series(np.random.randint(1, 10, 7))
print(np.argwhere(ser.values % 3 == 0))"
5673,"number index even an at present are which characters those only display string, a Given that function Python a Write","def printEveIndexChar(str):
  for i in range(0, len(str)-1, 2):
    print(""index["",i,""]"", str[i] )"
5674,date given a of week of day the Find to program Python a Write,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
5675,included). (both 3200 and 2000 between 5 of multiple a not are but 7 by divisible are which numbers such all find will which program a Write,"l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))"
5676,type object the determine will that program a Write,"def typeIdentifier(object):
  return f'object type : {type(object)}'"
5677,case. upper in string the print to printString: input console from string a get to getString: methods: two least at has which class Python a Write,"class IOString(object):
    def __init__(self):
        self.s = """"
    def getString(self):
        self.s = input()
    def printString(self):
        print(self.s.upper())
strObj = IOString()
strObj.getString()
strObj.printString()"
5678,process python by usage memory the determine will that program a Write,"import os, psutil
print(psutil.Process(os.getpid()).memory_info().rss / 1024 ** 2)"
5679,number any by used bits the determine to function a Write,"def totalBits(n):
	return f'total number of bits used in {n} is : {len(bin(n)[2: ])}'"
5680,recursion. using base the of power the finds and power a and base a takes that function a Write,"def power(base,exp):
    if(exp==1):
        return(base)
    if(exp!=1):
        return(base*power(base,exp-1))
base=int(input(""Enter base: ""))
exp=int(input(""Enter exponential value: ""))
print(""Result:"",power(base,exp))"
5681,comprehension list using list a from list empty remove to function a Write,"def removeEmptyList(li):
  res = [ele for ele in li if ele != []] 
  return res"
5682,homogeneous is list a finds that function a Write,"def homoList(li):
  res = True
  for i in li: 
      if not isinstance(i, type(li[0])): 
          res = False 
          break
  return res"
5683,list. a from elements type date given a remove to function a Write,"def removeDataType(li,dType):
    res = []
    for i in li:
        if not isinstance(i, dType):
            res.append(i)
    return res"
5684,"list the in ""j"" first before element ""i"" of occurence the out find to function python a Write","def firstOccurence(arr, i,j):
  res = 0
  for k in arr:         
      if k == j: 
          break
      if k == i: 
          res += 1
  return res"
5685,dictionaries python two merge to program a Write,"x={'key1':'val1','key2':'val2'}
y={'key3':'val3','key4':'val4'}
z = {**x, **y} # z = x | y"
5686,pair given a in numbers two between divisors common find to program a Write,"def ngcd(x, y):
    i=1
    while(i<=x and i<=y):
        if(x%i==0 and y%i == 0):
            gcd=i
        i+=1
    return gcd
def num_comm_div(x, y):
  n = ngcd(x, y)
  result = 0
  z = int(n**0.5)
  i = 1
  while( i <= z ):
    if(n % i == 0):
      result += 2 
      if(i == n/i):
        result-=1
    i+=1
  return result"
5687,empty becomes list the until numbers of list a from number third every print and remove to function a Write,"def remove_nums(int_list):
  position = 3 - 1 
  idx = 0
  len_list = (len(int_list))
  while len_list>0:
    idx = (position+idx)%len_list
    print(int_list.pop(idx))
    len_list -= 1"
5688,modules Python installed locally of list a get to program a Write,"import pkg_resources
installed_packages = pkg_resources.working_set
installed_packages_list = sorted([""%s==%s"" % (i.key, i.version)
     for i in installed_packages])
for m in installed_packages_list:
    print(m)"
5689,operator '+' the using without integers positive two add to function a Write,"def add_without_plus_operator(a, b):
    while b != 0:
        data = a & b
        a = a ^ b
        b = data << 1
    return a"
5690,integers given two of multiplication in digits of number the compute to program a Write,"a,b = 312, 410
print(len(str(a*b)))"
5691,Pyramid Square of volume calculate to function a Write,"def volumeSquare(b, h): 
    return (0.33) * b * b * h"
5692,Pyramid Hexagonal of Volume calculate to function a Write,"def volumeHexagonal(a, b, h): 
    return a * b * h"
5693,member common one least at have they if True returns and lists two takes that function Python a Write,"def common_data(list1, list2):
result = False
for x in list1:
for y in list2:
if x == y:
result = True
return result
print(common_data([1,2,3,4,5], [5,6,7,8,9]))"
5694,lists two the between difference the get to program Python a Write,"list1 = [1, 2, 3, 4]
list2 = [1, 2]
print(list(set(list1) - set(list2)))"
5695,list. a in number largest second the find to program Python a Write,"def second_largest(numbers):
count = 0
n1 = n2 = float('-inf')
for x in numbers:
count += 1
if x > n2:
if x >= n1:
n1, n2 = x, n1
else:
n2 = x
return n2 if count >= 2 else None
print(second_largest([1, 2, -8, -2, 0]))"
5696,integer single a into integers multiple of list a convert to program Python a Write,"L = [11, 33, 50]
x = int("""".join(map(str, L)))
print(""Single Integer: "",x)"
5697,sentence given a in word each of occurrences the count to program Python a Write,"def find_longest_word(words_list):
word_len = []
for n in words_list:
word_len.append((len(n), n))
word_len.sort()
return word_len[-1][1]
print(find_longest_word([""PHP"", ""python"", ""zekelabs""]))"
5698,"x*x) (x, form the in n) and 1 (between number a contains that dictionary a print and generate to script Python a Write","n=int(input(""Input a number: ""))
d = dict()
for x in range(1,n+1):
d[x]=x*x
print(d)"
5699,keys. of dictionary nested a into list a convert to program Python a Write,"num_list = [1, 2, 3, 4]
new_dict = current = {}
for name in num_list:
current[name] = {}
current = current[name]
print(new_dict)"
5700,dictionaries. two in values key match to program Python a Write,"x = {'key1': 1, 'key2': 3, 'key3': 2}
y = {'key1': 1, 'key2': 2}
for (key, value) in set(x.items()) & set(y.items()):
print('%s: %s is present in both x and y' % (key, value))"
5701,tuple a is element an until list a in elements the count to program Python a Write,"num = [10,20,30,(10,20),40]
ctr = 0
for n in num:
if isinstance(n, tuple):
break
ctr += 1
print(ctr)"
5702,element. float its by tuple a sort to program Python a Write,"price = [('item1', '12.20'), ('item2', '15.10'), ('item3', '24.5')]
print( sorted(price, key=lambda x: float(x[1]), reverse=True))"
5703,set a in member(s) add to program Python a Write,"color_set = set()
color_set.add(""Red"")
color_set.update([""Blue"", ""Green""])
print(color_set)"
5704,numbers. of series a from numbers odd and even of number the count to program Python a Write,"numbers = (1, 2, 3, 4, 5, 6, 7, 8, 9) # Declaring the tuple
count_odd = 0
count_even = 0
for x in numbers:
if not x % 2:
count_even+=1
else:
count_odd+=1
print(""Number of even numbers :"",count_even)
print(""Number of odd numbers :"",count_odd)"
5705,50. to 0 between series Fibonacci the get to program Python a Write,"x,y=0,1
while y<50:
print(y)
x,y = y,x+y"
5706,list a in numbers the all sum to function Python a Write,"def sum(numbers):
total = 0
for x in numbers:
total += x
return total
print(sum((8, 2, 3, 0, 7)))"
5707,letters case lower and letters case upper of number the calculate and string a accepts that function Python a Write,"def string_test(s):
d={""UPPER_CASE"":0, ""LOWER_CASE"":0}
for c in s:
if c.isupper():
d[""UPPER_CASE""]+=1
elif c.islower():
d[""LOWER_CASE""]+=1
else:
pass
print (""Original String : "", s)
print (""No. of Upper case characters : "", d[""UPPER_CASE""])
print (""No. of Lower case Characters : "", d[""LOWER_CASE""])
string_test('The quick Brow Fox')"
5708,list given a from numbers even the print to program Python a Write,"def is_even_num(l):
enum = []
for n in l:
if n % 2 == 0:
enum.append(n)
return enum
print(is_even_num([1, 2, 3, 4, 5, 6, 7, 8, 9]))"
5709,"zero or negative , positive either number check to program Python a Write","num = int (input (""Enter Integer Number: ""))
if num == 0:
print (""Zero Entered"")
elif num > 0:
print (""Positive Number Entered"")
elif num < 0:
print (""Negative Number Entered"")"
5710,numbers 2 of Divisibility Check to program Python a Write,"nominator = int (input (""Enter Nominator: ""))
denominator = int (input (""Enter Denominator: ""))
if nominator % denominator == 0:
print(""{} is completely Divisible by {}"".format(nominator, denominator))
else:
print (""{} is not completely Divisible by {}"".format(nominator, denominator))"
5711,number a of sum digit to program python a Write,"Digits = input(""Enter a number: "")
sum = int(Digits[0])
number = Digits[0]
for i in Digits[1::]:
sum+= int(i)
number +="" + {}"".format(i)
print(""Sum of {} is {}"".format(number,sum))"
5712,binary to decimal convert to program python a Write,"Decimal = input(""Enter Number: "")
num = int(Decimal)
Binary =""""
while num>=1:
i = num%2
num = num//2
Binary +=str(i)
print (""Binary Equivalent of {} is {}"".format(Decimal,Binary[::-1]))"
5713,"Character Special and Alphabets, Numbers, Count to program python a Write","Text = input (""Enter Text: "")
letter, number, spaces , special = 0,0,0,0
for i in Text:
if i.isalpha():
letter+=1
elif i.isspace():
spaces +=1
elif i.isnumeric():
number +=1
else:
special+=1
print("" Alphabets = {} \n Numbers = {} \n Space = {} \n Special Chracter = {}"".format(letter,number,spaces,special))"
5714,except try using 5/0 compute to function python a Write,"try:
print(""Division = {}"".format(5/0))
except ZeroDivisionError:
print (""5 cannot be divided by O"")"
5715,(n>0). console by input n given a with 1/2+2/3+3/4+...+n/n+1 compute to program to program python a Write,"num = int (input (""Enter Number: ""))
sum = 0
for i in range(num+1):
sum += float(i/(i+1))
print (""Sum: {:.2f}"".format(sum))"
5716,"n. and 0 range given a between 7, by divisible are which numbers, the iterate can which generator a with function a define to program python a Write","def Generator(n):
for i in range(n+1):
if i%7 == 0:
yield i
n = int(input(""Enter Number: ""))
for i in Generator(n):
print(i,end = "" "")"
5717,map and lambda using strings uppercase to program python a Write,"people = [""Darcy"", ""Christina"", ""Diana""]
peeps = list(map(lambda name: name.upper(), people))
print(peeps)"
5718,"""a"" with starting not names filter to program python a Write","names = ['austin', 'penny', 'anthony', 'rihana', 'billy', 'angel']
a_names = list(filter(lambda name: name[0] == 'a', names))
print(a_names)"
5719,kwargs using program python a Write,"def fav_colors(**kwargs):
''' kwargs comes as a dictionary '''
print(kwargs)
for person, color in kwargs.items():
print(f""{person}'s favorite color is {color}"")
fav_colors(sriju=""red"", faizu=""yellow"", kabir=""black"")"
5720,printNationality. called method static a has which American named class a Define,"class American(object):
@staticmethod
def printNationality():
print (""America"")
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
5721,default. by 0 is area Shape's where shape the of area the print can which function area a have classes Both argument. as length a takes which function init an has class Square The Square. subclass its and Shape named class a Define,"class Shape(object):
def __init__(self):
pass
def area(self):
return 0
class Square(Shape):
def __init__(self, l):
Shape.__init__(self)
self.length = l
def area(self):
return self.length*self.length
aSquare= Square(3)
print (aSquare.area())"
5722,list. the in searched be to element of index the return should function The list. sorted a in item an searches which function search binary a for program python a Write,"import math
def bin_search(li, element):
bottom = 0
top = len(li)-1
index = -1
while top>=bottom and index==-1:
mid = int(math.floor((top+bottom)/2.0))
if li[mid]==element:
index = mid
elif li[mid]>element:
top = mid-1
else:
bottom = mid+1
return index
li=[2,5,7,9,11,17,222]
print bin_search(li,11)
print bin_search(li,12)"
5723,"[12,24,35,70,88,120,155]. in numbers 4th,6th 2nd, 0th, the removing after list the print to program python a Write","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print(li)"
5724,Sort Bubble of implementation for program python a Write,"def bubbleSort(arr):
n = len(arr)
for i in range(n-1):
for j in range(0, n-i-1):
if arr[j] > arr[j+1] :
arr[j], arr[j+1] = arr[j+1], arr[j]
arr = [64, 34, 25, 12, 22, 11, 90]
bubbleSort(arr)"
5725,it print and list a in items the shuffle to program python a write,"from random import shuffle
mylist = [1, 2, 3, 4, 5]
shuffle(mylist)
print(mylist)"
5726,rectangle a of area the prints that program python a write,"length = 10
width = 5
print(f'Area: {length * width}')"
5727,square a of area the prints that program python a write,"side = 5
print(f'Area: {side * side}')"
5728,values as english in numbers the and keys as 5 to 1 numbers with dictionary a create to program python a write,"number_dict = {
1: 'one',
2: 'two',
3: 'three',
4: 'four',
5: 'five'
}"
5729,sentence a in length specified a than less words keep to program python a write,"sentence = 'this is my sentence and i will write it my way'
maxlength = 3
result = [word for word in sentence.split(' ') if len(word) <= minlength]"
5730,it print and word the of length the with sentence a in word each replace to program python a write,"sentence = 'the quick brown fox jumps over the lazy dog'
words = sentence.split(' ')
lengths = [str(len(word)) for word in words]
print(' '.join(lengths))"
5731,list a to set a convert to program python a write,"myset = {1, 2, 4, 7}
mylist = list(myset)"
5732,list a in items 5 first the print to program python a write,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[:5])"
5733,variable a delete to program python a write,"i = 10
del i"
5734,numbers two swap to program python a write,"(x, y) = (1, 2)
print(f'Before swapping: x: {x}, y: {y}')
(y, x) = (x, y)
print(f'After swapping: x: {x}, y: {y}')"
5735,operation AND bitwise print to program python a write,"a = 60
b = 13
a_and_b = a&b
print(a_and_b)"
5736,operation XOR bitwise print to program python a write,"a = 60
b = 13
a_xor_b = a^b
print(a_xor_b)"
5737,variable a on shift left binary print to program python a write,"a = 60
binary_left_shift = a<<2
print(binary_left_shift)"
5738,variable a on shift right binary print to program python a write,"a = 60
binary_right_shift = a>>2
print(binary_right_shift)"
5739,string raw a create to program python a write,str1 = r'hello\n'
5740,numbers two between numbers prime print to function python a write,"def get_prime_numbers(range1, range2):
    for num in range(range1,range2):
        for i in range(2,num):
            if num%i == 0:
                j=num/i
                break
        else:
            print(num, 'is a prime number')"
5741,system the on allowed integer maximum of value the get to function python a write,"def get_max_integer():
    import sys
    return sys.maxsize"
5742,number a of exponential the return to function python a write,"def get_exponential_value(i):
    import math
    return(math.exp(i))"
5743,number a of logarithm natural the return to function python a write,"def get_natural_log_value(i):
    import math
    return(math.log(i))"
5744,number a of logarithm 10 base the return to function python a write,"def get_natural_log_value(i):
    import math
    return(math.log10(i))"
5745,number a of root square the return to function python a write,"def get_sqrt(i):
    import math
    return(math.sqrt(i))"
5746,integers of list a in integer maximum the print to program python a write,"lst = [23, 10, 55, 43]
lst.sort()
max = lst[-1]"
5747,integers of list a in integer minimum the print to program python a write,"lst = [23, 10, 55, 43]
lst.sort()
min = lst[0]"
5748,print and strings two concatenate to program python a write,"str1 = 'hello'
str2 = ' world!'
print(str1 + str2)"
5749,character a of value ascii the print to program python a write,"str1 = 'a'
print(ord(str1))"
5750,time and date current print to program python a write,"import datetime
print(datetime.datetime.now())"
5751,string a capitalize to program python a write,"str1 = 'hello'
print(str1.capitalize())"
5752,reverse in list a print to program python a write,"a = [1, 2, 3]
print(a[::-1])"
5753,"both not but set2, or set1 either in elements all of set a print to program python a write","set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.symmetric_difference(set2))"
5754,path by given directory the in entries the of names print to program python a write,"path = '/home'
import os
print(os.listdir(path))"
5755,path named directory a create to program python a write,"path = 'test'
import os
os.mkdir(path)"
5756,list a in elements of sum print to program python a write,"lst = range(5)
print(sum(lst))"
5757,dictionaries two merge to code python write,"def merge_dict(dict1, dict2):
    return(dict2.update(dict1))
dict1 = {'a': 10, 'b': 8}
dict2 = {'d': 6, 'c': 4}
merge_dict(dict1, dict2)
print(dict2)"
5758,number even is number a if detect to function python write,"def is_even(num):
    return((num % 2) == 0)"
5759,number odd is number a if detect to function python write,"def is_odd(num):
    return((num % 2) != 0)"
5760,year leap is year an if detect to function python write,"def is_leap_year(year):
    if (year % 4) == 0:
        if (year % 100) == 0:
            if (year % 400) == 0:
                return True 
            else:
                return False
        else:
            return True 
    else:
        return False"
5761,user. the by provided number a of factorial the find to program python a write,"num = int(input(""Enter a number: ""))
factorial = 1
if num < 0:
   print(""Sorry, factorial does not exist for negative numbers"")
elif num == 0:
   print(""The factorial of 0 is 1"")
else:
   for i in range(1,num + 1):
       factorial = factorial*i
   print(""The factorial of"",num,""is"",factorial)"
5762,term n-th to up sequence Fibonacci the display to program python a write,"nterms = int(input(""How many terms? ""))
n1, n2 = 0, 1
count = 0
if nterms <= 0:
   print(""Please enter a positive integer"")
elif nterms == 1:
   print(""Fibonacci sequence upto"",nterms,"":"")
   print(n1)
else:
   print(""Fibonacci sequence:"")
   while count < nterms:
       print(n1)
       nth = n1 + n2
       n1 = n2
       n2 = nth
       count += 1"
5763,print and matrix a transpose print to program python a write,"X = [[12,7],
    [4 ,5],
    [3 ,8]]
result = [[0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[j][i] = X[i][j]
for r in result:
   print(r)"
5764,Miles to Kilometers convert to program python a write,"kilometers = float(input(""Enter value in kilometers: ""))
conv_fac = 0.621371
miles = kilometers * conv_fac
print('%0.2f kilometers is equal to %0.2f miles' %(kilometers,miles))"
5765,number prime a is number a if check to program python a write,"num = int(input(""Enter a number: ""))
if num > 1:
   for i in range(2,num):
       if (num % i) == 0:
           print(num,""is not a prime number"")
           print(i,""times"",num//i,""is"",num)
           break
   else:
       print(num,""is a prime number"")
else:
   print(num,""is not a prime number"")"
5766,it print and string a from punctuations remove to program python a write,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = input(""Enter a string: "")
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char
print(no_punct)"
5767,datetime. to string a convert to program Python a Write,"from datetime import datetime
date_object = datetime.strptime('Jul 1 2014 2:43PM', '%b %d %Y %I:%M%p')
print(date_object)"
5768,date current from days five subtract to program Python a Write,"from datetime import date, timedelta
dt = date.today() - timedelta(5)
print('Current Date :',date.today())
print('5 days before Current Date :',dt)"
5769,function. split using strings split to program  a Write,"string = ""India is my country.""
string_list = string.split(' ')
print(string_list)"
5770,"user. the to message appropriate an out print odd, or even is number the whether on Depending and number a enter to user the asks that program Python a Write","number = int(input(""Number: ""))
if number%2 == 0 and number%4 != 0:
print(""Your number is even..."")
elif number%4 == 0:
print(""Your number is a multiple of 4"")
else:
print(""Your number is odd..."")"
5771,result the print and numbers of series a from numbers odd and even of number the count to program Python a write,"x = (1, 2, 3, 4, 5, 6, 7, 8, 9)
odd = even = 0
for i in x:
    if i % 2 == 0:
        even = even + 1
    else:
        odd = odd + 1
print(""Even Numbers are: "", even)
print(""Odd Numbers are: "", odd)"
5772,"result. the print and 2700 and 1500 between 5, of multiple and 7 by divisible are which numbers those find to program Python a Write","nl = []
for x in range(1500, 2700):
    if (x%7==0) and (x%5==0):
        nl.append(str(x))
print(""\n"".join(nl))"
5773,consonant or vowel a is alphabet an whether check to program Python a Write,"l = input(""Input a letter of the alphabet: "")
if l in ('a', 'e', 'i', 'o', 'u'):
    print(""%s is a vowel."" % l)
elif l == 'y':
    print(""Sometimes letter y stand for vowel, sometimes stand for consonant."")
else:
    print(""%s is a consonant."" % l)"
5774,"abcd Output 'd'] 'c', 'b', ['a', Input  : Example : it print and string a into characters of list a Convert to program python a Write","s = ['a','b','c','d']
x = """".join(s)
print(x)"
5775,integers those print and string a from integers select to program Python a Write,"s = input()
l = len(s)
i = 0
while i < l:
    num = ''
    symbol = s[i]
    while symbol.isdigit():
        num += symbol
        i += 1
        if i < l:
            symbol = s[i]
        else:
            break
    if num != '':
        print(num)
    i += 1"
5776,"1} 30: 2, 50: 2, 40: 4, 20: 4, {10: output [10,10,10,10,20,20,20,20,40,40,50,50,30] = my_list input list.Example: a in elements the of frequency the print to program Python a Write","import collections
my_list = [10,10,10,10,20,20,20,20,40,40,50,50,30]
print(""Original List : "",my_list)
ctr = collections.Counter(my_list)
print(""Frequency of the elements in the List : "",ctr)"
5777,"iNdIaAA Output: Example:input:InDiAaa result the print and versa vice and letters uppercase to letters lowercase all convert words, other In print. and string a in cases swap to program python a Write","s = input()
print(s.swapcase())"
5778,False) or format(True boolean in result the print and not or perfect is number given a whether find to program python a Write,"x = int(input(""Enter any no. "")) 
def perfect_number(n): 
    sum = 0 
    for x in range(1, n): 
        if n % x == 0: 
            sum += x 
    return sum == n
print(perfect_number(x))"
5779,sentence a in word longest the print and find to program python a Write,"string = ""python java c c++ javascript pascal php""
print(string)
words = string.split()
id_longest = 0
for i in range(1, len(words)):
    if len(words[id_longest]) < len(words[i]):
        id_longest = i
print(words[id_longest])"
5780,string. given a of length the print to program python a Write,"sample_str = ""Python is good for datascience""
print(len(sample_str))"
5781,duplicates removing by sets both from items all with set new a print to program python a Write,"set1 = {10, 20, 30, 40, 50}
set2 = {30, 40, 50, 60, 70}
print(set1.union(set2))"
5782,given is range a when numbers even of list a get to python in comprehension list a write,"N = 20
number_list = [ x for x in range(N) if x % 2 == 0]
print(f'List of Even Numbers:', number_list)"
5783,not or year leap a is year given the whether print to function python a write,"def leapYear(year):
    if (year % 4) == 0:
       if (year % 100) == 0:
           if (year % 400) == 0:
               print(""{0} is a leap year"".format(year))
           else:
               print(""{0} is not a leap year"".format(year))
       else:
           print(""{0} is a leap year"".format(year))
    else:
       print(""{0} is not a leap year"".format(year))"
5784,number given a of factorial the get to function python a write,"def factorial(n):
    if n == 1:
        return n
    else:
        return n*factorial(n-1)"
5785,numbers two of HCF the compute to function python a write,"def hcf(x, y):
    if x > y:
        smaller = y
    else:
        smaller = x
    for i in range(1, smaller+1):
        if((x % i == 0) and (y % i == 0)):
            hcf = i 
    return hcf"
5786,numbers three add to function lambda python a write,"x = lambda a, b, c : a + b + c
 print(x(5, 6, 2))"
5787,lists of list a flatten to comprehension list python a write,"list_of_list = [[1,2,3],[4,5,6],[7,8]]`
 flatten = [y for x in list_of_list for y in x]"
5788,string given a in numbers print to comprehension list python a write,"string = ""Hello 12345 World""
 numbers = [x for x in string if x.isdigit()]
 print (numbers)"
5789,sort selection do to program python a write,"A = [64, 25, 12, 22, 11] 
for i in range(len(A)): 
    min_idx = i 
    for j in range(i+1, len(A)): 
        if A[min_idx] > A[j]: 
            min_idx = j 
    A[i], A[min_idx] = A[min_idx], A[i] 
print (""Sorted array"") 
for i in range(len(A)): 
    print(""%d"" %A[i])"
5790,-1 return else index its return and number given a for array an search linearly to function python a write,"def search(arr, n, x): 
    for i in range(0, n): 
        if (arr[i] == x): 
            return i 
    return -1"
5791,number lucky a is number the whether check to function python a write,"def isLucky(n):
    isLucky.counter = 2
    next_position = n 
    if isLucky.counter > n:
        return 1
    if n % isLucky.counter == 0:
        return 0
    next_position = next_position - next_position /isLucky.counter
    isLucky.counter = isLucky.counter + 1
    return isLucky(next_position)"
5792,binary to decimal from number a convert to function python a write,"def decToBinary(n): 
    binaryNum = [0] * n;  
    i = 0; 
    while (n > 0):   
        binaryNum[i] = n % 2; 
        n = int(n / 2); 
        i += 1; 
    for j in range(i - 1, -1, -1): 
        print(binaryNum[j], end = """");"
5793,number key the of square are values the that so python in comprehension dictionary a write,"square_dict = {num: num*num for num in range(1, 11)}
  print(square_dict)"
5794,enumerate using list a in element each for number specified a at starting indexes get to program python a write,"l1 = [""eat"",""sleep"",""repeat""] 
  for count,ele in enumerate(l1,100): 
      print (count,ele )"
5795,"interest compound calculate to function python a write  interest
 simple calculate to function python a write","def simple_interest(p,t,r):  
    si = (p * t * r)/100    
    return si 
 def compound_interest(principle, rate, time): 
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    print(""Compound interest is"", CI)"
5796,perfect is number a whether check to function python a write,"def isPerfect( n ): 
     sum = 1
     i = 2
     while i * i <= n: 
         if n % i == 0: 
             sum = sum + i + n/i 
         i += 1
     return (True if sum == n and n!=1 else False)"
5797,decimal to hexadecimal convert to program python a write,"def hexadecimalToDecimal(hexval): 
    length = len(hexval) 
    base = 1
    dec_val = 0
    for i in range(length - 1, -1, -1):  
        if hexval[i] >= '0' and hexval[i] <= '9': 
            dec_val += (ord(hexval[i]) - 48) * base 
            base = base * 16
        elif hexval[i] >= 'A' and hexval[i] <= 'F': 
            dec_val += (ord(hexval[i]) - 55) * base 
            base = base * 16
    return dec_val"
5798,numbers hexadecimal two add to program python a write,"a = ""B""
 b = ""C""
 sum = hex(int(a, 16) + int(b, 16)) 
 print(sum[2:])"
5799,numbers binary two add to program python a write,"a = ""1101""
 b = ""100""
 sum = bin(int(a, 2) + int(b, 2))  
 print(sum[2:])"
5800,sets two of union the print to program python s write,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A | B)"
5801,sets two of difference the print to program python s write,"A = {1, 2, 3, 4, 5}
 B = {4, 5, 6, 7, 8}
 print(A - B)"
5802,tetraheadron of area the calculate to function python a write,"def area_of_tetrahedron(side): 
    return (1.73205 * 
           (side * side));"
5803,tetraheadron of volume the find to function python a write,"def vol_tetra(side): 
    volume = (side ** 3 / (6 * 1.414)) 
    return round(volume, 2)"
5804,given is measure diagonal space whose cube a of volume the determing to function python a write,"def CubeVolume(d): 
    Volume = (1.73205 * pow(d, 3)) / 9
    return Volume"
5805,sentence a in vowels of number of count return to function python a write,"def count_vowels(sentence):
   count = 0
   for letter in sentence:
      if letter in ""aeiouAEIOU"":
         count += 1
   return count"
5806,palindrome a is string given a if check to function python a write,"def is_palindrome(string):
   return string == string[::-1]"
5807,string a in occurs letter each times many how count to program python a write,"string = 'The quick brown fox jumps over the lazy dog'
countmap = {}
for letter in string:
   if letter in countmap:
      countmap[letter] += 1
   else:
      countmap[letter] = 1
print(f'Count of letters: {countmap}')"
5808,dictionaries two merges that function a write,"def merge_dictionaries(dict1, dict2):
   return {**dict1, **dict2}"
5809,dictionary a into lists two merge to program a write,"keys = [1, 2, 3]
values = ['aye', 'bee', 'sea']
dictionary = dict(zip(keys, values))"
5810,dates two between days in difference the print to program python a write,"from datetime import date
date1 = date(2020, 10, 25)
date2 = date(2020, 12, 25)
print(f'Difference between dates: {(date2 - date1).days}')"
5811,numbers of average weighted the returns that function python a write,"def get_weighted_average(numbers, weightage):
   return sum(x * y for x, y in zip(numbers, weightage)) / sum(weightage)"
5812,interval given a in numbers prime all print to program python a write,"lower = 900
upper = 1000
for num in range(lower, upper + 1):
   if num > 1:
      for i in range(2, num):
         if (num % i) == 0:
               break
      else:
         print(num)"
5813,order sorted in sentence a in words return to function python a write,"def get_sorted_words(sentence):
   words = [word for word in sentence.split()]
   words.sort()
   return words"
5814,number a of factorial the return to function python a write,"def fact(n):
   if n == 1:
      return n
   else:
      return n * fact(n-1)"
5815,numbers two of lcm the returns that function python a write,"def lcm(x, y):
   if x > y:
      greater = x
   else:
      greater = y
   while(True):
      if((greater % x == 0) and (greater % y == 0)):
         lcm = greater
         break
      greater += 1
   return lcm"
5816,numbers two of gcd the returns that function python a write,"def gcd(x, y):
   if x > y:
      smaller = y
   else:
      smaller = x
   for i in range(1, smaller + 1):
      if((x % i == 0) and (y % i == 0)):
         gcd = i
   return gcd"
5817,character a of value ASCII the print to program python a write,"character = 'x'
print(f'The ASCII value of {character} is {ord(character)}')"
5818,number decimal a of value binary the print to function python a write,"def print_binary(dec):
   print(bin(dec))"
5819,number given a to up numbers natural of sum the prints that program python a write,"num = 16
sum = 0
while (num > 0):
   sum += num
   num -= 1
print(f'The sum is {sum}')"
5820,time and date current the print to program a write,"from datetime import datetime
now = datetime.now()
print(now)"
5821,file a of extension and name file the extract to program python a write,"import os
filename, extension = os.path.splitext('/path/to/some/file.ext')"
5822,tails and heads of number print and times 100 coin a flip to program python a write,"import random
heads = 0
tails = 0
for i in range(100):
   if(random.choice([True, False])):
      heads += 1
   else:
      tails += 1
print(f'{heads} heads, {tails} tails')"
5823,result the returns and comprehension list a using list a in number every squares that function python a write,"def square_numbers(nums):
   return [i*i for i in nums]"
5824,it prints and hexadecimal to number hexadecimal a converts that program python a write,"hexadecimal_num = 'FF'
decimal_num = int(hexadecimal_num, 16)
print(decimal_num)"
5825,it prints and sentence a in words the sorts alphabetically that program python a write,"sentence = 'the quick brown fox jumps'
sorted_words = sentence.split(' ')
sorted_words.sort()
print(' '.join(sorted_words))"
5826,sentence a in character third every prints that program python a write,"sentence = 'the quick brown fox'
print(sentence[::3])"
5827,comprehensions list using list a from numbers odd remove to program a write,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_odd_nums = [i for i in nums if i % 2 == 0]"
5828,comprehensions list using list a from numbers even remove to program a write,"nums = [1, 2, 3, 4, 5, 6, 7, 8]
no_even_nums = [i for i in nums if i % 2 == 1]"
5829,200 and 100 between numbers random 5 print to program a write,"import random
print(random.sample(range(100, 200), 5))"
5830,100 and 10 between numbers random even 5 print to program a write,"import random
print(random.sample([i for i in range(10, 100) if i%2 == 0], 5))"
5831,list new a prints and lists two in elements corresponding multiplies that program a write,"list1 = [1, 2, 3, 4, 5]
list2 = [5, 4, 3, 2, 1]
prod_list = [a*b for (a,b) in zip(list1, list2)]
print(prod_list)"
5832,key the of cubes are values and 10 to 1 from numbers are keys whose dictionary a creates that program python a write,"cube_dict = {}
for i in range(1, 11):
   cube_dict[i] = i ** 3"
5833,number a of factors the return to function python a write,"def get_factors(num):
   factors = []
   for i in range(1, num + 1):
      if num % i == 0:
         factors.append(i)
   return factors"
5834,even is numbers provided two of product the if True returns that function python a write,"def is_prod_even(num1, num2):
   prod = num1 * num2
   return not prod % 2"
5835,even is numbers provided two of sum the if True returns that function python a write,"def is_prod_even(num1, num2):
   sum = num1 + num2
   return not sum % 2"
5836,list a in items 5 first the print to program python a write,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[:5])"
5837,list a in items 3 last the print to program python a write,"my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
print(my_list[-3:])"
5838,set the prints and set a to list a of elements the adds that program python a write,"my_set = {1, 2, 3}
my_list = [4, 5, 6]
my_set.update(my_list)
print(my_set)"
5839,circle a of circumference the prints that program python a write,"import math
radius = 10
print(f'Area: {2 * math.pi * radius}')"
5840,square a of area the prints that program python a write,"side = 5
print(f'Area: {side * side}')"
5841,sentence a in length specified a than less words keep to program python a write,"sentence = 'this is my sentence and i will write it my way'
maxlength = 3
result = [word for word in sentence.split(' ') if len(word) <= minlength]"
5842,"list new the returns and numbers positive to numbers all converts and input an as list a takes that function python a write 93
","def make_all_positive(nums):
   return [num if num > 0 else -num for num in nums]"
5843,list the in item the is value the and index the is key the where dictionary a to list a convert to program python a write,"my_list = [1, 8, 1, 2, 2, 9]
my_dict = {key: value for key, value in enumerate(my_list)}"
5844,"1,3,11,42,12,4001 = numbers get to program a write 2","highestnumber = -999
for i in numbers:
  if i > highestnumber:
    highestnumber = i
print(numbers.index(highestnumber))"
5845,python list a of element each to string a add 4,"my_list = ['foo', 'fob', 'faz', 'funk']
string = 'bar'
list2 = list(map(lambda orig_string: orig_string + string, my_list))"
5846,list another of values all add python 6,"a = [1, 2, 3]
b = [4, 5, 6]
a += b"
5847,python in decimals two only to decimals limit 10,"answer = str(round(answer, 2))"
5848,python string a in character a of index access 11,"foo = 'Hello'
foo.find('lo')"
5849,python in line blank a add to how 13,"print("""")"
5850,list in python in letter first capitalize 19,"my_list = ['apple pie', 'orange jam']
my_list[0].capitalize()"
5851,Donate 2020 09 Aug on Buffalo Breakable by pythonpython camelcase is string if check to function a write 21,"def is_camel_case(s):
    return s != s.lower() and s != s.upper() and ""_"" not in s"
5852,number decimal a of binary print 25,"a=6
print(bin(a))"
5853,commands bash execute to funtion python a write 27,"import subprocess
subprocess.call([""sudo"", ""apt"", ""update""])"
5854,python in array an from element random a get to 28,"import random
list_ = [1,2,3,4]
random.choice(list_)"
5855,available cores cpu of number count to program 30,"import os
os.cpu_count()"
5856,python in number common most the get 31,"from statistics import mode
mode((1, 2, 4, 4, 5, 4, 4, 2, 3, 8, 4, 4, 4))"
5857,tree element file xml open to how 35,"import xml.etree.ElementTree as ET
tree = ET.parse('filename.xml') 
tree_root = tree.getroot()"
5858,string from datetime parse python 36,"from datetime import datetime
datetime_object = datetime.strptime('Jun 1 2005  1:33PM', '%b %d %Y %I:%M%p')"
5859,Donate 2020 14 Jun on Butterfly Bright by bracketspython without python in matrix as list print 37,"data = [7, 7, 7, 7]
print(*data, sep='')"
5860,result the print and matrices two multiply to Program python a write 48,"X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1,2],
    [6,7,3,0],
    [4,5,9,1]]
result = [[0,0,0,0],
         [0,0,0,0],
         [0,0,0,0]]
for i in range(len(X)):
   for j in range(len(Y[0])):
       for k in range(len(Y)):
           result[i][j] += X[i][k] * Y[k][j]
for r in result:
   print(r)"
5861,result the print and python in string given a of permutations to program python a write  53,"from itertools import permutations 
import string 
s = ""GEEK""
a = string.ascii_letters 
p = permutations(s) 
d = [] 
for i in list(p): 
    if (i not in d): 
        d.append(i) 
        print(''.join(i))"
5862,square perfect a is number a if check to function Python a Write 54,"def is_perfect_square(n):
    x = n // 2
    y = set([x])
    while x * x != n:
        x = (x + (n // x)) // 2
        if x in y: return False
        y.add(x)
    return True"
5863,one. for except times three appears element every where list a in element single the find to function Python a Write 58,"def single_number(arr):
    ones, twos = 0, 0
    for x in arr:
        ones, twos = (ones ^ x) & ~twos, (ones & x) | (twos & ~x)
    assert twos == 0
    return ones"
5864,not. or progression arithmetic an is numbers of sequence a check to function Python a Write 62,"def is_arithmetic(l):
    delta = l[1] - l[0]
    for index in range(len(l) - 1):
        if not (l[index + 1] - l[index] == delta):
             return False
    return True"
5865,form. reversed in sum the display and numbers reversed two the of sum the compute to function Python a Write 64,"def reverse_sum(n1, n2):
    return int(str(int(str(n1)[::-1]) + int(str(n2)[::-1]))[::-1])"
5866,"1. reach you until process the Repeat 1. + 3n obtain to 1 add and 3 by it multiply odd, is n If 2. / n get to 2 by it divide even, is n if n, integer positive any take you where function Python a Write 65","def collatz_sequence(x):
    num_seq = [x]
    if x < 1:
       return []
    while x > 1:
       if x % 2 == 0:
         x = x / 2
       else:
         x = 3 * x + 1
       num_seq.append(x)    
    return num_seq"
5867,string. given another of anagram an is string given a if check to function Python a Write 65,"def is_anagram(str1, str2):
    list_str1 = list(str1)
    list_str1.sort()
    list_str2 = list(str2)
    list_str2.sort()
    return (list_str1 == list_str2)"
5868,list. a of end the to zeros all push to function Python a Write 66,"def move_zero(num_list):
    a = [0 for i in range(num_list.count(0))]
    x = [ i for i in num_list if i != 0]
    x.extend(a)
    return(x)"
5869,symbol. the and integer by represented be would symbols of amount the that it encode and string a takes that function Python a Write 71,"For example, the string ""AAAABBBCCDAAA"" would be encoded as ""4A3B2C1D3A""
def encode_string(str1):
    encoded = """"
    ctr = 1
    last_char = str1[0]
    for i in range(1, len(str1)):
        if last_char == str1[i]:
            ctr += 1
        else:
            encoded += str(ctr) + last_char
            ctr = 0
            last_char = str1[i]
            ctr += 1
    encoded += str(ctr) + last_char
    return encoded"
5870,i. at one the except integers of array given a of numbers the all of product the is array new the of i index at element each that such array new a create to function Python a Write 72,"def product(nums):
    new_nums = []
    for i in nums:
        nums_product = 1
        for j in nums:     
            if j != i:
                nums_product = nums_product * j
        new_nums.append(nums_product)
    return new_nums"
5871,sum. the of square the and numbers natural hundred two first the of squares the of sum the between difference the find to function python a Write 73,"r = range(1, 201)
a = sum(r)
print (a * a - sum(i*i for i in r))"
5872,n-1. of sum geometric the calculate to function Python a Write 77,"def geometric_sum(n):
  if n < 0:
    return 0
  else:
    return 1 / (pow(2, n)) + geometric_sum(n - 1)"
5873,string. Hexadecimal to Bytearray given a convert to program Python a Write 81,"def bytearray_to_hexadecimal(list_val):
     result = ''.join('{:02x}'.format(x) for x in list_val)  
     return(result)"
5874,string. given a of characters last and first same with substrings of number count to program Python a Write 82,"def no_of_substring_with_equalEnds(str1): 
	result = 0; 
	n = len(str1); 
	for i in range(n): 
		for j in range(i, n): 
			if (str1[i] == str1[j]): 
				result = result + 1
	return result"
5875,string. binary given a in 0’s consecutive of length maximum find to program Python a Write 84,"def max_consecutive_0(input_str): 
     return  max(map(len,input_str.split('1')))
str1 = '111000010000110'
print(""Original string:"" + str1)
print(""Maximum length of consecutive 0’s:"")"
5876,count. its as times many as each repeating elements over iterate that program Python a Write 85,"from collections import Counter
c = Counter(p=4, q=2, r=0, s=-2)
print(list(c.elements()))"
5877,dictionary. a of depth the print to fuction Python a Write 88,"def dict_depth(d):
    if isinstance(d, dict):
        return 1 + (max(map(dict_depth, d.values())) if d else 0)
    return 0
dic = {'a':1, 'b': {'c': {'d': {}}}}
print(dict_depth(dic))"
5878,output. the print and list nested another of subset a is list nested a if check to function Python a Write 93,"def checkSubset(input_list1, input_list2): 
    return all(map(input_list1.__contains__, input_list2)) 
list1 = [[1, 3], [5, 7], [9, 11], [13, 15, 17]] 
list2 = [[1, 3],[13,15,17]]   
print(""Original list:"")
print(list1)
print(list2)
print(""\nIf the one of the said list is a subset of another.:"")
print(checkSubset(list1, list2))"
5879,output. the print and string given a of characters of number repetition given with permutations all print to function Python a Write 94,"from itertools import product
def all_repeat(str1, rno):
  chars = list(str1)
  results = []
  for c in product(chars, repeat = rno):
    results.append(c)
  return results
print(all_repeat('xyz', 3))"
5880,duplicates). (including string given a of permutations all print to program Python a Write 97,"def permute_string(str):
    if len(str) == 0:
        return ['']
    prev_list = permute_string(str[1:len(str)])
    next_list = []
    for i in range(0,len(prev_list)):
        for j in range(0,len(str)):
            new_str = prev_list[i][0:j]+str[0]+prev_list[i][j:len(str)-1]
            if new_str not in next_list:
                next_list.append(new_str)
    return next_lis"
5881,"line. one in values half last the and line one in values half first the print to program a write (1,2,3,4,5,6,7,8,9,10), tuple given a With","tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print(tp1)
print(tp2)"
5882,"""No"". print otherwise ""Yes"", or ""YES"" or ""yes"" is string the if ""Yes"" print to input as string a accepts which program a Write","s= input()
if s==""yes"" or s==""YES"" or s==""Yes"":
    print(""Yes"")
else:
    print(""No"")"
5883,"it print and [1,2,3,4,5,6,7,8,9,10] in number even of square are elements whose list a make to filter() and map() can which program a Write","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = map(lambda x: x**2, filter(lambda x: x%2==0, li))
print(evenNumbers)"
5884,printNationality. called method static a has which American named class a Define,"class American(object):
    @staticmethod
    def printNationality():
        print(""America"")
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
5885,area. the compute can which method a has class Circle The radius. a by constructed be can which Circle named class a Define,"class Circle(object):
    def __init__(self, r):
        self.radius = r
    def area(self):
        return self.radius**2*3.14"
5886,exceptions. the catch to try/except use and 5/0 compute to function a Write,"def throws():
    return 5/0
try:
    throws()
except ZeroDivisionError:
    print(""division by zero!"")
except Exception:
    print('Caught an exception')
finally:
    print('In finally block for cleanup')"
5887,"only. letters of composed are names company and names user Both address. email given a of name company the print to program write please format, ""username@companyname.com"" the in addresses email some have we that Assuming","import re
emailAddress = 'bing@google.com'
pat2 = ""(\w+)@(\w+)\.(com)""
r2 = re.match(pat2,emailAddress)
print(r2.group(2))"
5888,only. digits of composed words the print to input as whitespace by separated words of sequence a accepts which program a Write,"import re
s = input()
print(re.findall(""\d+"",s))"
5889,"world"". ""hello string unicode a Print","unicodeString = u""hello world!""
print(unicodeString)"
5890,utf-8. by encoded string unicode a to it convert to and string ASCII an read to program a Write,"s = input()
u = unicode( s ,""utf-8"")
print(u)"
5891,parameters. input by input n given a with f(0)=1 and n>0 when f(n)=f(n-1)+100 compute: to function a Write,"def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100"
5892,console. by input is n while form separated comma in n and 0 between numbers even the print to generator using function a write Please,"def EvenGenerator(n):
    i=0
    while i<=n:
        if i%2==0:
            yield i
        i+=1"
5893,result. evaluation the print and console from expression mathematic basic accepts which program a write Please,"expression = input()
print(eval(expression))"
5894,module. math Python using 100 and 10 between is value the where float random a generate Please,"import random
print(random.random()*100)"
5895,inclusive. 200 and 100 between numbers random 5 with list a generate to program a write Please,"import random
print(random.sample(range(100), 5))"
5896,inclusive. 200 and 100 between numbers even 5 with list a generate randomly to program a write Please,"import random
print(random.sample([i for i in range(100,201) if i%2==0], 5))"
5897,"inclusive. 1000 and 1 between , 7 and 5 by divisible are which numbers, 5 with list a generate randomly to program a write Please","import random
print(random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5))"
5898,"[5,6,77,45,22,12,24]. in numbers even delete removing after list the print to program a write Please","li = [5,6,77,45,22,12,24]
li = [x for x in li if x%2!=0]
print(li)"
5899,"[12,24,35,70,88,120,155]. in numbers 0th,4th,5th the removing after list the print to program a write please comprehension, list using By","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i not in (0,4,5)]
print(li)"
5900,"[12,24,35,24,88,120,155]. in 24 value the removing after list the print to program a write please comprehension, list using By","li = [12,24,35,24,88,120,155]
li = [x for x in li if x!=24]
print(li)"
5901,order. reverse in it print and console from string a accepts which program a write Please,"s=input()
s = s[::-1]
print(s)"
5902,indexes. even have that characters the print and console from string a accepts which program a write Please,"s=input()
s = s[::2]
print(s)"
5903,have? we do chickens many how and rabbits many How farm. a in rabbits and chickens the among legs 94 and heads 35 count We  puzzle: Chinese ancient classic a solve to program a Write,"def solve(numheads,numlegs):
    ns='No solutions!'
    for i in range(numheads+1):
        j=numheads-i
        if 2*i+4*j==numlegs:
            return i,j
    return ns,ns"
5904,"line. single a on sequence comma-separated a in printed be should results The numbers.
 given a of factorial the compute can which function a Write","def fact(x):
    if x == 0:
        return 1
    return x * fact(x - 1)
x=int(input())
print(fact(x))"
5905,number. every contains which tuple a and list a generate and console from numbers comma-separated of sequence a accepts which program a Write,"values=input()
l=values.split("","")
t=tuple(l)
print(l)
print(t)"
5906,capitalized. sentence the in characters all making after lines the prints and input as lines of sequence accepts that program a Write,"lines = []
while True:
    s = input()
    if s:
        lines.append(s.upper())
    else:
        break;
for sentence in lines:
    print(sentence)"
5907,alphanumerically. them sorting and words duplicate all removing after words the prints and input as words separated whitespace of sequence a accepts that program a Write,"s = input()
words = [word for word in s.split("" "")]
print("" "".join(sorted(list(set(words)))))"
5908,digits. and letters of number the calculate and sentence a accepts that program a Write,"s = input()
d={""DIGITS"":0, ""LETTERS"":0}
for c in s:
    if c.isdigit():
        d[""DIGITS""]+=1
    elif c.isalpha():
        d[""LETTERS""]+=1
    else:
        pass
print(""LETTERS"", d[""LETTERS""])
print(""DIGITS"", d[""DIGITS""])"
5909,letters. case lower and letters case upper of number the calculate and sentence a accepts that program a Write,"s = input()
d={""UPPER CASE"":0, ""LOWER CASE"":0}
for c in s:
    if c.isupper():
        d[""UPPER CASE""]+=1
    elif c.islower():
        d[""LOWER CASE""]+=1
    else:
        pass
print(""UPPER CASE"", d[""UPPER CASE""])
print(""LOWER CASE"", d[""LOWER CASE""])"
5910,numbers. comma-separated of sequence a by input is list The list. a in number odd each square to comprehension list a Use,"values = input()
numbers = [x for x in values.split("","") if int(x)%2!=0]
print("","".join(numbers))"
5911,alphanumerically. key the sorting after output should output The input. the from words the of frequency the compute to program a Write,"freq = {}   # frequency of words in text
line = input()
for word in line.split():
    freq[word] = freq.get(word,0)+1
words = freq.keys()
words.sort()
for w in words:
    print(""%s:%d"" % (w,freq[w]))"
5912,abs() of document functions built-in Python print to program a write Please,print(abs.__doc__)
5913,int() of document functions built-in Python print to program a write Please,print(int.__doc__)
5914,input() of document functions built-in Python print to program a write Please,print(input.__doc__)
5915,console. in it print and string a into integer a convert can that function a Define,"def convert_to_str(n):
    print(str(n))"
5916,console. in it print then and sum their compute and form string in numbers integral two receive can that function a Define,"def sum_of_ints(s1,s2):
    print(int(s1)+int(s2))"
5917,keys. of square are values the and included) (both 20 and 1 between numbers are keys the where dictionary a print can which function a Define,"def print_dict_keys_val_2():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print(d)"
5918,only. values the print just should function The keys. of square are values the and included) (both 20 and 1 between numbers are keys the where dictionary a generate can which function a Define,"def print_dict_keys_val_3():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():	
		print(v)"
5919,list. the in elements 5 first the except values all print to needs function the Then included). (both 20 and 1 between numbers of square are values the where list a generate can which function a Define,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print(li[5:])"
5920,date. given the from days n of date the Calculate to function python a write,"from datetime import datetime, timedelta
def add_days(n, d = datetime.today()):
  return d + timedelta(n)"
5921,unique. are list a in elements all if check to function python a write,"def all_unique(lst):
  return len(lst) == len(set(lst))"
5922,words. of list a into string given a convert to function python a write,"import re
def words(s, pattern = '[a-zA-Z-]+'):
  return re.findall(pattern, s)"
5923,dictionary flat a in values the all of list flat a returns thats function python a write,"def values_only(flat_dict):
  return list(flat_dict.values())"
5924,5 of table multiplication create to program python a write,"n=5
for i in range(1,11):
   print(n,'x',i,'=',n*i)"
5925,numbers of list provided user of median the calculate to function python a write,"def median(list):
  list.sort()
  list_length = len(list)
  if list_length % 2 == 0:
    return (list[int(list_length / 2) - 1] + list[int(list_length / 2)]) / 2
  return float(list[int(list_length / 2)])"
5926,diameter provided user the using circle a of area the find to function python a write,"def area_of_circle(diameter):
  PI = 3.14
  area = (PI/4) * (diameter * diameter)
  print(f'Area Of a Circle {area}')"
5927,interest compound calculate to function python a write,"def compound_interest(principle, rate, time): 
    Amount = principle * (pow((1 + rate / 100), time)) 
    CI = Amount - principle 
    print(f""Compound interest is {CI}"")"
5928,ranges provided user between numbers odd print to function python a write,"def odd_numbers(lower,upper):
  for i in range(lower,upper+1):
    if(i%2!=0):
        print(i)"
5929,string a from punctuations remove to program python a write,"punctuations = '''!()-[]{};:'""\,<>./?@#$%^&*_~'''
my_str = ""Hello!!!, she said ---and went.""
no_punct = """"
for char in my_str:
   if char not in punctuations:
       no_punct = no_punct + char"
5930,dictionary a in exists key a if check to function python a write,"d = {'key1': 'value1', 'key2': 'value2', 'key3': 'value3', 'key4': 'value4'}
def is_key_present(x):
  if x in d:
      print('Key is present in the dictionary')
  else:
      print('Key is not present in the dictionary')"
5931,empty is list the if check to program python a write,"l = []
if not l:
  print(""List is empty"")
else:
  print(""List is not empty"")"
5932,not or unique are list a in elements all if check to function python a write,"def unique(l):
    if len(l)==len(set(l)):
        print(""All elements are unique"")
    else:
        print(""List has duplicates"")"
5933,number provided user a using list a from element removes that function python a write,"def drop(a, n = 1):
  return a[n:]"
5934,sentence of list a in together appear words given if check to function program a write,"def check(sentence, words): 
    res = [all([k in s for k in words]) for s in sentence] 
    return [sentence[i] for i in range(0, len(res)) if res[i]]"
5935,sentence a in words of number the count to program python a write,"test_string = ""This is a good book""
res = len(test_string.split()) 
print (f""The number of words in string are :{str(res)}"")"
5936,bytes in string provided user of length the return to function python a write,"def byte_size(s):
  return len(s.encode('utf-8'))"
5937,3 size of chunks into string the split to program python a write,"str = 'CarBadBoxNumKeyValRayCppSan'
n = 3
chunks = [str[i:i+n] for i in range(0, len(str), n)]
print(chunks)"
5938,not or vote to eligible is person a whether check to program python a write,"age=23
if age>=18:
        status=""Eligible""
else:
    status=""Not Eligible""
print(""You are "",status,"" for Vote."")"
5939,list a from fifteen by divisible numbers get to program python a write,"num_list = [45, 55, 60, 37, 100, 105, 220]
result = list(filter(lambda x: (x % 15 == 0), num_list))
print(f""Numbers divisible by 15 are {result}"")"
5940,code. color hexadecimal a to components RGB of values the convert to function python a write,"def rgb_to_hex(r, g, b):
  return ('{:02X}' * 3).format(r, g, b)"
5941,indexes. of list provided user the on based list a sorts that function python a write,"def sort_by_indexes(lst, indexes, reverse=False):
  return [val for (_, val) in sorted(zip(indexes, lst), key=lambda x: \
          x[0], reverse=reverse)]"
5942,key by dictionary the sort to function python a write,"def sort_dict_by_key(d, reverse = False):
  return dict(sorted(d.items(), reverse = reverse))"
5943,size specified a of lists smaller into list a chunks that function python a write,"from math import ceil
def chunk(lst, size):
  return list(
    map(lambda x: lst[x * size:x * size + size],
      list(range(ceil(len(lst) / size)))))"
5944,file text a in lines of number the count to program python a write,"!touch abc.txt
file = open(""abc.txt"",""r"") 
Counter = 0
Content = file.read() 
CoList = Content.split(""\n"")  
for i in CoList: 
    if i: 
        Counter += 1          
print(f""There are {Counter} number of lines in the file"")"
5945,directory a in files of number the find to program python a write,"import os
dir='.'
list = os.listdir(dir) 
number_files = len(list)
print(f'There are {number_files} file in the directory')"
5946,range specified user a within number a clamp to function python a write,"def clamp_number(num, a, b):
  return max(min(num, max(a, b)), min(a, b))"
5947,list a of element first returns that function python a write,"def head(lst):
  return lst[0]"
5948,left toward times n by list given the rotate to function python a write,"def rotate(lst, offset):
  return lst[offset:] + lst[:offset]"
5949,numbers more or two of average weighted calculate to function python a write,"def weighted_average(nums, weights):
  return sum(x * y for x, y in zip(nums, weights)) / sum(weights)"
5950,matrix a of rows non-empty out filter to program python a write,"test_list = [[4, 5, 6, 7], [], [], [9, 8, 1], []] 
print(f""The original list is :{test_list} "") 
res = [row for row in test_list if len(row) > 0]
print(f""Filtered Matrix {res}"")"
5951,sort odd-even implement to function python a write,"def oddEvenSort(arr, n): 
	isSorted = 0
	while isSorted == 0: 
		isSorted = 1
		temp = 0
		for i in range(1, n-1, 2): 
			if arr[i] > arr[i+1]: 
				arr[i], arr[i+1] = arr[i+1], arr[i] 
				isSorted = 0
		for i in range(0, n-1, 2): 
			if arr[i] > arr[i+1]: 
				arr[i], arr[i+1] = arr[i+1], arr[i] 
				isSorted = 0	
	return"
5952,date. readable to string timestamp unix convert to program python a write,"import datetime
unix_timestamp=""1284105682""
print(
    datetime.datetime.fromtimestamp(
        int(unix_timestamp)
    ).strftime('%Y-%m-%d %H:%M:%S')
)"
5953,"columns through iterate    matrices
 two add to program python a write","X = [[12,7,3],
    [4 ,5,6],
    [7 ,8,9]]
Y = [[5,8,1],
    [6,7,3],
    [4,5,9]]
result = [[0,0,0],
         [0,0,0],
         [0,0,0]]
for i in range(len(X)):
   for j in range(len(X[0])):
       result[i][j] = X[i][j] + Y[i][j]
for r in result:
   print(r)"
5954,"target. specific a to up add they that such numbers two the of indices return integers, of array an Given","input_array = [2, 7, 11, 15]
target = 26
result = []
for i, num in enumerate(input_array):
    for j in range(i+1, len(input_array)):
        print(i,j)"
5955,"ranges. its of summary the return duplicates, without array integer sorted a Given","input_array = [0,1,2,4,5,7]
start=0
result = []
while start < len(input_array):
    end = start 
    while end+1<len(input_array) and ((input_array[end+1] - input_array[end]) == 1):
        end = end + 1
    if end!=start:
        result.append(""{0}-->{1}"".format(input_array[start], input_array[end]))
        print(result)
    else:
        result.append(""{0}"".format(input_array[start]))
        print(result)
    start = end+1
print(result)"
5956,steps. k by right the to elements n of array an Rotate,"org = [1,2,3,4,5,6,7]
result = org[:]
steps = 3
for idx,num in enumerate(org):
    if idx+steps < len(org):
        result[idx+steps] = org[idx]
    else:
        result[idx+steps-len(org)] = org[idx]
print(result)"
5957,"intervals. overlapping all merge number, start by sorted already are which intervals of collection a Given","org_intervals = [[1,3],[2,6],[5,10],[11,16],[15,18],[19,22]]
i = 0
while i < len(org_intervals)-1:
    if org_intervals[i+1][0] < org_intervals[i][1]:
        org_intervals[i][1]=org_intervals[i+1][1]
        del org_intervals[i+1]
        i = i - 1
    i = i + 1
print(org_intervals)"
5958,list each revert and chunks equal 3 a into it slice list a Given,"sampleList = [11, 45, 8, 23, 14, 12, 78, 45, 89]
length = len(sampleList)
chunkSize  = int(length/3)
start = 0
end = chunkSize
for i in range(1, 4, 1):
  indexes = slice(start, end, 1)
  listChunk = sampleList[indexes]
  mylist = [i for i in listChunk]
  print(""After reversing it "", mylist)
  start = end
  if(i != 2):
    end +=chunkSize
  else:
    end += length - chunkSize"
5959,number two of remainder the print and find to program a write,"num1 = 12
num2 = 10
ratio = num1 % num2
print(f'remainder:{ratio}')"
5960,number in digits of sum compute to program Python,"def sumDigits(no):  
    return 0 if no == 0 else int(no % 10) + sumDigits(int(no / 10))   
n = 1234511
print(sumDigits(n))"
5961,List two of Concatenation,"my_list1 = [4,3,2,9,10,44,1]
my_list2 = [5,6,2,8,15,14,12]
print(f""Sum of two list:,{my_list1+my_list2}"")"
5962,List a to Element Adding,"animals = ['cat', 'dog', 'rabbit']
animals.append('guinea pig')
print('Updated animals list: ', animals)"
5963,List Inside Elements Tuple Count,"random = ['a', ('a', 'b'), ('a', 'b'), [3, 4]]
count = random.count(('a', 'b'))
print(""The count of ('a', 'b') is:"", count)"
5964,string a in characters first access,"word = ""Hello World""
letter=word[0]
print(f""First Charecter in String:{letter}"")"
5965,comprehension list by list a Generate,"list = [x for x in range(10)]
print(f""List Generated by list comprehension:{list}"")"
5966,dictionary a print and Create,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Sample Dictionary:{thisdict}"")"
5967,dictionary of length the Calculate,"thisdict = {
  ""brand"": ""Ford"",
  ""model"": ""Mustang"",
  ""year"": 1964
}
print(f""Length of Dictionary:{len(thisdict)}"")"
5968,string a of length Calculate,"word = ""Hello World""
print(f""Length of string: {len(word)}"")"
5969,sring a in spaces of number the Count,"s = ""Count, the number of spaces""
lenx = s.count(' ')
print(f""number of spaces in sring: {lenx}"")"
5970,digits contains string if test,"word = ""Hello World""
check = word.isdigit()
print(f""String contains digits?:{check}"")"
5971,string a in Digits total Counting,"str1 = ""abc4234AFde""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.isdigit()):
    digitCount += 1
print('Number of digits: ',digitCount)"
5972,string a in Case lower total Counting,"str1 = ""abc4234AFdeaa""
digitCount = 0
for i in range(0,len(str1)):
  char = str1[i]
  if(char.lower()):
    digitCount += 1
print('Number total lower Case: ',digitCount)"
5973,lists two from numbers of pair every of product the Compute,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [a*b for a in list1 for b in list2]
print(f""Product of every pair of numbers from two lists:{final}"")"
5974,lists two of product pair-wise the Calculate,"list1 = [1, 2, 3]
list2 = [5, 6, 7] 
final = [list1[i]*list2[i] for i in range(len(list1))]
print(f""pair-wise product of two lists:{final}"")"
5975,vector two of Addition,"v1 = [1,2,3]
v2 = [1,2,3]
s1 = [0,0,0]
for i in range(len(v1)):
  s1[i] = v1[i] + v2[i]
print(f""New Vector:{s1}"")"
5976,JSON to dictionary Convert,"import json
person_dict = {'name': 'Bob',
'age': 12,
'children': None
}
person_json = json.dumps(person_dict)
print(person_json)"
5977,JSON in key a for value a is there if Check,"import json
studentJson =""""""{
   ""id"": 1,
   ""name"": ""Piyush Jain"",
   ""class"": null,
   ""percentage"": 35,
   ""email"": ""piyushjain220@gmail.com""
}""""""
student = json.loads(studentJson)
if not (student.get('email') is None):
     print(""value is present for given JSON key"")
     print(student.get('email'))
else:
    print(""value is not present for given JSON key"")"
5978,file a into it write and Python in keys JSON Sort,"import json
sampleJson = {""id"" : 1, ""name"" : ""value2"", ""age"" : 29}
with open(""sampleJson.json"", ""w"") as write_file:
    json.dump(sampleJson, write_file, indent=4, sort_keys=True)
print(""Done writing JSON data into a file"")"
5979,strings of list the from strings empty Remove,"list1 = [""Mike"", """", ""Emma"", ""Kelly"", """", ""Brad""]
resList = [i for i in (filter(None, list1))]
print(resList)"
5980,5 by divisible is which 999 and 100 between integers random 3 Generate,"import random
print(""Generating 3 random integer number between 100 and 999 divisible by 5"")
for num in range(3):
    print(random.randrange(100, 999, 5), end=', ')"
5981,5 length of String random  Generate,"import random
import string
def randomString(stringLength):
    """"""Generate a random string of 5 charcters""""""
    letters = string.ascii_letters
    return ''.join(random.choice(letters) for i in range(stringLength))
print (""Random String is "", randomString(5) )"
5982,"s2 and s1 strings, two given s1 of middle the in s2 appending by string new a create will which program a Write","def appendMiddle(s1, s2):
  middleIndex = int(len(s1) /2)
  middleThree = s1[:middleIndex:]+ s2 +s1[middleIndex:]
  print(""After appending new string in middle"", middleThree)
appendMiddle(""Ault"", ""Kelly"")"
5983,first come should letters lowercase that such characters string Arrange,"str1 = ""PyNaTive""
lower = []
upper = []
for char in str1:
    if char.islower():
        lower.append(char)
    else:
        upper.append(char)
sorted_string = ''.join(lower + upper)
print(sorted_string)"
5984,string given a from symbols/Punctuation special Remove,"import string
str1 = ""/*Jon is @developer & musician""
new_str = str1.translate(str.maketrans('', '', string.punctuation))
print(""New string is "", new_str)"
5985,string from integers than other characters the all Removal,"str1 = 'I am 25 years and 10 months old'
res = """".join([item for item in str1 if item.isdigit()])
print(res)"
5986,elemen each of count the show to dictionary a create and element each of occurrence the count and it iterate list a Given,"sampleList = [11, 45, 8, 11, 23, 45, 23, 45, 89]
countDict = dict()
for item in sampleList:
  if(item in countDict):
    countDict[item] += 1
  else:
    countDict[item] = 1
print(""Printing count of each item  "",countDict)"
5987,set first the from elements those remove and intersection the find sets two a Given,"firstSet  = {23, 42, 65, 57, 78, 83, 29}
secondSet = {57, 83, 29, 67, 73, 43, 48}
intersection = firstSet.intersection(secondSet)
for item in intersection:
  firstSet.remove(item)
print(""First Set after removing common element "", firstSet)"
5988,octal to number decimal Convert,"print('%o,' % (8))"
5989,object datetime a into string Convert,"from datetime import datetime
date_string = ""Feb 25 2020  4:20PM""
datetime_object = datetime.strptime(date_string, '%b %d %Y %I:%M%p')
print(datetime_object)"
5990,date given a from week a Subtract,"from datetime import datetime, timedelta
given_date = datetime(2020, 2, 25)
days_to_subtract = 7
res_date = given_date - timedelta(days=days_to_subtract)
print(res_date)"
5991,date? given a of week of day the Find,"from datetime import datetime
given_date = datetime(2020, 7, 26)
print(given_date.strftime('%A'))"
5992,date given a to hours 12 and days) (7 week Add,"from datetime import datetime, timedelta
given_date = datetime(2020, 3, 22, 10, 00, 00)
days_to_add = 7
res_date = given_date + timedelta(days=days_to_add, hours=12)
print(res_date)"
5993,dates given two between days of number Calculate,"from datetime import datetime
date_1 = datetime(2020, 2, 25).date()
date_2 = datetime(2020, 9, 17).date()
delta = None
if date_1 > date_2:
    delta = date_1 - date_2
else:
    delta = date_2 - date_1
print(""Difference is"", delta.days, ""days"")"
5994,10 to 0 from numbers of sum the calculate to function recursive a Write,"def calculateSum(num):
    if num:
        return num + calculateSum(num-1)
    else:
        return 0
res = calculateSum(10)
print(res)"
5995,"list the from number given a of occurrence all remove list, Python a Given","num1 = 20
list1 = [5, 20, 15, 20, 25, 50, 20]
def removeValue(sampleList, val):
   return [value for value in sampleList if value != val]
resList = removeValue(list1, num1)
print(resList)"
5996,number random secure reliable a generating,"import secrets
print(""Random integer number generated using secrets module is "")
number = secrets.randbelow(30)
print(number)"
5997,identical are list a in elements all if Find,"listOne = [20, 20, 20, 20]
print(""All element are duplicate in listOne:"", listOne.count(listOne[0]) == len(listOne))"
5998,expression single a in dictionaries two Merge,"currentEmployee = {1: 'Scott', 2: ""Eric"", 3:""Kelly""}
formerEmployee  = {2: 'Eric', 4: ""Emma""}
allEmployee = {**currentEmployee, **formerEmployee}
print(allEmployee)"
5999,number that to 0 from numbers the all return and number a accept to function python a write 5,"def print_numbers(x):
    for i in range(x):
        print(i)"
6000,stings two concatenates that function python a write 6,"def concat(s1, s2):
    return s1 + s2"
6001,list a from number nth every return to function python a write 7,"def every_nth_number(lst, n):
    return lst[::n]"
6002,27 plus array an of length the return to function python a write 11,"def return_length(arr):
    return len(arr) + 27"
6003,tree binary a implement to function a write 15,"class BinTree:
    def __init__(self, key):
        self.left = None
        self.right = None
        self.val = key"
6004,list linked a initialize to function a write 17,"class Cell:
    def __init__(self, val):
        self.val = val
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None"
6005,dictionary a as sentence given a in token each of count the returns which function a write 20,"from collections import Counter
def count_tokens(sent):
    sent = list(sent)
    return dict(Counter(sent))"
6006,string a from punctuations the all removes that function a write 21,"import string
def remove_punct(s):
    return """".join(ch for ch in s if ch not in set(string.punctuation))"
6007,size same the of lists two between squares of sum residual the calculate to function a write 23,"def rss(lst1, lst2):
    diff = [lst1[x] - lst2[x] for x in range(len(lst1))]
    return sum(list(map(lambda x: x ** 2, diff)))"
6008,directory current the in files the all print to funtion a write 25,"import os
def list_files():
    return os.listdir()"
6009,sum their returns and only numbers even for list a filters that program a write 27,"def map_reduce(lst):
    return reduce(lambda x, y: x + y, filter(lambda x: x % 2 == 0, lst))
print(map_reduce([1, 2, 3, 4, 5]))"
6010,bubblesort using list a sort to program a write 29,"def bubblesort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr
print(bubblesort([1, 33, 192, 21, 0]))"
6011,"otherwise False and equal, are two the if True returns and dictionaries or lists or numbers two accepts that function a write 30","def check_assert(item1, item2):
    try:
        assert item1 == item2
        return True
    except AssertionError:
        return False"
6012,"vertices two between edge an add and graph, directed a create to python in program a write 32","from collections import defaultdict
class Graph:
    def __init__(self):
        self.graph = defaultdict(list)
    def addEdge(self, f, t):
        self.graph[f].append(t)
    def printEdge(self):
        for ed in list(self.graph.keys()):
            print(f""From : {ed}, To : {self.graph[ed]}"")
g = Graph()
g.addEdge(""a"", ""b"")
g.addEdge(""a"", ""e"")
g.addEdge(""b"", ""d"")
g.addEdge(""c"", ""d"")
g.addEdge(""c"", ""a"")
g.printEdge()"
6013,list. the in elements 5 first the except values all print to needs function the Then included). (both 20 and 1 between numbers of square are values the where list a generate can which function a Define 46,"import requests
def get_encoding(url):
    data = requests.get(url)
    return data.encoding"
6014,randomly False / True returns that generator a Write 49,"import random
def generate_tf():
    rand = random.random()
    if rand > 0.5:
        yield True
    else:
        yield False"
6015,list modified the prints and end the at length given a to list python given a pads that program python a Write 55,"def pad_arr_end(arr, pad_len):
    pad_arr = [0] * (pad_len - len(arr))
    return arr.extend(pad_arr)
tmp = [1, 2, 3, 4, 5]
pad_arr_end(tmp, 10)
print(tmp)"
6016,function activation tanh the implement to function python a write 57,"import math
def tanh(x):
    return (math.exp(2 * x) - 1) / (math.exp(2 * x) + 1)"
6017,ellipse an of area the prints and calculates that program python a Write 58,"import math
class Ellipse:
    def __init__(self, a, b):
        self.major_axis = b
        self.minor_axis = a
    def area(self):
        return math.pi * self.major_axis * self.minor_axis
ellipse = Ellipse(2, 10)
print(ellipse.area())"
6018,10 and 0 between numbers prints that loop a between delay time a adds that program python a Write 59,"import time
def print_loop_with_delay(sec):
    for i in range(0, 10):
        time.sleep(sec)
        print(i)"
6019,numbers of list a of deviation standard the return to function python a write 61,"import math
def st_dev(arr):
    avg = sum(arr) / len(arr)
    ss_dev = sum([(x - avg) ** 2 for x in arr])
    return math.sqrt(ss_dev / (len(arr) - 1))"
6020,data the of mode return to function python a write 62,"import statistics
def mode(arr):
    return statistics.mode(arr)"
6021,comprehension. list and module random using inclusive 10 and 0 between number even random a output to program a write 65,"import random
print(random.choice([i for i in range(11) if i % 2 == 0]))"
6022,"comprehension. list and module random using inclusive 10 and 0 between 7, and 5 by divisible is which number, random a output to program a write 66","import random
print(random.choice([i for i in range(201) if i % 5 == 0 and i % 7 == 0]))"
6023,inclusive. 200 and 100 between numbers random 5 with list a generate to program a write 67,"import random
print(random.sample(range(100), 5))"
6024,inclusive. 15 and 7 between number integer a print randomly to program a write 70,"import random
print(random.randrange(7, 16))"
6025,"times. 100 for ""1+1"" of execution of time running the print to program a write 72","from timeit import Timer
t = Timer(""for i in range(100):1+1"")
print(t.timeit())"
6026,"[3,6,7,8]. list the print and shuffle to program a write 73","from random import shuffle
li = [3, 6, 7, 8]
shuffle(li)
print(li)"
6027,"[12,24,35,70,88,120,155]. in 7 and 5 by divisible are which numbers delete removing after list the print to program a write comprehension, list using By 77","li = [12, 24, 35, 70, 88, 120, 155]
li = [x for x in li if x % 5 != 0 and x % 7 != 0]
print(li)"
6028,"[12,24,35,24,88,120,155]. in 24 value the removing after list the print to program a write comprehension, list using By 81","li = [12, 24, 35, 24, 88, 120, 155]
li = [x for x in li if x != 24]
print(li)"
6029,string a in character each of numbers the print and count which program a write 85,"dic = {}
s = ""JRR Tolkien""
for s in s:
    dic[s] = dic.get(s, 0) + 1
print(""\n"".join([""%s,%s"" % (k, v) for k, v in dic.items()]))"
6030,it in words of number the counts and string a accepts which program a write 86,"def num_of_words(st):
    return len(st.split())"
6031,indexes. even have that characters the prints string a accepts which function a write 87,"def every_alternate_char(s):
    s = s[::2]
    return s"
6032,"[1,2,3] of permutations all prints which program a write 88","import itertools
print(list(itertools.permutations([1, 2, 3])))"
6033,number decimal given a up round to function python a Write 91,"import math
def apply_floor(num):
    return math.floor(num)"
6034,number decimal given a off round to function python a Write 92,"def apply_round(num):
    return round(num)"
6035,number a of compliment One's find to function python a write 93,"import math
def OnesComplement(num):
    bits = int(math.floor(math.log(num) / math.log(2)) + 1)
    return ((1 << bits) - 1) ^ num"
6036,it reverses and string a accepts that function python  a write 99,"def reverse(st):
    return st[::-1]"
6037,pallindrome a is string a if checks that program python a write 100,"def is_palindrome(st):
    st = st.lower()
    rev_st = st[::-1]
    try:
        assert rev_st == st
        return True
    except AssertionError:
        return False
st = ""Nitin""
print(is_palindrome(st))"
6038,"numbers two add to program python a write utf-8
 coding:","num1 = 5465461
num2 = 8765468
sum = num1 + num2
print(f'Sum: {sum}')"
6039,sum the return and numbers provided user two add to function python a write,"def add_two_numbers(num1, num2):    
    sum = num1 + num2    
    return sum"
6040,list of length find to program a write,"l = [1,2,3,4,5]
print(len(l))"
6041,list of length find to function a write,"def get_list_length(l):
    return len(l)"
6042,tuple to list convert to program a write,"l = ['a',4,5]
print(f'tuple:{tuple(l)}')"
6043,list of length find to function a write,"def tuple_lenght(t):
    return len(t)"
6044,scale Fahrenheit to scale Celsius convert to code Python write,"def Cel_To_Fah(n): 
    return (n*1.8)+32
n = 20
print(int(Cel_To_Fah(n)))"
6045,Kelvin to Celsius degree from  temperature convert to Function write,"def Celsius_to_Kelvin(C): 
    return (C + 273.15) 
C = 100 
print(""Temperature in Kelvin ( K ) = "",  
                    Celsius_to_Kelvin(C))"
6046,degree 180 by matrix the  Rotate to Function  write,"def rotateMatrix(mat): 
    N = 3  
    i = N - 1;  
    while(i >= 0): 
        j = N - 1; 
        while(j >= 0): 
            print(mat[i][j], end = "" ""); 
            j = j - 1; 
        print(); 
        i = i - 1;"
6047,code Driven,"mat = [[1, 2, 3], 
       [ 4, 5, 6 ], 
       [ 7, 8, 9 ]]; 
rotateMatrix(mat);"
6048,bits d by n rotate left to Function  write,"def leftRotate(n, d): 
    INT_BITS = 32
    return (n << d)|(n >> (INT_BITS - d)) 
n = 16
d = 2
print(""Left Rotation of"",n,""by"",d,""is"",end="" "") 
print(leftRotate(n, d))"
6049,length d by right and left string rotate to Function,"def rotate(input,d): 
    Lfirst = input[0 : d] 
    Lsecond = input[d :] 
    Rfirst = input[0 : len(input)-d] 
    Rsecond = input[len(input)-d : ] 
    print (""Left Rotation : "", (Lsecond + Lfirst) ) 
    print (""Right Rotation : "", (Rsecond + Rfirst)) 
input = 'GeeksforGeeks'
d=2
rotate(input,d)"
6050,string a from substring a create to demonstrate to code Python3 write,"ini_string = 'xbzefdgstb'
print (""initial_strings : "", ini_string) 
sstring_strt = ini_string[:2] 
sstring_end = ini_string[3:] 
print (""print resultant substring from start"", sstring_strt) 
print (""print resultant substring from end"", sstring_end)"
6051,string from substring a create to demonstrate to code Python3 write,"ini_string = 'xbzefdgstb'
print (""initial_strings : "", ini_string) 
sstring_alt = ini_string[::2] 
sstring_gap2 = ini_string[::3] 
print (""print resultant substring from start"", sstring_alt) 
print (""print resultant substring from end"", sstring_gap2)"
6052,set() Using lists two of difference get t code Python write,"def Diff(li1, li2):
	return (list(list(set(li1)-set(li2)) + list(set(li2)-set(li1))))
li1 = [10, 15, 20, 25, 30, 35, 40]
li2 = [25, 40, 35]
print(Diff(li1, li2))"
6053,integers for round for program a write,"integer = 18
print(f""Round off value : {round(integer , -1)}"")"
6054,program a pointwrite floating for program a write,"print(f""Round off value : {round(51.6)}"")"
6055,operator conditional demonstrate to Program write,"a, b = 10, 20
min = a if a < b else b 
print(min)"
6056,"function ""any"" using program python a write","print (any([False, True, False, False]))"
6057,"function ""all"" using program python a write","print (all([False, True, False, False]))"
6058,lambda + map() + any() using value None any has tuple if Check of working demonstrate to code Python3 write,"test_tup = (10, 4, 5, 6, None) 
res = any(map(lambda ele: ele is None, test_tup)) 
print(""Does tuple contain any None value ? : "" + str(res))"
6059,all() + not using value None any has tuple if Check of working demonstrate to code Python3 write,"test_tup = (10, 4, 5, 6, None) 
print(""The original tuple : "" + str(test_tup))  
res = not all(test_tup) 
print(""Does tuple contain any None value ? : "" + str(res))"
6060,row. by row list multidimensional complete of printing demonstrate to program Python write,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
for record in a: 
	print(record)"
6061,brackets square using list multidimensional access can we that demonstrate to program Python write,"a = [ [2, 4, 6, 8 ], 
    [ 1, 3, 5, 7 ], 
    [ 8, 6, 4, 2 ], 
    [ 7, 5, 3, 1 ] ] 
for i in range(len(a)) : 
    for j in range(len(a[i])) : 
        print(a[i][j], end="" "") 
    print()"
6062,sublist a Adding for program a write,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
a.append([5, 10, 15, 20, 25]) 
print(a)"
6063,sublist a Extending  for program a write,"a = [[2, 4, 6, 8, 10], [3, 6, 9, 12, 15], [4, 8, 12, 16, 20]] 
a[0].extend([12, 14, 16, 18]) 
print(a)"
6064,join() + split() using String in replace word Rear of working demonstrate to code Python3 write,"test_str = ""GFG is good""
print(""The original string is : "" + test_str) 
rep_str = ""best""
res = "" "".join(test_str.split(' ')[:-1] + [rep_str]) 
print(""The String after performing replace : "" + res)"
6065,join() + rfind() using String in replace word Rear of working demonstrate to code Python3 write,"test_str = ""GFG is good""
print(""The original string is : "" + test_str) 
rep_str = ""best""
res = test_str[: test_str.rfind(' ')] + ' ' + rep_str 
print(""The String after performing replace : "" + res)"
6066,sort() Using List Strings in Character Rear by Sort of working demonstrate to code Python3 write,"def get_rear(sub): 
    return sub[-1] 
test_list = ['gfg', 'is', 'best', 'for', 'geeks'] 
print(""The original list is : "" + str(test_list)) 
test_list.sort(key = get_rear) 
print(""Sorted List : "" + str(test_list))"
6067,comprehension list + next() using Rear from String Non-None Kth demonstrate to code Python3 write,"test_list = ["""", """", ""Akshat"", ""Nikhil""] 
print(""The original list : "" + str(test_list)) 
K = 2
test_list.reverse() 
test_list = iter(test_list) 
for idx in range(0, K): 
    res = next(sub for sub in test_list if sub) 
print(""The Kth non empty string from rear is : "" + str(res))"
6068,filter() using Rear from String Non-None Kth demonstrate to code Python write,"test_list = ["""", """", ""Akshat"", ""Nikhil""] 
print(""The original list : "" + str(test_list)) 
K = 2
res = list (filter(None, test_list))[-K] 
print(""The Kth non empty string from rear is : "" + str(res))"
6069,image below the in shown as Dictionary Nested a Creating program a write,"Dict = {1: 'Geeks', 2: 'For', 
        3:{'A' : 'Welcome', 'B' : 'To', 'C' : 'Geeks'}} 
print(Dict)"
6070,key using element Accessing  and Dictionary a Creating python a write,"Dict = {'Dict1': {1: 'Geeks'}, 
    'Dict2': {'Name': 'For'}} 
print(Dict['Dict1']) 
print(Dict['Dict1'][1]) 
print(Dict['Dict2']['Name'])"
6071,Dictionary entire Deleting for program  a write,"Dict = {1: 'Geeks', 'name': 'For', 3: 'Geeks'} 
Dict.clear() 
print(""\nDeleting Entire Dictionary: "") 
print(Dict)"
6072,comprehension list Using Lists of List to Dictionaries of List Convert of working demonstrate to code Python3 a write,"test_list = [{'Nikhil' : 17, 'Akash' : 18, 'Akshat' : 20}, 
            {'Nikhil' : 21, 'Akash' : 30, 'Akshat' : 10}, 
            {'Nikhil' : 31, 'Akash' : 12, 'Akshat' : 19}] 
print(""The original list is : "" + str(test_list)) 
res = [[key for key in test_list[0].keys()], *[list(idx.values()) for idx in test_list ]] 
print(""The converted list : "" + str(res))"
6073,list to string convert to code Python,"def Convert_2(string): 
    li = list(string.split(""-"")) 
    return li 
str1 = ""Geeks-for-Geeks""
print(Convert(str1))"
6074,eval + map() Using tuples of list to strings of list convert demonstrate to code Python3 write,"test_list = ['4, 1', '3, 2', '5, 3'] 
print(""The original list : "" + str(test_list)) 
res = list(map(eval, test_list)) 
print(""The list after conversion to tuple list : "" + str(res))"
6075,comprehension list Using tuples of list in tuples Combining demonstrate to code Python3 write,"test_list = [([1, 2, 3], 'gfg'), ([5, 4, 3], 'cs')] 
print(""The original list : "" + str(test_list)) 
res = [ (tup1, tup2) for i, tup2 in test_list for tup1 in i ] 
print(""The list tuple combination : "" + str(res))"
6076,join() + comprehension list using list of list to tuple of list of conversion demonstrate to code Python3 write,"test_list = [('G', 'E', 'E', 'K', 'S'), ('F', 'O', 'R'), 
                            ('G', 'E', 'E', 'K', 'S')] 
print (""The original list is : "" + str(test_list)) 
res = [''.join(i) for i in test_list] 
print (""The list after conversion to list of string : "" + str(res))"
6077,join() + map() using list of list to tuple of list of conversion demonstrate to code Python3 write,"test_list = [('G', 'E', 'E', 'K', 'S'), ('F', 'O', 'R'), 
                            ('G', 'E', 'E', 'K', 'S')] 
print (""The original list is : "" + str(test_list)) 
res = list(map(''.join, test_list)) 
print (""The list after conversion to list of string : "" + str(res))"
6078,met criteria certain if tuples the remove to demonstrate to code Python write,"ini_tuple = [('b', 100), ('c', 200), ('c', 45), 
                        ('d', 876), ('e', 75)] 
print(""intial_list"", str(ini_tuple)) 
result = [] 
for i in ini_tuple: 
    if i[1] <= 100: 
        result.append(i) 
print (""Resultant tuple list: "", str(result))"
6079,isdigit() + filter() + lambda Using Strings Numeric all with Tuples Extract of working demonstrate to code Python3 write,"test_list = [(""45"", ""86""), (""Gfg"", ""1""), (""98"", ""10""), (""Gfg"", ""Best"")] 
print(""The original list is : "" + str(test_list)) 
res = list(filter(lambda sub : all(ele.isdigit() for ele in sub), test_list)) 
print(""Filtered Tuples : "" + str(res))"
6080,"line. single a on sequence comma-separated a in printed be should obtained numbers The included). (both 3200 and 2000 between 5, of multiple a not are but 7 by divisible are which numbers such all find will which program a Write","l=[]
for i in range(2000, 3201):
    if (i%7==0) and (i%5!=0):
        l.append(str(i))
print ','.join(l)"
6081,capitalized. sentence the in characters all making after lines the prints and input as lines of sequence accepts that program a Write,"lines = []
while True:
    s = raw_input()
    if s:
        lines.append(s.upper())
    else:
        break;
for sentence in lines:
    print sentence"
6082,digits. and letters of number the calculate and sentence a accepts that program a Write,"s = raw_input()
d={""DIGITS"":0, ""LETTERS"":0}
for c in s:
    if c.isdigit():
        d[""DIGITS""]+=1
    elif c.isalpha():
        d[""LETTERS""]+=1
    else:
        pass
print ""LETTERS"", d[""LETTERS""]
print ""DIGITS"", d[""DIGITS""]"
6083,numbers. comma-separated of sequence a by input is list The list. a in number odd each square to comprehension list a Use,"values = raw_input()
numbers = [x for x in values.split("","") if int(x)%2!=0]
print "","".join(numbers)"
6084,alphanumerically. key the sorting after output should output The input. the from words the of frequency the compute to program a Write,"freq = {}  
line = raw_input()
for word in line.split():
    freq[word] = freq.get(word,0)+1
words = freq.keys()
words.sort()
for w in words:
    print ""%s:%d"" % (w,freq[w])"
6085,console. in it print and string a into integer a convert can that function a Define,"def printValue(n):
	print str(n)"
6086,console. in it print then and them concatenate and input as strings two accept can that function a Define,"def printValue(s1,s2):
	print s1+s2"
6087,"line. by line strings l al print should function the then length, same the have strings two If console. in length maximum with string the print and input as strings two accept can that function a Define","def printValue(s1,s2):
	len1 = len(s1)
	len2 = len(s2)
	if len1>len2:
		print s1
	elif len2>len1:
		print s2
	else:
		print s1
		print s2"
6088,keys. of square are values the and included) (both 3 and 1 between numbers are keys the where dictionary a print can which function a Define,"def printDict():
	d=dict()
	d[1]=1
	d[2]=2**2
	d[3]=3**2
	print d"
6089,keys. of square are values the and included) (both 20 and 1 between numbers are keys the where dictionary a print can which function a Define,"def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	print d"
6090,only. values the print just should function The keys. of square are values the and included) (both 20 and 1 between numbers are keys the where dictionary a generate can which function a Define,"def printDict():
	d=dict()
	for i in range(1,21):
		d[i]=i**2
	for (k,v) in d.items():	
		print v"
6091,included). (both 20 and 1 between numbers of square are values the where list a print and generate can which function a Define,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li"
6092,list. the in elements 5 last the print to needs function the Then included). (both 20 and 1 between numbers of square are values the where list a generate can which function a Define,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li[-5:]"
6093,list. the in elements 5 first the except values all print to needs function the Then included). (both 20 and 1 between numbers of square are values the where list a generate can which function a Define,"def printList():
	li=list()
	for i in range(1,21):
		li.append(i**2)
	print li[5:]"
6094,"line. one in values half last the and line one in values half first the print to program a write (1,2,3,4,5,6,7,8,9,10), tuple given a With","tp=(1,2,3,4,5,6,7,8,9,10)
tp1=tp[:5]
tp2=tp[5:]
print tp1
print tp2"
6095,"[1,2,3,4,5,6,7,8,9,10]. is: list The function. filter using by list a in numbers even filter can which program a Write","li = [1,2,3,4,5,6,7,8,9,10]
evenNumbers = filter(lambda x: x%2==0, li)
print evenNumbers"
6096,included). (both 20 and 1 between number even are elements whose list a make to filter() can which program a Write,"evenNumbers = filter(lambda x: x%2==0, range(1,21))
print evenNumbers"
6097,included). (both 20 and 1 between numbers of square are elements whose list a make to map() can which program a Write,"squaredNumbers = map(lambda x: x**2, range(1,21))
print squaredNumbers"
6098,printNationality. called method static a has which American named class a Define,"class American(object):
    @staticmethod
    def printNationality():
        print ""America""
anAmerican = American()
anAmerican.printNationality()
American.printNationality()"
6099,NewYorker. subclass its and American named class a Define,"class American(object):
    pass
class NewYorker(American):
    pass
anAmerican = American()
aNewYorker = NewYorker()
print anAmerican
print aNewYorker"
6100,area. the compute can which method a has class Rectangle The width. and length a by constructed be can which Rectangle named class a Define,"class Rectangle(object):
    def __init__(self, l, w):
        self.length = l
        self.width  = w
    def area(self):
        return self.length*self.width
aRectangle = Rectangle(2,10)
print aRectangle.area()"
6101,exception. RuntimeError a raise,raise RuntimeError('something wrong')
6102,attribute. as message string a takes which class exception custom a Define,"class MyError(Exception):
    def __init__(self, msg):
        self.msg = msg
error = MyError(""something wrong"")"
6103,"only. letters of composed are names company and names user Both address. email given a of name company the print to program write format, ""username@companyname.com"" the in addresses email some have we that Assuming","import re
emailAddress = raw_input()
pat2 = ""(\w+)@(\w+)\.(com)""
r2 = re.match(pat2,emailAddress)
print r2.group(2)"
6104,"world"". ""hello string unicode a Print","unicodeString = u""hello world!""
print unicodeString"
6105,utf-8. by encoded string unicode a to it convert to and string ASCII an read to program a Write,"s = raw_input()
u = unicode( s ,""utf-8"")
print u"
6106,f(0)=1 and n>0 when f(n)=f(n-1)+100 compute: to program a Write,"def f(n):
    if n==0:
        return 0
    else:
        return f(n-1)+100
n=int(raw_input())
print f(n)"
6107,console. by input n given a with form separated comma in Sequence Fibonacci the print to comprehension list using program a Write,"def f(n):
    if n == 0: return 0
    elif n == 1: return 1
    else: return f(n-1)+f(n-2)
n=int(raw_input())
values = [str(f(x)) for x in range(0, n+1)]
print "","".join(values)"
6108,"even. is [2,4,6,8] list the in number every that verify to statements assert write","li = [2,4,6,8]
for i in li:
    assert i%2==0"
6109,"comprehension. list and module random using inclusive 10 and 0 between 7, and 5 by divisible is which number, random a output to program a write","import random
print random.choice([i for i in range(201) if i%5==0 and i%7==0])"
6110,"inclusive. 1000 and 1 between , 7 and 5 by divisible are which numbers, 5 with list a generate randomly to program a write","import random
print random.sample([i for i in range(1,1001) if i%5==0 and i%7==0], 5)"
6111,inclusive. 15 and 7 between number integer a print randomly to program a write,"import random
print random.randrange(7,16)"
6112,"world!"". world!hello world!hello world!hello ""hello string the decompress and compress to program a write","import zlib
s = 'hello world!hello world!hello world!hello world!'
t = zlib.compress(s)
print t
print zlib.decompress(t)"
6113,"times. 100 for ""1+1"" of execution of time running the print to program a write","from timeit import Timer
t = Timer(""for i in range(100):1+1"")
print t.timeit()"
6114,"[12,24,35,70,88,120,155]. in numbers 4th,6th 2nd, 0th, the removing after list the print to program a write comprehension, list using By","li = [12,24,35,70,88,120,155]
li = [x for (i,x) in enumerate(li) if i%2!=0]
print li"
6115,"0. is element each whose array 3D 3*5*8 a generate program a write comprehension, list using By","array = [[ [0 for col in range(8)] for col in range(5)] for row in range(3)]
print array"
6116,"reserved. order original with values duplicate all removing after list this print to program a write [12,24,35,24,88,120,155,88,120,155], list given a With","def removeDuplicate( li ):
    newli=[]
    seen = set()
    for item in li:
        if item not in seen:
            seen.add( item )
            newli.append(item)
    return newli
li=[12,24,35,24,88,120,155,88,120,155]
print removeDuplicate(li)"
6117,"class. Female for ""Female"" and class Male for ""Male"" print can which ""getGender"" method a have classes All Female. and Male classes: child two its and Person class a Define","class Person(object):
    def getGender( self ):
        return ""Unknown""
class Male( Person ):
    def getGender( self ):
        return ""Male""
class Female( Person ):
    def getGender( self ):
        return ""Female""
aMale = Male()
aFemale= Female()
print aMale.getGender()
print aFemale.getGender()"
6118,order. reverse in it print and console from string a accepts which program a write,"s=raw_input()
s = s[::-1]
print s"
6119,string a in vowels of count print to program a write,"st = ""ammaradil""
vowle = ['a', 'e', 'i', 'o', 'u']
count = 0
for s in st:
    if s in vowle:
        count = count+1
print(""Count"", count)"
6120,case upper to string convert to program write,"st = ""ammar adil""
upper_st = st.upper()
print(""Upper Case"", upper_st)"
6121,arrays 2 of union find to program a write,"a = {1, 2, 3, 4}
b = {3, 4, 5, 6}
union_both = a.union(b)
print(""Union"", union_both)"
6122,intersection find to program a write,"a = {1, 2, 3, 4}
b = {3, 4, 5, 6}
intersection_both = a.intersection(b)
print(""Intersection"", intersection_both)"
6123,format beautiful in array print create to program a write,"a = [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16]]
for i in a:
    row = '|'
    for b in i:
        row = row + ' ' + str(b)
    print(row + ' ' + '|')"
6124,matrix zero create to program a write,"rows = 2
cols = 3
M = []
while len(M) < rows:
    M.append([])
    while len(M[-1]) < cols:
        M[-1].append(0.0)
print(""Zero Matrix"")
for i in range(rows):
    row = '|'
    for b in range(cols):
        row = row + ' ' + str(M[i][b])
    print(row + ' ' + '|')"
6125,"separator as character hash a using string, a into tuple a in items all join to program a write","myTuple = (""John"", ""Peter"", ""Vicky"")
x = ""#"".join(myTuple)
print(x)"
6126,number a of factorinal find to program a write,"import math
number = 8
fa = math.factorial(number)
print('Factorial', fa)"
6127,number a of log find to program a write,"import math
num = 5
base = 7
print(""Log_x_b"", math.log(num, base))"
6128,number a of cosine find to program a write,"import math
num = 45
print(""Cosine"", math.cos(num))"
6129,number a of sin find to program a write,"import math
num = 45
print(""Sin"", math.sin(num))"
6130,number a of tangent find to program a write,"import math
num = 45
print(""Tangent"", math.tan(num))"
6131,numbers two of OR wise bit print to program a Write,"a = 60
b = 13
c = a | b
print(""OR"", c)"
6132,number a of Complement Ones Binary calculate to program a Write,"a = 60
c = ~a
print(""Binary Ones Complement"", c)"
